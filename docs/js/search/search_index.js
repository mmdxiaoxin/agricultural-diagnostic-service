var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AiService.html",[0,1.292,1,2.372]],["body/entities/AiService.html",[0,1.068,1,2.839,2,1.606,3,0.095,4,0.086,5,0.076,6,4.33,7,5.584,8,3.084,9,0.224,10,1.016,11,5.244,12,5.244,13,5.244,14,3.063,15,1.622,16,4.763,17,3.879,18,5.539,19,4.763,20,2.944,21,3.336,22,0.422,23,0.011,24,4.702,25,1.514,26,5.244,27,5.084,28,0.578,29,3.514,30,4.702,31,5.084,32,3.514,33,4.702,34,5.084,35,3.514,36,3.357,37,3.543,38,3.83,39,2.889,40,3.713,41,3.514,42,1.008,43,3.301,44,4.044,45,2.478,46,3.514,47,3.713,48,2.889,49,3.106,50,3.514,51,0.783,52,2.834,53,3.514,54,3.514,55,4.054,56,3.514,57,5.122,58,4.404,59,4.763,60,5.748,61,1.801,62,3.514,63,2.839,64,3.514,65,0.214,66,3.628,67,5.748,68,1.068,69,3.063,70,3.495,71,1.801,72,4.054,73,2.801,74,3.514,75,3.514,76,2.59,77,0.105,78,0.096,79,0.854,80,2.281,81,0.006,82,0.006]],["title/entities/AiServiceAccessLog.html",[0,1.292,24,2.758]],["body/entities/AiServiceAccessLog.html",[0,1.408,1,4.41,2,2.118,3,0.126,4,0.113,5,0.101,6,4.308,7,5.555,9,0.204,10,1.231,17,3.999,22,0.415,23,0.011,24,3.999,25,1.492,28,0.57,36,3.158,37,3.283,38,3.604,39,2.457,40,3.158,51,1.26,52,3.283,65,0.201,66,3.643,68,1.408,69,3.158,70,4.896,71,4.132,77,0.138,78,0.127,79,1.497,81,0.008,82,0.008,83,3.693,84,6.922,85,6.922,86,6.922,87,6.922,88,3.389,89,4.066,90,4.632,91,5.084,92,4.632,93,3.192,94,4.632,95,4.066,96,4.632,97,4.632,98,4.632,99,3.788,100,4.245,101,3.007,102,4.632,103,4.632,104,1.007,105,4.066]],["title/entities/AiServiceConfig.html",[0,1.292,30,2.758]],["body/entities/AiServiceConfig.html",[0,1.388,1,4.392,2,2.088,3,0.124,4,0.111,5,0.099,6,4.292,7,5.535,9,0.201,10,1.22,14,3.523,17,3.961,21,3.837,22,0.418,23,0.011,25,1.486,28,0.567,30,3.961,36,3.761,37,3.479,38,4.291,39,2.926,40,4.032,42,0.967,43,3.961,47,3.128,48,2.434,49,2.894,51,0.939,52,3.26,63,3.407,65,0.199,66,3.626,68,1.388,69,3.128,70,4.884,77,0.136,78,0.125,79,1.109,81,0.007,82,0.007,93,3.147,99,3.752,100,4.205,101,2.964,104,0.746,106,4.008,107,6.872,108,6.872,109,6.872,110,4.566,111,4.566,112,4.566,113,4.566,114,4.566,115,4.566,116,4.566,117,4.566,118,4.566]],["title/controllers/AiServiceController.html",[119,1.641,120,3.132]],["body/controllers/AiServiceController.html",[1,2.13,3,0.103,4,0.093,5,0.083,6,4.09,9,0.168,17,4.833,22,0.359,23,0.011,25,1.406,28,0.537,51,1.294,65,0.26,69,4.075,70,3.155,77,0.114,78,0.104,81,0.007,82,0.007,101,2.477,104,1.172,119,1.474,120,3.975,121,1.428,122,5.642,123,3.349,124,2.232,125,1.274,126,2.381,127,3.316,128,4.181,129,3.501,130,5.491,131,3.316,132,3.846,133,2.629,134,4.685,135,3.659,136,3.815,137,1.743,138,1.039,139,2.558,140,1.759,141,4.307,142,3.815,143,3.349,144,5.393,145,3.815,146,1.304,147,3.349,148,3.485,149,3.975,150,3.815,151,2.765,152,3.349,153,5.393,154,3.815,155,3.349,156,5.387,157,5.393,158,3.815,159,1.573,160,2.477,161,1.626,162,2.477,163,1.744,164,2.039,165,3.011,166,2.477,167,3.316,168,2.232,169,1.956,170,2.477,171,2.629,172,2.13,173,0.587,174,1.88,175,4.734,176,1.88,177,3.042,178,4.061,179,3.349,180,3.349,181,3.815,182,2.477,183,3.042,184,2.13,185,1.573,186,1.343,187,3.042,188,1.488,189,3.815,190,3.815,191,2.629,192,2.629,193,3.815,194,3.815,195,3.815,196,3.815,197,3.815,198,3.815,199,3.815]],["title/entities/AiServiceLog.html",[0,1.292,33,2.758]],["body/entities/AiServiceLog.html",[0,1.439,1,4.437,2,2.164,3,0.215,4,0.115,5,0.103,6,4.247,7,5.476,9,0.209,10,1.249,14,3.587,17,4.057,22,0.412,23,0.011,25,1.461,28,0.558,33,4.057,36,3.204,37,3.319,38,3.656,39,2.968,40,3.204,42,0.824,43,4.057,51,0.962,52,3.319,60,6.532,61,2.427,65,0.204,66,3.529,68,1.439,69,3.204,70,4.869,77,0.141,78,0.129,79,1.15,81,0.008,82,0.008,83,3.774,89,4.155,93,3.262,95,4.155,99,3.843,100,4.307,101,3.073,104,0.774,200,6.997,201,6.997,202,2.463,203,4.734,204,3.319,205,6.997,206,4.734,207,4.734,208,4.734,209,4.734,210,4.734]],["title/modules/AiServiceModule.html",[211,1.542,212,2.928]],["body/modules/AiServiceModule.html",[1,3.824,3,0.148,4,0.133,5,0.118,6,2.915,23,0.011,24,4.445,30,4.445,33,4.445,65,0.277,69,2.797,70,4.378,71,2.797,72,5.46,73,4.35,77,0.163,78,0.149,81,0.008,82,0.008,101,3.541,120,5.517,121,2.563,122,4.021,173,0.84,177,6.258,178,5.357,179,4.789,180,4.789,211,2.717,212,5.687,213,2.587,214,2.587,215,2.797,216,2.797,217,2.587,218,3.837,219,2.797,220,4.789,221,4.789,222,3.511,223,2.797,224,2.688,225,5.455,226,3.046,227,1.864,228,5.455,229,2.915,230,5.455]],["title/injectables/AiServiceService.html",[178,2.758,231,0.615]],["body/injectables/AiServiceService.html",[1,4.027,3,0.094,4,0.085,5,0.075,6,4.074,9,0.153,11,5.208,12,5.208,13,5.208,17,4.682,22,0.361,23,0.011,24,2.253,28,0.537,30,2.253,33,2.253,51,1.275,65,0.254,68,1.055,69,3.908,70,4.045,71,1.779,72,4.018,73,2.767,77,0.104,78,0.095,81,0.006,82,0.006,101,2.253,104,1.179,125,1.191,126,2.352,127,3.099,128,4.004,129,3.272,130,4.424,131,3.099,132,3.099,133,3.473,134,4.487,137,1.752,138,1.045,139,3.279,140,1.704,141,4.218,143,4.424,146,1.186,147,4.424,148,3.545,151,2.584,152,4.424,155,4.424,156,4.487,173,0.534,174,1.71,175,4.424,176,1.71,177,5.191,178,3.272,188,1.382,227,1.186,231,0.73,232,1.151,233,6.692,234,3.047,235,1.774,236,3.471,237,3.87,238,5.933,239,5.933,240,5.933,241,3.471,242,5.04,243,3.471,244,3.471,245,3.471,246,3.471,247,3.471,248,3.471,249,1.646,250,3.471,251,2.292,252,3.471,253,3.471,254,3.471,255,1.768,256,3.471,257,2.292,258,5.04,259,5.04,260,4.374,261,4.424,262,1.151,263,2.767,264,5.933,265,1.623,266,1.448,267,5.04,268,4.018,269,3.471,270,3.471]],["title/interfaces/ApiResponse.html",[271,1.942,272,3.132]],["body/interfaces/ApiResponse.html",[3,0.156,4,0.141,5,0.125,9,0.254,10,1.416,22,0.384,23,0.011,42,1.054,51,1.232,77,0.212,81,0.009,82,0.009,188,1.151,202,2.945,255,1.564,271,2.634,272,5.654,273,3.739,274,4.593,275,6.165,276,5.764,277,7.024,278,2.982,279,2.542,280,3.216,281,5.056]],["title/controllers/AppController.html",[119,1.641,282,3.132]],["body/controllers/AppController.html",[3,0.152,4,0.137,5,0.122,9,0.248,23,0.011,25,1.318,28,0.503,38,4.082,42,0.919,65,0.248,77,0.168,78,0.154,81,0.009,82,0.009,119,2.696,121,2.105,125,1.649,126,2.119,140,1.649,141,3.729,163,2.57,164,3.005,172,3.139,173,0.865,184,3.139,185,2.317,186,1.979,188,1.395,202,1.979,255,1.527,282,5.144,283,4.935,284,6.965,285,7.934,286,5.622,287,5.622,288,6.66,289,5.622,290,4.926,291,4.935,292,5.622,293,5.622,294,4.935,295,5.622,296,5.622]],["title/modules/AppModule.html",[211,1.542,297,3.132]],["body/modules/AppModule.html",[3,0.113,4,0.101,5,0.09,15,1.13,22,0.208,23,0.011,45,1.9,65,0.278,69,2.133,77,0.124,78,0.114,81,0.007,82,0.007,121,2.144,122,3.067,173,0.64,211,2.378,212,5.273,213,1.973,214,1.973,215,2.133,216,2.133,217,1.973,218,3.359,219,2.133,222,2.937,223,2.133,224,2.05,226,2.323,227,1.421,229,3.502,282,4.83,290,4.967,291,3.652,297,6.453,298,3.652,299,3.652,300,3.652,301,5.273,302,5.273,303,5.273,304,4.705,305,5.273,306,5.273,307,5.273,308,4.967,309,4.16,310,4.223,311,4.13,312,2.323,313,5.729,314,2.701,315,3.317,316,4.16,317,4.16,318,4.16,319,4.16,320,3.317,321,4.16,322,4.16,323,4.16,324,3.652,325,4.16,326,4.16,327,4.16,328,4.16,329,4.16,330,4.16,331,4.16,332,4.16,333,3.067,334,3.067,335,4.16,336,3.067,337,4.16,338,4.16,339,4.16,340,2.133,341,4.16,342,2.323,343,4.16,344,4.16,345,4.16,346,4.16,347,4.16,348,4.16,349,4.16,350,4.16,351,3.652]],["title/injectables/AppService.html",[231,0.615,290,2.758]],["body/injectables/AppService.html",[3,0.172,4,0.155,5,0.138,9,0.28,23,0.011,28,0.458,42,0.991,65,0.208,77,0.19,78,0.174,81,0.009,82,0.009,125,1.776,140,1.502,173,0.979,188,1.271,231,1.089,232,2.109,284,7.261,290,4.88,352,5.58,353,6.357,354,6.357,355,6.357]],["title/controllers/AuthController.html",[119,1.641,356,3.132]],["body/controllers/AuthController.html",[3,0.132,4,0.119,5,0.106,9,0.215,22,0.319,23,0.011,25,1.341,28,0.512,65,0.262,77,0.146,78,0.133,81,0.008,82,0.008,104,1.042,119,1.884,121,1.826,124,2.853,125,1.506,126,2.338,135,2.853,137,1.549,138,0.923,139,3.8,140,1.678,146,2.426,163,2.23,164,2.606,167,2.999,172,2.723,173,0.751,184,2.723,185,2.01,188,1.419,255,1.731,342,4.204,356,4.698,357,4.281,358,4.877,359,6.608,360,5.66,361,5.595,362,4.877,363,4.877,364,4.877,365,5.55,366,4.877,367,4.877,368,4.877,369,5.55,370,4.877,371,4.877,372,2.853,373,3.361,374,3.166,375,2.853,376,3.361,377,4.609,378,4.281,379,4.877,380,4.877,381,4.877,382,3.361,383,4.877,384,3.361,385,4.877,386,3.166,387,4.877,388,4.877,389,5.595,390,4.877,391,4.877,392,4.877,393,4.877]],["title/injectables/AuthGuard.html",[163,1.942,231,0.615]],["body/injectables/AuthGuard.html",[3,0.157,4,0.141,5,0.126,22,0.29,23,0.011,28,0.417,42,0.936,51,0.891,65,0.251,77,0.212,78,0.158,81,0.009,82,0.009,88,2.553,104,0.946,137,1.406,138,0.838,159,2.385,163,3.514,173,0.891,185,2.385,231,1.029,232,1.919,235,2.037,271,3.247,311,4.898,312,3.231,340,2.966,394,4.265,395,5.236,396,5.663,397,5.079,398,5.786,399,4.613,400,3.756,401,4.611,402,3.756,403,3.756,404,3.756,405,2.851,406,2.553,407,2.645,408,4.265]],["title/modules/AuthModule.html",[211,1.542,301,2.928]],["body/modules/AuthModule.html",[3,0.139,4,0.125,5,0.111,23,0.011,65,0.276,77,0.153,78,0.14,81,0.008,82,0.008,121,2.459,126,1.427,173,0.787,188,1.021,211,2.635,213,2.423,214,2.423,215,2.619,216,2.619,217,2.423,218,3.722,219,2.619,222,3.367,223,2.619,224,2.517,229,3.88,301,5.867,308,5.267,310,4.842,311,4.483,312,2.853,314,3.317,315,4.073,324,4.485,333,3.766,334,3.766,356,5.352,377,5.267,378,4.485,400,3.317,409,4.485,410,5.109,411,4.485,412,5.591,413,5.109,414,4.073,415,3.317,416,6.569,417,5.109,418,5.109,419,4.073,420,3.766,421,3.766,422,4.073,423,3.521,424,4.485]],["title/injectables/AuthService.html",[231,0.615,377,2.758]],["body/injectables/AuthService.html",[3,0.118,4,0.106,5,0.095,9,0.192,22,0.336,23,0.011,28,0.519,42,1.109,45,1.961,65,0.246,77,0.13,78,0.119,81,0.007,82,0.007,88,1.923,104,1.097,125,1.397,126,2.286,137,1.631,138,0.972,140,1.586,146,2.293,159,1.796,168,2.549,173,0.671,188,1.342,231,0.856,232,1.445,235,2.082,251,2.082,255,1.823,257,2.534,265,2.318,266,2.067,278,1.582,279,2.961,280,3.302,340,2.234,342,4.431,359,6.318,360,5.351,361,5.19,377,3.838,386,3.838,407,3.291,415,2.829,425,3.825,426,4.357,427,4.96,428,5.351,429,6.318,430,4.357,431,5.913,432,4.357,433,5.913,434,4.357,435,5.913,436,4.357,437,2.147,438,5.546,439,4.357,440,3.825,441,4.357,442,4.357,443,4.357,444,2.829,445,4.357,446,4.357,447,1.923,448,5.913,449,4.357,450,4.357,451,4.357,452,4.357,453,4.357,454,4.357,455,4.357,456,3.825,457,4.357,458,4.357]],["title/classes/CompleteChunkDto.html",[78,0.116,459,3.387]],["body/classes/CompleteChunkDto.html",[3,0.161,4,0.145,5,0.129,9,0.262,10,1.442,15,1.611,22,0.389,23,0.011,25,1.121,28,0.428,51,1.196,65,0.254,77,0.177,78,0.212,79,1.888,81,0.009,82,0.009,202,2.089,262,2.392,459,5.75,460,1.911,461,6.331,462,4.73,463,6.195,464,5.933,465,5.933,466,2.464,467,5.208,468,2.539,469,2.027,470,3.471,471,4.435,472,3.421,473,1.968]],["title/classes/CreateAiServiceDto.html",[78,0.116,134,2.928]],["body/classes/CreateAiServiceDto.html",[3,0.124,4,0.112,5,0.1,6,4.21,9,0.202,10,1.224,15,2.219,16,5.494,18,5.494,19,5.494,20,3.395,22,0.383,23,0.011,25,1.447,28,0.552,42,1.077,57,5.419,58,5.419,59,5.494,65,0.2,69,4.039,77,0.137,78,0.167,80,4.473,81,0.007,82,0.007,134,4.22,138,1.183,460,1.479,466,2.855,468,2.774,469,1.568,472,3.268,473,1.523,474,6.915,475,3.66,476,4.473,477,4.029,478,5.375,479,4.029,480,4.029,481,4.029,482,4.514,483,4.029,484,5.375,485,4.029,486,4.029,487,3.384,488,3.379,489,2.867]],["title/classes/CreateDatasetDto.html",[78,0.116,490,2.928]],["body/classes/CreateDatasetDto.html",[3,0.129,4,0.116,5,0.103,9,0.21,10,1.254,15,2.204,22,0.351,23,0.011,25,1.325,28,0.506,42,1.021,45,2.081,51,0.966,61,2.44,65,0.229,77,0.142,78,0.192,79,1.524,81,0.008,82,0.008,104,1.267,138,1.08,188,1.254,202,2.802,262,2.327,460,1.533,466,2.719,468,2.626,469,1.626,470,2.784,471,3.857,472,2.975,473,1.579,488,3.096,489,2.626,490,4.323,491,6.546,492,3.795,493,3.849,494,2.927,495,4.178,496,4.76,497,3.509,498,3.749,499,4.178,500,2.544,501,4.76,502,2.927,503,4.76,504,4.178,505,4.76,506,3.857,507,2.674,508,3.509,509,4.178,510,4.178,511,5.506,512,3.352,513,3.795,514,3.28,515,2.927,516,2.927]],["title/classes/CreatePlantDiseaseKnowledgeDto.html",[78,0.116,517,2.758]],["body/classes/CreatePlantDiseaseKnowledgeDto.html",[3,0.06,4,0.054,5,0.048,9,0.098,10,0.718,15,2.229,22,0.411,23,0.011,25,1.551,28,0.592,42,1.143,65,0.117,77,0.067,78,0.098,80,4.431,81,0.004,82,0.004,138,1.253,460,0.718,466,2.964,468,2.902,469,0.762,472,1.703,473,0.74,476,5.196,488,3.622,489,3.073,517,2.33,518,7.234,519,1.778,520,3.592,521,3.592,522,3.592,523,3.105,524,3.592,525,3.592,526,3.592,527,3.592,528,3.592,529,3.592,530,3.592,531,3.592,532,3.592,533,3.592,534,3.592,535,3.592,536,3.592,537,3.592,538,3.592,539,3.592,540,3.592,541,3.592,542,3.592,543,3.592,544,3.592,545,3.592,546,2.23,547,2.23,548,2.23,549,2.23,550,2.23,551,2.23,552,2.23,553,3.151,554,2.23,555,2.23,556,2.23,557,2.23,558,2.23,559,3.954,560,3.151,561,2.23,562,1.958,563,3.151,564,3.151,565,3.151,566,2.23,567,2.23,568,2.23,569,3.151,570,2.23,571,2.23,572,2.23,573,2.23,574,3.151,575,3.151,576,2.23,577,2.23,578,2.23,579,2.23,580,2.23,581,2.23,582,3.151,583,2.23,584,3.151,585,4.532]],["title/classes/CreateRoleDto.html",[78,0.116,586,2.928]],["body/classes/CreateRoleDto.html",[3,0.145,4,0.131,5,0.116,9,0.237,10,1.354,15,2.231,22,0.372,23,0.011,25,1.403,28,0.536,42,1.083,65,0.221,77,0.16,78,0.185,81,0.008,82,0.008,104,1.214,138,1.13,460,1.728,466,2.807,468,2.747,469,1.833,472,3.214,473,1.779,476,4.399,488,3.277,489,2.921,586,4.669,587,6.849,588,4.277,589,5.475,590,4.709,591,4.709,592,5.365,593,4.995,594,4.709]],["title/classes/CreateTaskDto.html",[78,0.116,595,3.132]],["body/classes/CreateTaskDto.html",[3,0.124,4,0.112,5,0.099,9,0.202,10,1.223,15,2.078,22,0.383,23,0.011,25,1.446,28,0.552,42,1.038,51,1.131,65,0.2,77,0.137,78,0.167,81,0.007,82,0.007,202,2.987,262,2.029,460,1.476,466,2.854,468,2.772,469,1.566,472,3.734,473,1.52,489,2.75,500,3.926,502,3.761,595,4.509,596,6.278,597,4.022,598,4.027,599,4.744,600,4.744,601,4.469,602,5.489,603,4.477,604,4.022,605,4.582,606,5.415,607,5.369,608,4.582,609,6.116,610,4.582,611,6.718,612,5.369,613,4.582,614,4.876,615,4.582,616,4.582]],["title/classes/CreateTempLinkDto.html",[78,0.116,617,3.132]],["body/classes/CreateTempLinkDto.html",[3,0.164,4,0.147,5,0.131,9,0.266,10,1.456,15,1.638,22,0.302,23,0.011,25,1.139,28,0.435,42,0.96,65,0.238,77,0.18,78,0.199,81,0.009,82,0.009,138,1.055,202,2.123,423,5.393,460,1.942,466,2.488,468,2.564,469,2.06,473,2,488,3.214,489,2.727,494,3.708,500,3.223,596,5.807,617,5.369,618,5.293,619,5.807,620,6.03]],["title/classes/CreateUserDto.html",[78,0.116,621,3.132]],["body/classes/CreateUserDto.html",[3,0.109,4,0.098,5,0.088,9,0.178,10,1.121,15,2.059,20,3.177,22,0.397,23,0.011,25,1.432,28,0.547,42,0.999,48,1.61,51,0.864,61,2.069,65,0.228,77,0.121,78,0.153,81,0.007,82,0.007,138,1.203,159,2.658,202,2.966,262,2.311,340,3.306,342,3.6,386,4.186,447,2.475,460,1.3,466,2.786,468,2.737,469,1.379,473,1.339,487,2.976,488,3.498,489,2.414,494,3.45,497,2.976,500,2.998,506,3.45,515,2.482,621,4.136,622,6.825,623,2.976,624,4.861,625,3.543,626,4.925,627,3.543,628,4.136,629,5.588,630,4.136,631,4.473,632,3.642,633,3.543,634,3.543,635,3.218,636,3.543,637,3.866,638,3.543,639,5.141,640,3.543,641,3.543,642,3.543,643,4.136,644,4.473,645,4.925,646,3.543,647,2.782,648,4.136,649,4.925,650,3.218,651,3.543,652,3.543]],["title/entities/Dataset.html",[0,1.292,653,2.485]],["body/entities/Dataset.html",[0,1.247,2,1.875,3,0.111,4,0.1,5,0.175,9,0.25,10,1.134,14,3.333,15,1.766,21,3.631,22,0.427,23,0.011,25,1.526,28,0.583,36,3.597,37,3.704,39,3.039,40,3.905,42,1.004,43,3.682,44,3.167,45,1.881,47,3.597,48,2.799,49,2.69,51,1.173,52,3.084,61,2.908,63,3.167,65,0.185,66,3.775,68,1.247,71,3.333,77,0.122,78,0.112,79,1.789,81,0.007,82,0.007,91,4.835,99,3.488,104,1.245,138,0.821,251,1.997,653,4.104,654,3.6,655,3.749,656,3.631,657,4.104,658,4.979,659,4.101,660,4.555,661,4.101,662,4.101,663,4.101,664,3.023,665,4.101,666,5.672,667,5.672,668,4.101,669,4.101,670,4.101,671,4.101,672,4.101,673,4.979,674,4.181,675,4.101,676,4.101,677,4.101,678,4.101,679,4.101,680,4.101,681,5.672,682,3.6]],["title/controllers/DatasetController.html",[119,1.641,683,3.132]],["body/controllers/DatasetController.html",[3,0.091,4,0.082,5,0.073,9,0.148,22,0.342,23,0.011,25,1.289,28,0.492,39,1.339,42,1.086,51,1.268,65,0.259,77,0.1,78,0.092,81,0.006,82,0.006,104,1.259,119,1.297,121,1.257,124,1.964,125,1.162,126,2.301,135,1.964,137,1.658,138,0.988,139,3.583,140,1.612,146,2.331,148,3.286,149,3.626,151,2.984,159,1.384,160,2.18,161,1.431,162,2.18,163,1.535,164,1.795,165,2.747,166,2.18,167,3.58,168,1.964,169,3.286,170,2.18,171,2.314,172,1.875,173,0.517,174,1.654,176,1.654,182,2.18,183,2.677,184,1.875,185,1.384,186,1.182,188,1.364,191,2.314,192,2.314,262,1.632,266,1.672,372,1.964,373,2.314,374,2.18,375,1.964,376,2.314,382,2.314,405,1.654,406,3.579,490,4.417,507,1.431,512,2.629,653,1.964,683,3.626,684,2.947,685,4.318,686,5.11,687,5.11,688,5.11,689,5.11,690,3.358,691,4.318,692,3.358,693,5.637,694,3.358,695,5.11,696,5.11,697,5.11,698,5.11,699,3.358,700,4.702,701,2.947,702,3.358,703,3.358,704,6.765,705,2.947,706,4.919,707,3.358,708,2.947,709,4.417,710,4.919,711,3.358,712,5.029,713,3.358,714,3.358,715,4.628,716,4.318,717,3.193,718,2.947,719,2.18,720,3.358,721,2.947,722,2.947,723,3.358,724,3.358,725,3.358,726,3.358,727,3.358,728,4.641,729,3.358,730,3.358,731,4.012,732,4.012,733,3.358,734,3.358,735,3.358,736,2.475,737,3.358]],["title/injectables/DatasetManageService.html",[231,0.615,717,2.758]],["body/injectables/DatasetManageService.html",[3,0.081,4,0.073,5,0.098,9,0.131,22,0.365,23,0.011,28,0.492,42,0.855,51,1.314,61,2.308,65,0.244,68,0.906,77,0.089,78,0.082,81,0.006,82,0.006,88,3.589,104,1.22,125,1.064,126,2.255,137,1.658,138,0.988,139,3.46,140,1.534,141,2.406,146,2.065,148,3.099,151,2.781,173,0.459,174,1.469,176,1.469,188,1.364,204,1.414,227,1.018,231,0.652,232,0.989,235,1.585,237,2.867,249,1.414,251,1.91,255,2.099,257,2.568,265,0.96,266,0.856,279,1.987,280,1.664,437,1.469,447,2.667,490,4.166,493,3.078,653,4.367,655,1.593,656,3.375,657,1.744,685,3.952,686,4.762,687,3.952,688,3.952,689,4.762,695,4.325,696,2.377,697,4.325,698,2.377,700,2.054,701,3.952,704,5.306,705,3.952,708,2.617,709,4.166,716,3.952,717,2.923,738,6.219,739,2.197,740,2.617,741,3.632,742,4.599,743,2.981,744,3.952,745,4.502,746,2.981,747,2.981,748,4.325,749,3.59,750,2.981,751,2.981,752,2.617,753,2.981,754,2.197,755,2.377,756,2.981,757,2.617,758,2.197,759,2.981,760,2.981,761,2.981,762,2.981,763,2.981,764,2.981,765,4.502,766,2.617,767,2.981,768,2.617,769,2.981,770,2.981,771,4.502,772,2.981,773,5.425,774,2.981,775,3.952,776,2.617,777,2.981,778,2.981,779,2.197,780,4.325,781,2.054,782,5.425,783,2.981,784,4.502,785,3.952,786,3.319,787,4.502,788,2.899,789,5.425,790,2.981,791,2.377,792,4.502,793,2.981,794,4.502,795,2.981,796,2.981,797,2.981,798,2.981]],["title/modules/DatasetModule.html",[211,1.542,302,2.928]],["body/modules/DatasetModule.html",[3,0.15,4,0.135,5,0.12,23,0.011,65,0.274,77,0.165,78,0.151,81,0.008,82,0.008,121,2.581,173,0.849,211,2.73,213,2.615,214,2.615,215,2.827,216,2.827,217,2.615,218,3.856,219,2.827,222,3.534,223,2.827,224,2.717,226,3.079,227,1.884,229,3.684,302,5.94,304,5.088,320,4.396,653,3.225,683,5.544,717,5.371,718,4.84,719,3.579,742,5.371,755,4.396,799,4.84,800,5.514,801,4.84,802,5.514,803,5.514,804,5.514,805,5.514]],["title/injectables/DatasetService.html",[231,0.615,742,2.758]],["body/injectables/DatasetService.html",[3,0.15,4,0.135,5,0.12,9,0.243,22,0.345,23,0.011,28,0.497,51,1.158,65,0.257,68,1.676,77,0.165,78,0.151,79,1.675,81,0.008,82,0.008,104,1.127,125,1.629,126,2.1,137,1.675,138,0.998,140,1.303,146,1.884,173,0.849,188,1.102,227,1.884,231,0.998,232,1.829,235,2.427,237,3.737,249,2.615,251,1.941,255,1.497,257,1.941,260,4.064,265,1.776,266,1.584,653,4.609,656,3.079,740,4.84,742,4.475,744,6.051,755,4.396,757,4.84,806,4.84,807,5.496,808,5.514,809,6.051,810,5.514,811,3.534,812,5.514]],["title/controllers/DiagnosisController.html",[119,1.641,813,3.132]],["body/controllers/DiagnosisController.html",[3,0.088,4,0.079,5,0.158,9,0.143,22,0.337,23,0.011,25,1.271,28,0.485,45,1.077,51,1.228,65,0.26,77,0.097,78,0.089,79,1.712,81,0.006,82,0.006,104,1.1,119,1.255,121,1.216,124,1.9,125,1.134,126,2.289,135,1.9,137,1.635,138,0.975,140,1.59,146,2.299,148,3.234,151,3.234,163,1.485,164,1.736,169,2.927,171,2.238,172,1.813,173,0.5,184,1.813,186,1.69,188,1.345,191,2.238,192,2.238,204,2.277,235,1.143,251,1.69,255,1.304,257,2.369,265,1.046,266,1.812,294,2.851,375,1.9,405,2.365,406,3.429,482,2.394,599,2.238,693,5.432,700,3.308,715,4.369,728,2.589,731,3.308,732,3.308,813,3.538,814,2.851,815,4.213,816,5.012,817,5.012,818,5.012,819,5.012,820,3.248,821,4.8,822,3.248,823,3.248,824,4.8,825,3.248,826,2.851,827,4.8,828,3.248,829,2.851,830,4.8,831,3.248,832,3.248,833,3.707,834,3.248,835,3.248,836,4.213,837,4.213,838,2.108,839,2.589,840,2.851,841,2.589,842,2.589,843,2.851,844,2.108,845,4.213,846,2.589,847,2.589,848,3.827,849,2.394,850,2.238,851,4.213,852,2.851,853,2.238,854,2.851,855,3.188,856,3.248,857,2.238,858,3.707,859,2.851,860,3.248,861,3.248,862,2.851,863,2.851,864,2.851,865,4.213,866,6.184,867,2.851,868,3.248,869,2.589,870,2.851,871,3.248,872,2.851,873,3.248,874,2.851,875,3.248,876,2.851,877,3.248,878,2.851,879,3.248,880,3.248,881,2.589,882,4.213,883,4.8,884,2.589,885,3.248,886,3.248,887,3.248,888,3.248,889,2.851,890,2.851,891,2.851,892,1.813,893,3.248,894,1.665,895,2.851,896,2.851,897,3.248,898,3.248,899,3.248,900,3.248,901,3.248]],["title/entities/DiagnosisHistory.html",[0,1.292,902,2.928]],["body/entities/DiagnosisHistory.html",[0,1.183,2,1.779,3,0.105,4,0.095,5,0.157,9,0.241,10,1.093,14,3.241,20,3.115,21,3.53,22,0.424,23,0.011,25,1.508,28,0.576,36,3.515,37,3.65,39,2.989,40,3.841,42,0.904,44,4.518,45,2.684,47,3.515,48,2.735,49,2.593,51,1.209,52,1.845,63,3.053,65,0.178,66,3.726,68,1.183,77,0.116,78,0.106,79,1.666,81,0.007,82,0.007,91,4.726,93,2.681,99,3.362,100,3.768,104,0.636,278,2.793,655,3.861,657,3.698,658,4.799,660,4.452,902,3.768,903,7.103,904,3.415,905,6.322,906,6.322,907,3.89,908,3.89,909,5.467,910,3.89,911,3.89,912,3.665,913,5.467,914,4.799,915,3.89,916,2.922,917,3.89,918,4.799,919,3.89,920,5.04,921,3.89,922,3.89,923,3.89,924,2.868,925,3.89,926,3.89,927,3.89]],["title/modules/DiagnosisModule.html",[211,1.542,303,2.928]],["body/modules/DiagnosisModule.html",[3,0.154,4,0.138,5,0.123,23,0.011,65,0.272,77,0.169,78,0.155,81,0.009,82,0.009,121,2.626,173,0.873,211,2.765,213,2.69,214,2.69,215,2.908,216,2.908,217,2.69,218,3.905,219,2.908,222,3.597,223,2.908,224,2.794,226,3.167,227,1.938,229,3.749,303,5.88,304,5.124,320,4.522,813,5.615,858,5.409,859,4.978,902,3.909,928,4.978,929,4.978,930,5.672,931,5.672,932,5.672,933,4.978,934,4.978,935,5.672]],["title/injectables/DiagnosisService.html",[231,0.615,858,2.758]],["body/injectables/DiagnosisService.html",[3,0.084,4,0.076,5,0.134,9,0.137,14,2.383,20,2.29,22,0.347,23,0.011,28,0.5,39,1.241,51,1.295,65,0.241,68,0.946,77,0.093,78,0.085,79,1.5,81,0.006,82,0.006,88,3.393,104,1.133,125,1.099,126,2.272,137,1.685,138,1.004,140,1.562,146,2.258,148,3.555,151,3.166,173,0.479,186,2.174,188,1.321,204,2.929,227,1.063,231,0.673,232,1.032,235,1.637,237,2.929,249,1.475,251,2.174,255,2.051,257,2.903,261,2.73,262,1.846,263,2.48,265,1.989,266,1.774,278,1.687,279,2.051,280,1.737,437,1.533,482,4.872,507,1.326,512,2.484,598,2.719,600,2.144,601,2.019,655,2.975,657,1.82,719,2.019,779,3.427,781,3.203,788,3.3,811,2.853,815,4.08,816,4.886,817,4.08,818,4.08,819,4.08,826,4.08,829,4.08,833,3.613,855,4.013,857,2.144,858,3.018,869,2.48,884,2.48,892,2.596,894,2.383,902,4.256,912,2.484,933,2.73,934,2.73,936,2.73,937,3.111,938,4.665,939,5.73,940,3.111,941,4.649,942,4.649,943,3.111,944,3.111,945,3.111,946,3.111,947,3.111,948,4.649,949,3.111,950,3.111,951,4.649,952,3.111,953,4.438,954,3.706,955,3.706,956,3.706,957,3.111,958,3.111,959,3.111,960,4.08,961,3.111,962,2.019,963,2.48,964,2.73,965,3.111,966,2.019,967,3.111,968,3.111,969,2.48,970,3.706,971,3.706,972,3.706,973,3.111,974,2.48,975,2.293,976,2.48,977,3.111,978,3.111,979,3.111,980,3.111,981,3.111,982,4.08,983,4.08,984,3.111]],["title/classes/DownloadFilesDto.html",[78,0.116,985,3.387]],["body/classes/DownloadFilesDto.html",[3,0.148,4,0.133,5,0.118,9,0.24,10,1.367,15,1.478,22,0.273,23,0.011,25,1.028,28,0.393,42,0.717,45,2.268,51,1.053,61,2.791,65,0.244,77,0.163,78,0.204,79,1.662,81,0.008,82,0.008,202,2.762,262,1.806,460,1.754,466,2.337,468,2.408,469,1.86,470,3.185,471,4.205,472,3.244,473,1.806,493,4.051,498,3.996,506,4.205,507,2.321,514,3.752,515,3.348,516,3.348,603,3.185,637,4.713,647,3.752,985,5.452,986,6.003,987,4.013,988,5.444,989,5.452,990,4.779,991,5.444,992,5.444,993,4.34,994,4.34]],["title/entities/File.html",[0,1.292,5,0.092]],["body/entities/File.html",[0,1.128,2,1.697,3,0.101,4,0.091,5,0.146,9,0.233,10,1.057,14,3.158,21,3.44,22,0.436,23,0.011,25,1.571,28,0.6,36,3.442,37,3.883,39,3.096,40,3.782,42,1.079,43,3.433,47,3.979,48,3.196,49,3.185,51,1.233,52,2.922,55,4.216,63,2.953,65,0.173,66,3.916,68,1.128,71,3.158,77,0.111,78,0.101,79,1.497,81,0.006,82,0.006,91,5.084,251,1.862,262,1.754,598,3.604,600,4.245,601,3.999,653,4.441,655,3.588,657,3.928,660,4.359,664,2.736,674,3.898,785,4.642,962,3.999,963,4.912,966,3.999,995,3.257,996,6.16,997,4.541,998,5.288,999,3.711,1000,3.711,1001,3.711,1002,3.711,1003,5.288,1004,4.642,1005,3.711,1006,3.711,1007,4.642,1008,3.711,1009,3.711,1010,3.711,1011,3.711,1012,3.711,1013,3.711,1014,3.711,1015,3.711,1016,3.711,1017,3.711,1018,3.711,1019,3.711]],["title/injectables/FileDownloadService.html",[231,0.615,1020,2.928]],["body/injectables/FileDownloadService.html",[3,0.079,4,0.071,5,0.13,9,0.129,15,1.205,22,0.352,23,0.011,28,0.464,42,0.706,48,1.77,51,0.99,65,0.251,77,0.087,78,0.08,81,0.005,82,0.005,104,1.107,125,1.048,126,2.074,137,1.563,138,0.932,139,2.839,140,1.601,146,1.516,169,3.806,173,0.45,174,1.44,186,1.562,188,1.196,204,1.387,227,0.999,231,0.643,232,0.97,235,1.562,249,1.387,251,1.562,255,2.165,257,1.029,262,1.472,265,1.429,266,1.274,279,1.29,336,2.155,375,1.71,405,1.44,406,3.395,415,1.898,423,2.015,429,6.178,437,1.44,512,2.371,617,4.412,619,2.331,693,4.125,741,3.472,788,1.562,791,2.331,844,1.898,892,1.632,894,1.499,912,3.761,914,3.894,916,3.439,966,2.88,1020,3.057,1021,4.397,1022,2.566,1023,4.436,1024,4.436,1025,5.361,1026,4.436,1027,2.331,1028,2.924,1029,4.436,1030,6.847,1031,5.188,1032,2.924,1033,3.48,1034,4.436,1035,2.924,1036,5.13,1037,3.952,1038,2.924,1039,2.924,1040,4.436,1041,2.924,1042,5.361,1043,2.543,1044,3.894,1045,2.566,1046,2.331,1047,1.898,1048,2.924,1049,1.898,1050,2.566,1051,2.015,1052,3.894,1053,4.436,1054,6.434,1055,2.924,1056,2.924,1057,6.434,1058,5.985,1059,4.436,1060,4.436,1061,2.924,1062,2.924,1063,2.566,1064,5.648,1065,2.924,1066,5.648,1067,2.924,1068,2.924,1069,2.924,1070,2.924,1071,2.924,1072,2.924,1073,4.436,1074,2.924,1075,2.924,1076,2.924,1077,2.924,1078,2.924,1079,2.924,1080,2.924,1081,2.924,1082,2.924,1083,2.924,1084,2.924,1085,2.924,1086,2.924,1087,2.924,1088,2.924,1089,2.924,1090,2.924,1091,2.924,1092,2.924,1093,2.924,1094,2.924,1095,2.566,1096,2.015,1097,1.898,1098,2.924,1099,3.894,1100,2.924,1101,2.924,1102,4.436,1103,2.924,1104,2.924,1105,2.924,1106,2.924,1107,2.924,1108,2.924]],["title/guards/FileGuard.html",[1109,3.132,1110,2.928]],["body/guards/FileGuard.html",[3,0.114,4,0.102,5,0.161,9,0.185,22,0.33,23,0.011,28,0.416,45,1.913,65,0.231,77,0.197,78,0.158,81,0.007,82,0.007,88,3.128,104,0.942,125,1.363,126,1.98,137,1.401,138,0.835,140,0.993,141,3.519,173,0.647,185,2.377,186,2.03,188,1.153,231,0.954,235,1.479,251,2.03,255,2.232,257,2.03,265,2.121,266,1.892,271,1.921,402,2.727,403,2.727,404,2.727,405,2.842,406,3.278,438,4.854,447,1.854,493,2.735,656,3.22,741,4.104,754,3.097,786,3.097,811,2.154,912,3.788,916,2.245,924,3.097,1027,3.349,1033,2.727,1037,3.097,1043,2.735,1096,2.895,1097,3.744,1110,3.974,1111,3.097,1112,2.895,1113,5.476,1114,4.201,1115,4.854,1116,5.476,1117,4.201,1118,3.349,1119,2.895,1120,2.957,1121,4.251,1122,3.349,1123,4.598,1124,3.349,1125,4.885,1126,3.974,1127,3.349,1128,2.895,1129,3.349,1130,3.349,1131,3.349,1132,4.598,1133,3.349,1134,3.349]],["title/injectables/FileManageService.html",[231,0.615,938,2.758]],["body/injectables/FileManageService.html",[3,0.056,4,0.05,5,0.148,9,0.091,15,0.558,22,0.321,23,0.011,28,0.462,51,1.236,65,0.209,68,0.625,71,1.721,77,0.061,78,0.056,79,1.493,81,0.004,82,0.004,88,3.594,104,1.047,125,0.794,126,2.203,137,1.557,138,0.928,139,3.54,140,1.741,146,1.853,169,3.827,173,0.316,176,1.012,186,1.5,188,1.164,204,3.494,227,0.702,231,0.486,232,0.681,235,1.182,237,2.333,249,0.974,251,1.5,255,2.142,257,2.966,262,1.413,265,2.433,266,2.007,278,1.219,279,0.906,437,1.012,447,2.171,493,2.333,598,1.964,655,1.795,656,2.378,657,1.964,739,1.514,752,1.803,788,1.795,811,2.985,855,3.43,857,1.416,892,3.43,894,3.15,912,1.098,916,3.545,938,2.18,939,4.898,953,6.197,954,3.922,955,3.922,956,3.922,969,4.324,970,3.922,971,3.922,972,3.922,974,3.396,975,3.14,976,3.396,1021,4.306,1033,3.779,1043,2.914,1049,1.333,1051,1.416,1097,3.194,1125,1.416,1135,2.948,1136,4.259,1137,2.948,1138,3.358,1139,2.948,1140,4.259,1141,2.948,1142,1.514,1143,2.054,1144,2.475,1145,3.358,1146,5.989,1147,4.642,1148,1.803,1149,2.054,1150,2.054,1151,3.358,1152,2.054,1153,3.358,1154,2.054,1155,2.948,1156,3.988,1157,2.054,1158,2.054,1159,2.948,1160,3.194,1161,2.054,1162,1.803,1163,1.333,1164,1.803,1165,1.638,1166,2.948,1167,1.803,1168,3.358,1169,2.054,1170,3.739,1171,2.948,1172,3.739,1173,3.739,1174,2.948,1175,2.948,1176,2.677,1177,2.677,1178,1.803,1179,4.259,1180,3.358,1181,2.948,1182,4.259,1183,3.358,1184,2.054,1185,2.054,1186,2.054,1187,2.054,1188,2.054,1189,3.358,1190,2.054,1191,2.054,1192,2.054,1193,2.054]],["title/modules/FileModule.html",[211,1.542,304,2.612]],["body/modules/FileModule.html",[3,0.119,4,0.107,5,0.129,23,0.011,65,0.278,77,0.131,78,0.12,81,0.007,82,0.007,121,2.226,126,1.227,173,0.677,188,0.878,211,2.446,213,2.084,214,2.084,215,2.253,216,2.253,217,2.084,218,3.456,219,3.456,222,3.049,223,2.253,224,2.165,226,2.454,227,1.501,229,3.178,304,5.347,310,4.384,311,4.225,312,2.454,314,2.853,333,3.239,334,3.239,414,3.504,415,2.853,419,3.504,420,3.239,421,3.239,422,3.504,423,3.028,619,3.504,719,2.853,741,4.32,855,4.706,857,3.028,938,5.471,1020,5.361,1049,2.853,1163,3.861,1165,3.504,1194,3.858,1195,3.858,1196,3.858,1197,5.361,1198,5.361,1199,4.395,1200,5.917,1201,4.395,1202,4.395,1203,7.546,1204,3.858,1205,4.395,1206,4.395,1207,4.395,1208,4.395]],["title/injectables/FileOperationService.html",[231,0.615,855,2.372]],["body/injectables/FileOperationService.html",[3,0.104,4,0.094,5,0.084,9,0.17,22,0.342,23,0.011,28,0.492,42,1.109,45,1.277,65,0.223,77,0.115,78,0.105,81,0.007,82,0.007,104,1.115,125,1.282,126,2.225,137,1.658,138,0.988,140,1.851,141,3.648,146,1.315,169,3.689,173,0.593,188,1.439,204,3.716,231,0.786,232,1.277,255,1.854,257,2.213,265,2.025,266,2.067,276,2.653,606,5.031,842,3.069,844,2.499,855,3.03,892,3.51,894,3.222,966,4.847,1021,4.672,1045,3.379,1066,3.379,1137,4.764,1209,3.379,1210,5.427,1211,5.427,1212,6.286,1213,5.427,1214,3.85,1215,5.427,1216,3.85,1217,5.427,1218,5.991,1219,3.85,1220,5.427,1221,6.286,1222,3.85,1223,5.738,1224,4.764,1225,3.85,1226,3.85,1227,3.85,1228,3.379,1229,3.85,1230,4.001,1231,5.427,1232,6.826,1233,3.85,1234,3.85,1235,3.85,1236,3.85,1237,3.85,1238,3.85,1239,3.85,1240,5.427,1241,3.85,1242,3.85,1243,3.85,1244,3.85,1245,3.85,1246,3.379,1247,3.85,1248,3.85,1249,3.85,1250,3.85,1251,3.85,1252,3.85,1253,3.85]],["title/injectables/FileService.html",[231,0.615,741,2.178]],["body/injectables/FileService.html",[3,0.087,4,0.079,5,0.162,9,0.142,22,0.374,23,0.011,28,0.506,39,1.284,42,1.004,51,1.283,65,0.219,68,0.979,77,0.096,78,0.088,79,1.38,81,0.006,82,0.006,88,3.363,104,1.148,125,1.127,126,2.285,137,1.706,138,1.017,140,1.717,146,2.291,148,3.726,151,3.438,169,3.826,173,0.496,186,1.133,188,1.34,227,1.1,231,0.691,232,1.068,235,1.679,237,2.979,249,1.527,251,1.133,255,1.907,257,2.361,262,1.884,265,1.83,266,2.088,279,2.104,280,1.798,437,1.586,493,1.527,507,1.372,512,2.549,598,2.79,601,3.688,655,1.721,656,3.507,695,4.529,696,4.529,697,4.529,698,4.529,741,2.445,748,5.346,749,3.802,758,3.515,766,2.826,768,2.826,779,3.515,781,3.287,788,1.721,807,3.802,811,3.22,912,1.721,916,2.549,962,3.688,983,2.826,1049,2.09,1051,2.219,1142,2.373,1144,3.515,1176,2.567,1177,2.567,1254,2.826,1255,4.769,1256,5.68,1257,4.769,1258,4.769,1259,3.219,1260,4.769,1261,3.219,1262,3.219,1263,3.219,1264,4.769,1265,3.219,1266,4.769,1267,3.219,1268,4.769,1269,3.219,1270,4.186,1271,4.769,1272,3.219,1273,3.219,1274,4.769,1275,2.826,1276,4.769,1277,3.219,1278,3.219,1279,4.769,1280,3.219,1281,4.769,1282,3.219,1283,3.219,1284,3.219,1285,3.219,1286,3.219,1287,3.219,1288,3.219,1289,2.826,1290,2.826,1291,2.826]],["title/injectables/FileSizeValidationPipe.html",[231,0.615,850,2.928]],["body/injectables/FileSizeValidationPipe.html",[3,0.141,4,0.127,5,0.159,9,0.23,22,0.333,23,0.011,28,0.48,42,0.966,51,0.802,65,0.239,77,0.156,78,0.143,81,0.008,82,0.008,104,1.087,125,1.572,137,1.616,138,0.964,140,1.232,173,0.802,185,2.149,186,1.835,188,1.042,204,3.476,231,0.964,232,1.729,235,1.835,265,2.143,266,1.911,498,3.556,833,5.012,844,3.384,850,4.585,892,3.715,894,3.411,960,4.576,1043,3.476,1120,2.672,1292,5.843,1293,4.576,1294,5.213,1295,5.213,1296,7.329,1297,5.84,1298,5.213,1299,4.156,1300,4.156,1301,4.585,1302,5.213,1303,7.329,1304,5.213,1305,6.653,1306,5.213,1307,5.213,1308,5.213]],["title/injectables/FileStorageService.html",[231,0.615,1197,2.928]],["body/injectables/FileStorageService.html",[3,0.106,4,0.095,5,0.119,9,0.172,22,0.317,23,0.011,28,0.456,42,0.834,51,1.154,65,0.245,68,1.185,77,0.116,78,0.107,81,0.007,82,0.007,88,2.415,104,1.034,125,1.293,126,2.093,137,1.537,138,0.916,140,1.293,146,1.87,173,0.6,186,1.372,188,1.094,204,2.596,227,1.331,231,0.793,232,1.292,235,1.927,237,3.254,249,1.848,251,2.416,255,2.134,257,1.372,265,1.763,266,1.572,278,2.794,279,2.415,280,2.175,437,1.92,447,3.468,655,3.381,758,2.872,781,4.36,892,2.175,894,1.997,912,2.082,1021,4.454,1049,2.529,1051,2.685,1142,2.872,1144,4.035,1197,3.772,1223,5.044,1275,3.42,1300,3.106,1309,3.42,1310,5.473,1311,5.473,1312,3.896,1313,5.473,1314,7.229,1315,3.896,1316,5.473,1317,3.896,1318,3.106,1319,3.896,1320,3.896,1321,3.896,1322,3.896,1323,7.859,1324,3.896,1325,7.859,1326,3.896,1327,3.896,1328,3.896,1329,5.473,1330,3.896,1331,5.473,1332,3.896,1333,5.473,1334,3.896,1335,5.473,1336,3.896,1337,5.473,1338,3.896,1339,5.473,1340,3.896,1341,5.044,1342,4.664,1343,5.554,1344,5.044,1345,6.327,1346,3.896,1347,7.699]],["title/injectables/FileTypeValidationPipe.html",[231,0.615,853,2.928]],["body/injectables/FileTypeValidationPipe.html",[3,0.153,4,0.138,5,0.165,9,0.25,22,0.351,23,0.011,28,0.505,65,0.229,77,0.169,78,0.155,81,0.009,82,0.009,104,1.145,125,1.656,137,1.702,138,1.015,140,1.337,173,0.871,185,2.333,186,1.992,188,1.131,231,1.015,232,1.877,235,1.992,265,1.823,266,1.626,498,3.744,833,5.163,838,5.163,839,4.512,853,4.828,870,4.968,1043,3.323,1120,2.901,1292,6.067,1297,6.15,1301,4.828,1348,4.968,1349,5.659,1350,5.659,1351,7.006,1352,5.659,1353,5.659,1354,5.659]],["title/injectables/FileUploadService.html",[231,0.615,1198,2.928]],["body/injectables/FileUploadService.html",[3,0.043,4,0.038,5,0.151,9,0.069,20,2.302,22,0.32,23,0.011,28,0.46,42,0.464,45,1.167,51,1.219,65,0.227,68,0.479,71,1.378,77,0.047,78,0.043,79,1.011,81,0.003,82,0.003,88,3.158,104,1.043,125,0.635,126,2.178,137,1.551,138,0.925,139,2.717,140,1.464,141,1.88,146,1.957,168,0.921,173,0.242,174,0.776,176,0.776,186,1.645,188,1.339,204,3.108,227,0.538,231,0.389,232,0.522,235,0.947,237,2.578,249,0.747,251,2.406,255,2.14,257,2.962,262,1.983,265,2.274,266,1.78,268,1.255,278,2.17,279,2.062,280,1.965,437,0.776,444,1.022,447,1.553,463,5.091,493,0.747,595,3.067,598,3.997,599,3.507,600,3.746,601,3.882,602,4.334,606,1.161,655,2.497,656,1.501,657,2.733,682,1.382,741,2.787,776,2.36,780,2.805,788,2.224,791,1.255,811,2.133,833,3.882,844,1.745,847,1.255,848,1.255,849,1.161,855,3.035,857,1.085,866,4.101,867,1.382,869,2.144,872,1.382,874,1.382,876,1.382,878,1.382,881,1.255,884,1.255,892,2.842,894,2.609,895,1.382,912,1.437,916,1.437,939,4.334,953,3.725,954,3.725,955,3.725,956,3.725,962,2.701,963,4.058,964,1.382,966,2.284,969,4.058,970,3.725,971,3.725,972,3.725,974,1.255,975,1.161,976,1.255,997,3.067,1021,4.253,1033,3.304,1043,1.973,1047,1.745,1049,1.022,1050,1.382,1051,1.085,1095,1.382,1096,1.085,1097,1.745,1125,1.085,1135,3.089,1139,2.36,1141,2.36,1142,1.161,1144,1.982,1146,3.089,1155,2.36,1156,2.701,1159,2.36,1160,2.701,1162,1.382,1163,4.436,1164,3.089,1165,1.255,1166,3.089,1167,1.382,1170,1.382,1171,1.382,1172,2.36,1173,2.36,1174,1.382,1175,1.382,1176,1.255,1177,1.255,1178,1.382,1181,1.382,1198,1.853,1218,3.089,1223,2.144,1224,2.36,1230,1.161,1270,1.382,1300,1.255,1355,1.382,1356,2.689,1357,2.689,1358,2.689,1359,2.689,1360,2.689,1361,2.689,1362,2.689,1363,3.519,1364,1.575,1365,2.689,1366,1.575,1367,2.689,1368,1.575,1369,2.689,1370,1.575,1371,1.575,1372,1.575,1373,4.161,1374,2.689,1375,4.161,1376,1.575,1377,2.689,1378,1.575,1379,1.575,1380,1.575,1381,2.689,1382,4.468,1383,1.575,1384,2.689,1385,1.575,1386,1.255,1387,1.575,1388,1.575,1389,1.575,1390,1.575,1391,1.575,1392,1.575,1393,1.575,1394,1.575,1395,1.575,1396,1.575,1397,1.575,1398,1.575,1399,1.575,1400,1.575,1401,1.575,1402,1.575,1403,3.519,1404,1.575,1405,1.575,1406,2.689,1407,1.575,1408,1.575,1409,1.575,1410,1.575,1411,2.689,1412,1.575,1413,4.672,1414,5.029,1415,1.575,1416,2.689,1417,2.36,1418,4.672,1419,3.519,1420,1.575,1421,3.519,1422,4.161,1423,1.575,1424,3.519,1425,2.689,1426,2.36,1427,4.161,1428,3.519,1429,1.575,1430,1.575,1431,2.689,1432,1.575,1433,2.689,1434,3.089,1435,3.519,1436,1.575,1437,1.382,1438,2.689,1439,1.575,1440,1.575,1441,1.575,1442,1.575,1443,1.575,1444,1.575,1445,1.382,1446,1.575,1447,1.575,1448,1.575,1449,1.575,1450,1.575,1451,2.689,1452,1.575,1453,1.575,1454,2.689,1455,2.689,1456,1.575,1457,1.575,1458,1.575,1459,1.575,1460,1.575,1461,1.575,1462,1.575,1463,1.575]],["title/guards/FilesGuard.html",[1109,3.132,1128,2.928]],["body/guards/FilesGuard.html",[3,0.114,4,0.102,5,0.161,9,0.185,22,0.33,23,0.011,28,0.416,45,1.913,65,0.231,77,0.197,78,0.158,81,0.007,82,0.007,88,3.128,104,0.942,125,1.363,126,1.98,137,1.401,138,0.835,140,0.993,141,3.519,173,0.647,185,2.377,186,2.03,188,1.153,231,0.954,235,1.479,251,2.03,255,2.232,257,2.03,265,2.121,266,1.892,271,1.921,402,2.727,403,2.727,404,2.727,405,2.842,406,3.278,438,4.854,447,1.854,493,2.735,656,3.22,741,4.104,754,3.097,786,3.097,811,2.154,912,3.788,916,2.245,924,3.097,1027,3.349,1033,2.727,1037,3.097,1043,2.735,1096,2.895,1097,3.744,1110,2.895,1111,3.097,1112,2.895,1113,5.476,1115,4.854,1116,5.476,1118,3.349,1119,2.895,1120,2.957,1121,4.251,1122,3.349,1123,4.598,1124,3.349,1125,4.885,1126,3.974,1127,3.349,1128,3.974,1129,3.349,1130,3.349,1131,3.349,1132,4.598,1133,3.349,1134,3.349,1464,4.201,1465,4.201]],["title/classes/HttpExceptionFilter.html",[78,0.116,1466,3.387]],["body/classes/HttpExceptionFilter.html",[3,0.145,4,0.131,5,0.116,9,0.237,20,3.338,22,0.269,23,0.011,28,0.387,65,0.221,77,0.16,78,0.147,81,0.008,82,0.008,104,0.877,105,4.709,125,1.601,137,1.303,138,0.777,140,1.268,173,0.826,202,2.615,204,2.544,255,2.231,275,5.751,276,3.697,278,2.459,336,5.475,405,2.643,460,1.728,894,3.808,1031,4.995,1120,3.474,1466,5.402,1467,5.948,1468,4.709,1469,6.519,1470,5.948,1471,7.802,1472,6.849,1473,5.365,1474,4.709,1475,4.277,1476,5.365,1477,4.709,1478,4.709,1479,4.709,1480,5.365,1481,5.365,1482,5.365,1483,5.365,1484,5.365,1485,5.365,1486,5.365]],["title/injectables/JwtStrategy.html",[231,0.615,412,2.928]],["body/injectables/JwtStrategy.html",[3,0.146,4,0.131,5,0.117,9,0.238,22,0.34,23,0.011,28,0.49,65,0.269,77,0.161,78,0.147,81,0.008,82,0.008,88,2.377,104,1.11,125,1.605,126,2.078,137,1.651,138,0.984,140,1.273,146,1.841,159,2.221,164,2.879,173,0.829,188,1.077,231,0.984,232,1.787,235,1.897,311,4.812,312,3.008,314,3.497,315,4.295,340,2.762,395,5.008,397,4.729,400,3.497,401,5.073,408,3.971,412,4.682,421,3.971,428,4.295,1099,4.729,1230,3.971,1487,4.729,1488,6.794,1489,6.794,1490,5.387,1491,6.794,1492,5.387,1493,5.387,1494,5.387,1495,5.387,1496,4.729,1497,5.387,1498,5.387,1499,5.387,1500,5.387,1501,5.387,1502,5.387,1503,5.387,1504,5.387]],["title/controllers/KnowledgeController.html",[119,1.641,1505,3.132]],["body/controllers/KnowledgeController.html",[3,0.108,4,0.097,5,0.086,9,0.175,22,0.365,23,0.011,25,1.425,28,0.544,39,1.585,42,0.843,51,1.301,65,0.258,77,0.119,78,0.109,79,1.833,81,0.007,82,0.007,104,1.19,119,1.535,121,1.488,124,2.325,125,1.311,135,3.247,137,1.769,138,1.055,139,3.578,140,1.783,148,3.548,149,4.091,151,2.845,159,1.638,160,2.58,161,1.694,162,2.58,163,1.817,164,2.124,165,3.099,166,2.58,167,3.413,168,2.325,169,2.037,170,2.58,171,2.739,172,2.219,173,0.612,174,1.958,176,1.958,182,2.58,183,3.169,184,2.219,185,1.638,186,1.399,188,1.456,191,2.739,192,2.739,262,1.841,374,2.58,375,2.325,384,2.739,507,1.694,512,2.966,517,4.493,523,4.77,700,2.739,715,4.151,719,2.58,721,3.489,736,2.93,1475,3.169,1505,4.091,1506,3.489,1507,3.169,1508,4.872,1509,4.872,1510,4.872,1511,6.076,1512,5.613,1513,5.613,1514,3.489,1515,3.974,1516,3.974,1517,3.489,1518,3.974,1519,3.974,1520,3.489,1521,4.091,1522,3.974,1523,3.974,1524,3.489,1525,3.974,1526,3.489,1527,4.493,1528,4.091,1529,3.974,1530,4.425,1531,3.603,1532,3.489,1533,3.974,1534,3.974,1535,3.974,1536,3.974,1537,3.974,1538,3.974,1539,3.974,1540,3.974,1541,3.974,1542,3.974,1543,2.93,1544,3.974,1545,3.974]],["title/injectables/KnowledgeManageService.html",[231,0.615,1531,2.758]],["body/injectables/KnowledgeManageService.html",[3,0.099,4,0.089,5,0.079,9,0.161,22,0.387,23,0.011,28,0.545,39,1.455,42,0.481,51,1.285,65,0.252,68,1.109,77,0.109,78,0.1,79,1.483,81,0.006,82,0.006,104,1.199,125,1.234,126,2.368,137,1.782,138,1.062,139,1.73,140,1.734,146,2.409,148,3.615,151,3.128,173,0.562,174,1.797,176,1.797,186,1.839,188,1.409,227,1.246,231,0.756,232,1.21,235,1.839,237,3.16,249,1.73,251,1.839,255,1.809,257,2.659,262,2.024,278,1.896,279,2.305,280,2.037,437,1.797,444,2.368,507,1.555,512,2.792,517,4.325,523,4.205,739,2.689,748,4.865,749,4.165,758,3.85,779,3.85,781,3.6,788,2.792,1148,3.202,1289,3.202,1290,3.202,1291,3.202,1507,4.865,1508,4.585,1509,4.585,1510,4.585,1511,5.848,1512,5.356,1513,4.585,1514,4.585,1517,4.585,1520,4.585,1524,3.202,1526,4.585,1527,4.325,1530,4.165,1531,3.391,1546,6.782,1547,3.202,1548,4.904,1549,3.648,1550,4.585,1551,3.648,1552,3.648,1553,3.648,1554,3.648,1555,6.662,1556,3.648,1557,2.368,1558,2.908,1559,3.648,1560,3.202,1561,3.648,1562,3.202,1563,3.648,1564,3.648,1565,5.224,1566,3.648,1567,5.224,1568,3.648,1569,3.202,1570,3.202]],["title/modules/KnowledgeModule.html",[211,1.542,305,2.928]],["body/modules/KnowledgeModule.html",[3,0.154,4,0.139,5,0.124,23,0.011,65,0.272,77,0.17,78,0.156,81,0.009,82,0.009,121,2.633,173,0.877,211,2.77,213,2.702,214,2.702,215,2.92,216,2.92,217,2.702,218,3.913,219,2.92,222,3.606,223,2.92,224,2.807,226,3.181,227,1.946,229,3.044,305,5.885,719,3.698,1505,5.626,1531,5.415,1532,5,1548,5.415,1557,3.698,1558,4.542,1571,5,1572,5,1573,5.697,1574,5.697,1575,5.697,1576,5.697]],["title/injectables/KnowledgeService.html",[231,0.615,1548,2.758]],["body/injectables/KnowledgeService.html",[3,0.117,4,0.105,5,0.094,9,0.191,22,0.376,23,0.011,28,0.558,51,1.258,65,0.253,68,1.314,77,0.129,78,0.118,79,1.823,81,0.007,82,0.007,104,1.226,125,1.389,126,2.162,127,3.615,128,4.41,131,3.615,132,3.615,133,4.051,137,1.823,138,1.087,139,3.558,140,1.773,146,2.009,173,0.665,174,2.129,176,2.129,186,1.521,188,1.547,227,1.476,231,0.851,232,1.433,235,2.07,237,3.402,249,2.049,251,1.521,255,1.948,257,2.07,265,1.392,266,1.241,278,1.568,517,4.656,807,4.687,809,5.161,811,3.014,1507,6.171,1527,4.656,1530,4.687,1547,3.793,1548,3.816,1550,5.161,1557,2.805,1558,3.445,1560,3.793,1562,3.793,1569,3.793,1570,3.793,1577,3.793,1578,4.321,1579,4.321,1580,4.321,1581,4.321,1582,4.051,1583,4.321,1584,4.051,1585,4.321,1586,4.321,1587,5.879,1588,4.321,1589,4.321,1590,4.321]],["title/classes/LoginDto.html",[78,0.116,365,3.132]],["body/classes/LoginDto.html",[3,0.139,4,0.125,5,0.112,9,0.227,10,1.318,15,1.791,22,0.33,23,0.011,25,1.246,28,0.475,42,1.012,65,0.215,77,0.154,78,0.18,81,0.008,82,0.008,202,2.947,342,4.065,360,5.804,365,4.861,460,1.656,466,2.624,468,2.563,469,1.756,472,3.453,473,1.705,489,2.725,500,2.747,502,4.055,516,4.055,593,4.861,603,3.857,632,4.28,648,5.367,1591,4.512,1592,6.594,1593,6.594,1594,6.594,1595,6.594,1596,6.594,1597,6.594,1598,5.14,1599,5.14,1600,5.14,1601,5.14,1602,5.14,1603,6.594,1604,6.594,1605,5.14]],["title/entities/Menu.html",[0,1.292,1606,2.758]],["body/entities/Menu.html",[0,1.379,2,2.073,3,0.123,4,0.111,5,0.098,9,0.2,10,1.214,22,0.424,23,0.011,25,1.539,26,3.98,28,0.588,37,3.469,42,1.074,44,3.824,45,2.426,47,4.177,48,3.131,49,3.723,51,1.126,52,3.248,65,0.148,66,3.723,67,6.421,68,1.379,77,0.135,78,0.124,79,1.664,81,0.007,82,0.007,93,3.124,99,3.734,100,4.185,104,0.741,278,2.655,1047,4.446,1606,5.498,1607,3.98,1608,6.011,1609,6.011,1610,6.011,1611,6.011,1612,6.695,1613,6.011,1614,6.073,1615,4.534,1616,4.534,1617,4.534,1618,4.534,1619,4.534,1620,4.534,1621,4.534,1622,4.534,1623,4.534,1624,4.534,1625,4.534,1626,4.534]],["title/controllers/MenuController.html",[119,1.641,1627,3.132]],["body/controllers/MenuController.html",[3,0.088,4,0.079,5,0.07,9,0.143,22,0.315,23,0.011,25,1.328,28,0.507,51,1.175,65,0.249,77,0.097,78,0.088,79,1.854,81,0.006,82,0.006,104,1.098,119,1.248,121,1.21,124,1.89,125,1.13,126,2.329,127,2.941,128,3.869,129,3.696,131,3.501,132,3.501,135,2.798,137,1.632,138,0.973,140,1.662,146,2.403,159,1.332,160,2.098,161,1.378,162,2.098,163,1.477,164,1.727,165,1.804,166,2.098,167,2.941,168,1.89,169,3.226,170,2.098,172,1.804,173,0.497,182,4.36,184,1.804,185,1.332,186,1.138,187,2.576,188,1.406,204,3.78,255,1.91,257,2.476,265,2.407,266,1.929,268,3.813,278,1.173,279,1.426,372,1.89,373,2.227,374,2.098,375,1.89,376,2.227,382,2.227,384,2.227,407,1.477,437,1.592,444,2.098,693,3.923,715,4.085,731,3.923,732,3.923,788,3.589,811,1.657,892,3.926,894,3.605,1147,5.607,1426,6.173,1521,2.382,1528,2.382,1543,2.382,1582,2.227,1584,2.227,1606,4.953,1627,3.525,1628,2.837,1629,4.782,1630,2.837,1631,3.232,1632,3.232,1633,6.173,1634,2.837,1635,3.232,1636,2.382,1637,2.576,1638,3.232,1639,3.232,1640,4.782,1641,3.232,1642,3.232,1643,3.232,1644,2.576,1645,3.232,1646,2.576,1647,3.696,1648,2.837,1649,3.232,1650,3.232,1651,3.232,1652,5.693,1653,3.232,1654,5.693,1655,5.355,1656,4.997,1657,3.232,1658,3.232,1659,4.782,1660,4.782,1661,3.232,1662,3.232,1663,5.693,1664,3.232,1665,3.232,1666,3.232,1667,3.232]],["title/modules/MenuModule.html",[211,1.542,306,2.928]],["body/modules/MenuModule.html",[3,0.159,4,0.143,5,0.128,23,0.011,65,0.27,77,0.176,78,0.161,81,0.009,82,0.009,121,2.685,173,0.905,211,2.809,213,2.788,214,2.788,215,3.014,216,3.014,217,2.788,218,3.968,219,3.014,222,3.677,223,3.014,224,2.896,226,3.282,227,2.009,229,3.142,306,5.792,1606,3.816,1627,5.705,1646,4.687,1647,5.456,1648,5.16,1668,5.16,1669,5.16,1670,5.879,1671,5.879,1672,5.879]],["title/injectables/MenuService.html",[231,0.615,1647,2.758]],["body/injectables/MenuService.html",[3,0.103,4,0.092,5,0.082,9,0.167,22,0.372,23,0.011,28,0.55,51,1.275,65,0.221,68,1.15,77,0.113,78,0.103,79,1.927,81,0.007,82,0.007,104,1.213,125,1.266,126,2.379,127,3.296,128,4.164,129,3.479,131,3.296,132,3.296,137,1.804,138,1.075,140,1.754,141,4.168,146,1.831,173,0.582,186,1.331,188,1.484,227,1.292,231,0.776,232,1.254,235,1.887,237,3.212,249,1.794,251,1.331,255,1.69,257,2.192,260,4.589,278,1.373,896,3.32,982,3.32,1047,2.455,1147,5.919,1582,3.693,1584,3.693,1606,3.479,1608,5.944,1609,3.32,1610,3.32,1611,5.464,1612,4.704,1613,3.32,1630,4.704,1633,6.275,1636,3.951,1646,3.015,1647,3.479,1656,4.704,1673,3.32,1674,5.359,1675,3.782,1676,3.782,1677,5.359,1678,3.782,1679,3.782,1680,5.359,1681,3.782,1682,6.772,1683,3.782,1684,3.782,1685,3.782,1686,3.782,1687,5.359,1688,3.782,1689,3.782,1690,3.782,1691,3.782,1692,3.782,1693,3.782,1694,3.782,1695,3.782,1696,3.782,1697,3.782,1698,3.782,1699,3.782,1700,3.782,1701,3.782,1702,3.782,1703,3.32,1704,3.782]],["title/injectables/ParseFileIdsPipe.html",[231,0.615,1705,3.387]],["body/injectables/ParseFileIdsPipe.html",[3,0.142,4,0.127,5,0.113,9,0.23,22,0.261,23,0.011,28,0.377,42,0.688,65,0.171,77,0.156,78,0.143,79,1.983,81,0.008,82,0.008,104,0.854,125,1.574,137,1.269,138,0.756,140,1.234,173,0.804,188,1.544,231,0.965,232,1.732,255,2.098,265,2.489,266,2.219,493,3.664,498,3.56,507,3.127,508,3.85,1043,3.785,1120,2.678,1301,4.591,1705,5.311,1706,4.585,1707,5.311,1708,5.848,1709,6.782,1710,5.223,1711,5.223,1712,7.726,1713,6.662,1714,6.662,1715,4.585,1716,5.223]],["title/injectables/ParseFileTypePipe.html",[231,0.615,1717,3.387]],["body/injectables/ParseFileTypePipe.html",[3,0.139,4,0.125,5,0.111,9,0.226,22,0.257,23,0.011,28,0.37,42,0.868,61,3.376,65,0.167,77,0.153,78,0.14,81,0.008,82,0.008,104,0.838,125,1.556,137,1.246,138,0.743,140,1.212,173,0.79,188,1.534,231,0.954,232,1.701,255,1.788,265,2.343,266,2.089,278,2.39,447,2.263,498,3.519,507,3.521,508,4.854,513,4.09,780,6.119,1043,3.64,1063,4.503,1120,2.63,1301,4.538,1707,5.25,1708,5.799,1709,6.736,1715,4.503,1717,5.25,1718,4.503,1719,5.13,1720,5.13,1721,6.585,1722,5.13,1723,6.585,1724,5.13]],["title/injectables/ParseStringDatePipe.html",[231,0.615,712,3.132]],["body/injectables/ParseStringDatePipe.html",[3,0.159,4,0.143,5,0.128,9,0.259,22,0.294,23,0.011,28,0.424,42,1.062,65,0.234,77,0.176,78,0.212,81,0.009,82,0.009,104,0.961,125,1.695,137,1.428,138,0.851,140,1.389,173,0.905,188,1.175,231,1.039,232,1.95,265,1.894,266,1.689,473,2.379,498,3.833,507,3.299,712,5.287,1043,3.402,1120,3.014,1301,4.942,1707,5.718,1725,6.295,1726,5.16,1727,5.879,1728,5.879,1729,5.879,1730,5.879]],["title/entities/PlantDiseaseKnowledge.html",[0,1.292,1557,2.758]],["body/entities/PlantDiseaseKnowledge.html",[0,0.584,2,0.879,3,0.052,4,0.047,5,0.042,9,0.14,10,0.636,14,2.085,21,2.271,22,0.432,23,0.011,25,1.536,28,0.587,36,2.891,37,3.842,38,2.764,39,1.885,40,2.891,42,1.129,43,5.258,44,4.773,45,2.839,47,4.022,48,3.13,49,3.527,51,0.489,52,1.929,55,4.496,63,1.775,65,0.063,66,3.858,68,0.584,76,1.417,77,0.057,78,0.053,79,0.988,80,4.202,81,0.004,82,0.004,278,3.102,520,3.242,521,3.242,522,3.242,523,2.802,524,3.242,525,3.242,526,3.242,527,3.767,528,3.242,529,3.242,530,3.242,531,3.242,532,3.242,533,3.242,534,3.242,535,3.242,536,3.242,537,3.242,538,3.242,539,3.242,540,3.242,541,3.242,542,3.242,543,3.242,544,3.242,545,3.242,1557,2.064,1731,1.687,1732,8.613,1733,1.922,1734,1.922,1735,1.922,1736,1.922,1737,1.922,1738,1.922,1739,1.922,1740,1.922,1741,1.922,1742,1.922,1743,1.922,1744,1.922,1745,1.922,1746,1.922,1747,1.922,1748,1.922,1749,1.922,1750,1.922,1751,1.922,1752,1.922,1753,1.922,1754,1.922,1755,1.922,1756,1.922,1757,1.922,1758,1.922,1759,1.922,1760,1.922,1761,1.922,1762,1.922,1763,1.922]],["title/entities/Profile.html",[0,1.292,624,2.485]],["body/entities/Profile.html",[0,1.391,2,2.091,3,0.124,4,0.112,5,0.099,9,0.202,10,1.221,22,0.425,23,0.011,25,1.518,28,0.579,37,3.628,39,2.437,42,1.076,44,4.558,45,2.708,47,4.185,48,3.257,49,3.872,51,1.13,52,3.262,65,0.199,66,3.733,68,1.391,77,0.137,78,0.125,79,1.671,81,0.007,82,0.007,99,3.757,104,1.124,278,2.856,407,3.674,447,2.696,624,3.574,1764,4.015,1765,5.484,1766,6.879,1767,6.038,1768,5.484,1769,4.574,1770,4.574,1771,5.362,1772,4.574,1773,4.574,1774,4.574,1775,4.574,1776,4.574,1777,4.574,1778,5.362,1779,4.574,1780,4.574]],["title/classes/RegisterDto.html",[78,0.116,369,3.132]],["body/classes/RegisterDto.html",[3,0.151,4,0.136,5,0.121,9,0.246,10,1.389,15,1.887,22,0.348,23,0.011,25,1.313,28,0.501,42,1.043,65,0.227,77,0.167,78,0.19,81,0.009,82,0.009,202,2.867,342,4.224,369,5.123,386,4.911,460,1.799,466,2.705,468,2.663,469,1.908,472,3.588,473,1.853,489,2.601,500,3.714,502,3.435,603,4.065,632,4.511,648,5.577,1781,4.903,1782,6.95,1783,5.586,1784,5.586]],["title/interfaces/Request.html",[271,1.942,406,1.874]],["body/interfaces/Request.html",[3,0.158,4,0.142,5,0.127,9,0.258,10,1.428,22,0.292,23,0.011,42,0.941,51,0.899,65,0.252,77,0.213,78,0.16,81,0.009,82,0.009,88,2.576,159,2.407,163,3.265,173,0.899,185,2.407,231,1.034,271,3.265,273,3.79,311,4.514,312,3.26,340,2.993,394,4.304,395,4.304,396,4.655,399,4.655,400,3.79,401,5.219,402,3.79,403,3.79,404,3.79,405,2.877,406,3.151,407,3.676,408,4.304]],["title/interfaces/Request-1.html",[262,1.175,271,1.619,406,1.562]],["body/interfaces/Request-1.html",[3,0.117,4,0.105,5,0.163,9,0.19,10,1.174,22,0.334,23,0.011,45,1.948,65,0.234,77,0.199,78,0.161,81,0.007,82,0.007,88,3.162,126,1.64,141,3.138,173,0.664,185,2.421,186,2.067,188,1.174,231,0.967,251,2.067,255,2.243,257,2.067,265,2.151,266,1.918,271,1.972,273,2.8,402,2.8,403,2.8,404,2.8,405,2.893,406,3.413,438,4.922,447,1.903,493,2.785,656,3.279,741,3.844,754,3.18,786,3.18,811,2.211,912,4.305,916,2.305,924,3.18,1033,4.653,1037,5.283,1043,2.785,1096,2.973,1097,3.812,1110,2.973,1112,2.973,1113,4.922,1115,4.329,1116,4.922,1119,2.973,1120,3.01,1121,4.329,1122,3.439,1123,4.682,1124,3.439,1125,4.939,1126,4.047,1127,3.439,1128,2.973,1129,3.439,1130,3.439,1131,3.439,1132,4.682,1133,3.439,1134,3.439]],["title/classes/ResetPasswordDto.html",[78,0.116,1785,3.132]],["body/classes/ResetPasswordDto.html",[3,0.159,4,0.143,5,0.127,9,0.259,10,1.432,15,1.593,22,0.294,23,0.011,25,1.108,28,0.423,42,0.944,48,2.34,65,0.234,77,0.175,78,0.196,81,0.009,82,0.009,138,1.037,202,2.722,342,4.317,460,1.889,466,2.447,468,2.522,469,2.004,473,1.945,488,3.16,489,2.681,494,3.607,628,5.279,629,5.699,630,5.279,631,4.676,632,4.649,1785,5.279,1786,6.287,1787,4.676,1788,5.148]],["title/entities/Role.html",[0,1.292,161,1.811]],["body/entities/Role.html",[0,1.45,2,2.18,3,0.129,4,0.116,5,0.104,9,0.21,10,1.255,14,3.6,21,3.921,22,0.421,23,0.011,25,1.504,28,0.574,36,3.826,37,3.54,39,2.977,40,4.082,42,0.983,44,3.507,45,2.475,47,3.826,48,2.977,49,3.54,51,0.967,52,3.331,63,3.507,65,0.205,66,3.678,68,1.45,76,4.63,77,0.142,78,0.13,79,1.706,81,0.008,82,0.008,104,1.148,161,2.677,278,2.279,407,3.641,589,5.176,660,4.845,664,3.515,674,4.63,1789,4.186,1790,6.164,1791,4.769,1792,4.769,1793,4.769,1794,4.769,1795,4.769,1796,6.28,1797,4.769,1798,4.769,1799,4.769]],["title/controllers/RoleController.html",[119,1.641,1800,3.132]],["body/controllers/RoleController.html",[3,0.1,4,0.09,5,0.08,9,0.163,22,0.336,23,0.011,25,1.393,28,0.532,51,1.215,65,0.261,77,0.111,78,0.101,79,1.918,81,0.006,82,0.006,104,1.097,119,1.432,121,1.387,124,2.168,125,1.248,126,2.373,127,3.248,128,4.126,129,3.996,131,3.785,132,3.785,133,2.554,135,3.09,137,1.63,138,0.972,139,3.498,140,1.743,146,2.519,159,2.537,160,2.406,161,2.86,162,2.406,163,1.694,164,1.98,165,2.069,166,2.406,167,3.248,168,2.168,169,3.44,170,2.406,172,2.069,173,0.57,174,1.826,176,1.826,182,4.605,184,2.069,185,1.527,186,1.305,187,2.954,188,1.474,255,1.822,257,2.596,266,1.768,278,1.345,279,1.635,372,2.168,373,2.554,374,2.406,375,2.168,376,2.554,382,2.554,384,2.554,437,1.826,444,2.406,586,4.624,715,4.356,731,4.242,732,4.242,736,2.732,788,3.586,1521,2.732,1528,2.732,1543,2.732,1582,2.554,1584,2.554,1634,3.253,1636,2.732,1637,2.954,1644,2.954,1655,5.655,1800,3.894,1801,3.253,1802,7.374,1803,3.706,1804,3.706,1805,5.282,1806,3.706,1807,3.706,1808,3.706,1809,3.706,1810,3.706,1811,4.624,1812,3.706,1813,4.637,1814,3.996,1815,3.253,1816,3.706,1817,3.706,1818,3.706,1819,3.706,1820,3.706,1821,5.282,1822,3.706,1823,3.706]],["title/modules/RoleModule.html",[211,1.542,307,2.928]],["body/modules/RoleModule.html",[3,0.159,4,0.143,5,0.128,23,0.011,65,0.27,77,0.176,78,0.161,81,0.009,82,0.009,121,2.685,161,2.506,173,0.905,211,2.809,213,2.788,214,2.788,215,3.014,216,3.014,217,2.788,218,3.968,219,3.014,222,3.677,223,3.014,224,2.896,226,3.282,227,2.009,229,3.142,307,5.792,1800,5.705,1814,5.456,1815,5.16,1824,5.16,1825,5.16,1826,5.879,1827,5.16,1828,5.879,1829,5.879]],["title/injectables/RoleService.html",[231,0.615,1814,2.758]],["body/injectables/RoleService.html",[3,0.108,4,0.097,5,0.086,9,0.175,22,0.364,23,0.011,28,0.558,51,1.235,65,0.246,68,1.207,77,0.119,78,0.109,79,1.681,81,0.007,82,0.007,104,1.232,125,1.31,126,2.393,127,3.409,128,4.254,129,3.599,131,3.409,132,3.409,133,3.82,137,1.768,138,1.054,139,3.452,140,1.782,146,2.487,159,1.636,161,3.299,173,0.611,174,1.955,176,1.955,188,1.455,227,1.356,231,0.803,232,1.316,235,1.952,237,3.281,249,1.882,251,1.397,255,1.976,257,2.824,260,2.925,265,1.786,266,1.592,456,3.483,507,1.692,586,4.767,811,2.842,1043,2.629,1582,3.82,1584,3.82,1636,4.087,1703,4.866,1790,3.483,1811,4.767,1813,4.866,1814,3.599,1827,3.483,1830,3.483,1831,6.917,1832,3.968,1833,3.968,1834,5.544,1835,3.968,1836,3.968,1837,3.968,1838,3.968,1839,3.968,1840,3.968,1841,3.968,1842,3.968,1843,5.544,1844,3.968,1845,3.968,1846,5.544,1847,3.968,1848,3.968,1849,3.968,1850,3.968,1851,3.164,1852,3.968,1853,3.968]],["title/guards/RolesGuard.html",[165,2.372,1109,3.132]],["body/guards/RolesGuard.html",[3,0.149,4,0.134,5,0.119,9,0.242,22,0.344,23,0.011,28,0.496,45,1.821,65,0.257,77,0.164,78,0.15,81,0.008,82,0.008,104,1.124,125,1.625,137,1.67,138,0.996,140,1.297,161,2.34,165,3.839,173,0.845,185,2.263,188,1.374,231,0.996,235,1.933,255,1.867,407,2.51,1111,4.047,1113,5.8,1115,5.068,1116,5.8,1118,4.377,1120,2.815,1121,4.047,1854,4.819,1855,5.49,1856,8.265,1857,5.49,1858,5.49,1859,6.875,1860,4.819,1861,5.49,1862,4.377,1863,5.49,1864,6.875,1865,5.49,1866,5.49,1867,5.49,1868,5.49,1869,5.49]],["title/entities/Task.html",[0,1.292,1163,2.758]],["body/entities/Task.html",[0,1.089,2,1.638,3,0.097,4,0.087,5,0.078,9,0.158,10,1.031,14,3.096,20,2.976,21,3.373,22,0.436,23,0.011,25,1.562,28,0.596,36,3.387,37,3.857,39,3.067,40,3.738,42,1.013,44,4.761,45,2.637,47,3.942,48,3.067,49,3.133,51,1.273,52,1.699,63,2.879,65,0.117,66,3.892,68,1.089,77,0.107,78,0.098,79,1.467,81,0.006,82,0.006,91,5.478,138,1.114,447,2.275,598,3.533,599,4.162,600,4.162,601,3.921,602,4.816,655,3.228,657,3.533,660,4.289,918,4.525,920,4.11,997,4.452,1004,4.525,1007,4.525,1163,3.347,1230,5.86,1417,5.302,1434,5.302,1870,3.144,1871,4.11,1872,3.582,1873,3.582,1874,3.582,1875,3.582,1876,3.582,1877,3.582,1878,3.582,1879,3.582,1880,5.156,1881,3.582,1882,3.582,1883,3.582,1884,3.582,1885,3.582,1886,6.04,1887,3.582,1888,3.582]],["title/classes/TypeormFilter.html",[78,0.116,372,2.485]],["body/classes/TypeormFilter.html",[3,0.148,4,0.133,5,0.118,9,0.241,22,0.273,23,0.011,28,0.393,38,3.191,65,0.224,68,1.659,77,0.163,78,0.149,81,0.008,82,0.008,104,0.892,125,1.618,137,1.325,138,0.79,140,1.289,173,0.84,202,1.921,255,2.033,266,1.567,275,5.786,276,3.76,336,5.517,372,4.006,406,2.407,460,1.757,894,3.837,1031,4.021,1047,3.541,1120,3.511,1469,6.57,1470,6.011,1472,6.89,1474,6.011,1475,4.35,1477,4.789,1478,4.789,1479,4.789,1889,4.789,1890,7.85,1891,5.455,1892,6.848,1893,5.455,1894,5.455,1895,5.455,1896,5.455,1897,5.455,1898,5.455,1899,5.455,1900,5.455,1901,5.455,1902,5.455,1903,5.455]],["title/classes/UpdateAiServiceDto.html",[78,0.116,156,2.928]],["body/classes/UpdateAiServiceDto.html",[3,0.124,4,0.112,5,0.099,6,4.208,9,0.202,10,1.223,15,2.218,16,5.489,18,5.489,19,5.489,20,3.392,22,0.383,23,0.011,25,1.446,28,0.552,42,1.076,57,5.415,58,5.415,59,5.489,65,0.2,69,4.037,77,0.137,78,0.167,80,4.469,81,0.007,82,0.007,138,1.21,156,4.215,460,1.476,466,2.854,468,2.772,469,1.566,473,1.52,475,3.653,476,4.469,477,4.022,478,5.369,479,4.022,480,4.022,481,4.022,482,4.509,483,4.022,484,5.369,485,4.022,486,4.022,487,3.378,488,3.547,489,2.865,1904,6.912]],["title/classes/UpdateDatasetDto.html",[78,0.116,709,2.928]],["body/classes/UpdateDatasetDto.html",[3,0.129,4,0.116,5,0.104,9,0.21,10,1.255,15,2.205,22,0.352,23,0.011,25,1.326,28,0.506,42,1.022,45,2.083,51,0.967,61,2.445,65,0.229,77,0.142,78,0.192,79,1.526,81,0.008,82,0.008,104,1.267,138,1.081,188,1.255,202,2.804,262,2.329,460,1.536,466,2.721,468,2.628,469,1.629,470,2.79,471,3.862,473,1.582,488,3.293,489,2.629,492,3.802,493,3.85,494,2.932,495,4.186,497,3.515,498,3.753,499,4.186,500,2.549,502,2.932,504,4.186,506,3.862,507,2.677,508,3.515,509,4.186,510,4.186,511,5.513,512,3.356,513,3.802,514,3.286,515,2.932,516,2.932,709,4.328,1905,6.551,1906,4.769,1907,4.769,1908,4.769,1909,4.769]],["title/classes/UpdateFileDto.html",[78,0.116,1156,2.758]],["body/classes/UpdateFileDto.html",[3,0.117,4,0.105,5,0.093,9,0.19,10,1.171,15,2.034,22,0.375,23,0.011,25,1.259,28,0.481,42,1.018,45,1.943,48,1.715,49,2.779,51,1.102,65,0.218,71,3.669,77,0.175,78,0.196,79,1.956,81,0.007,82,0.007,138,1.037,202,2.994,251,2.721,262,2.484,460,1.385,466,2.75,468,2.721,469,1.469,470,2.515,471,4.098,472,3.395,473,1.426,488,2.941,489,2.495,493,2.039,494,3.603,498,3.131,500,3.131,506,3.603,507,1.833,514,2.963,515,2.644,516,2.644,603,2.515,637,2.963,643,4.319,647,2.963,916,3.562,962,4.327,987,3.169,989,3.428,993,3.428,994,3.428,1126,5.326,1156,3.803,1160,2.791,1910,5.706,1911,5.85,1912,4.299,1913,3.774,1914,3.774,1915,4.299,1916,4.299,1917,3.774,1918,3.774]],["title/classes/UpdateFilesAccessDto.html",[78,0.116,1160,2.758]],["body/classes/UpdateFilesAccessDto.html",[3,0.119,4,0.107,5,0.095,9,0.194,10,1.189,15,2.049,22,0.362,23,0.011,25,1.123,28,0.429,42,0.994,45,2.236,48,1.753,49,2.084,51,1.112,61,2.253,65,0.22,71,3.703,77,0.178,78,0.198,79,1.966,81,0.007,82,0.007,202,3.017,251,2.739,262,2.236,460,1.416,466,2.717,468,2.739,469,1.501,470,2.571,471,4.145,472,3.426,473,1.458,488,2.974,489,2.523,493,3.197,498,3.178,500,2.349,506,3.657,507,1.873,514,3.028,515,2.702,516,2.702,603,3.479,637,3.028,643,3.239,647,3.028,916,2.349,962,2.853,987,3.239,989,4.741,990,3.858,993,3.504,994,3.504,1126,5.361,1156,2.853,1160,3.861,1910,5.374,1911,5.917,1917,3.858,1918,3.858,1919,4.395,1920,4.395,1921,4.395,1922,4.395,1923,4.395,1924,4.395]],["title/classes/UpdatePasswordDto.html",[78,0.116,1925,3.132]],["body/classes/UpdatePasswordDto.html",[3,0.158,4,0.142,5,0.127,9,0.258,10,1.428,15,1.586,22,0.292,23,0.011,25,1.103,28,0.421,42,0.941,48,2.329,65,0.233,77,0.174,78,0.195,81,0.009,82,0.009,202,2.83,460,1.881,466,2.44,468,2.515,469,1.995,472,3.387,473,1.937,489,2.674,502,3.59,603,3.416,628,5.265,629,5.688,630,5.265,632,4.636,1787,4.655,1788,5.125,1925,5.265,1926,6.269,1927,7.716,1928,5.839]],["title/classes/UpdatePlantDiseaseKnowledgeDto.html",[78,0.116,1527,2.758]],["body/classes/UpdatePlantDiseaseKnowledgeDto.html",[3,0.06,4,0.054,5,0.048,9,0.098,10,0.717,15,2.229,22,0.411,23,0.011,25,1.55,28,0.592,42,1.143,65,0.117,77,0.067,78,0.098,80,4.43,81,0.004,82,0.004,138,1.256,460,0.718,466,2.963,468,2.901,469,0.761,473,0.739,476,5.226,488,3.636,489,3.073,519,1.776,520,3.59,521,3.59,522,3.59,523,3.103,524,3.59,525,3.59,526,3.59,527,3.59,528,3.59,529,3.59,530,3.59,531,3.59,532,3.59,533,3.59,534,3.59,535,3.59,536,3.59,537,3.59,538,3.59,539,3.59,540,3.59,541,3.59,542,3.59,543,3.59,544,3.59,545,3.59,553,3.149,559,3.952,560,3.149,562,1.956,563,3.149,564,3.149,565,3.149,569,3.149,574,3.149,575,3.149,582,3.149,584,3.149,585,4.53,1527,2.329,1929,7.233,1930,2.228,1931,2.228,1932,2.228,1933,2.228,1934,2.228,1935,2.228,1936,2.228,1937,2.228,1938,2.228,1939,2.228,1940,2.228,1941,2.228,1942,2.228,1943,2.228,1944,2.228,1945,2.228,1946,2.228,1947,2.228,1948,2.228,1949,2.228,1950,2.228,1951,2.228,1952,2.228,1953,2.228,1954,2.228,1955,2.228]],["title/classes/UpdateProfileDto.html",[78,0.116,1956,3.132]],["body/classes/UpdateProfileDto.html",[3,0.135,4,0.122,5,0.108,9,0.22,10,1.292,15,2.061,22,0.38,23,0.011,25,1.434,28,0.547,42,1.062,51,0.995,65,0.211,77,0.149,78,0.177,81,0.008,82,0.008,104,1.172,138,1.204,202,2.672,262,2.143,460,1.604,466,2.841,468,2.769,469,1.702,473,1.652,488,3.47,489,2.685,502,3.973,611,6.296,635,5.718,1765,5.718,1767,6.296,1768,5.718,1956,4.763,1957,6.27,1958,4.372,1959,4.981,1960,4.981,1961,4.981,1962,4.981,1963,6.462,1964,4.981,1965,4.981,1966,4.981]],["title/classes/UpdateRoleDto.html",[78,0.116,1811,2.928]],["body/classes/UpdateRoleDto.html",[3,0.145,4,0.131,5,0.116,9,0.236,10,1.353,15,2.23,22,0.371,23,0.011,25,1.402,28,0.535,42,1.082,65,0.221,77,0.16,78,0.185,81,0.008,82,0.008,104,1.213,138,1.189,460,1.724,466,2.806,468,2.745,469,1.829,473,1.776,476,4.817,488,3.44,489,2.918,588,4.268,589,5.47,590,4.699,591,4.699,593,4.988,594,4.699,1811,4.663,1967,6.843]],["title/classes/UpdateUserDto.html",[78,0.116,1968,3.132]],["body/classes/UpdateUserDto.html",[3,0.109,4,0.098,5,0.088,9,0.178,10,1.121,15,2.059,20,3.177,22,0.397,23,0.011,25,1.432,28,0.547,42,0.999,48,1.61,51,0.864,61,2.069,65,0.228,77,0.121,78,0.153,81,0.007,82,0.007,138,1.203,159,2.658,202,2.966,262,2.311,340,3.306,342,3.6,386,4.186,447,2.475,460,1.3,466,2.786,468,2.737,469,1.379,473,1.339,487,2.976,488,3.498,489,2.414,494,3.45,497,2.976,500,2.998,506,3.45,515,2.482,623,2.976,624,4.861,625,3.543,626,4.925,627,3.543,628,4.136,629,5.588,630,4.136,631,4.473,632,3.642,633,3.543,634,3.543,635,3.218,636,3.543,637,3.866,638,3.543,639,5.141,640,3.543,641,3.543,642,3.543,643,4.136,644,4.473,645,4.925,646,3.543,647,2.782,648,4.136,649,4.925,650,3.218,651,3.543,652,3.543,1957,6.199,1968,4.136]],["title/classes/UploadChunkDto.html",[78,0.116,1969,3.387]],["body/classes/UploadChunkDto.html",[3,0.136,4,0.122,5,0.109,9,0.221,10,1.295,15,1.951,22,0.411,23,0.011,25,1.357,28,0.518,42,0.947,51,1.281,65,0.235,77,0.149,78,0.196,79,1.847,81,0.008,82,0.008,202,2.84,262,2.521,460,1.611,462,3.987,463,5.729,466,2.756,467,4.389,468,2.676,469,1.708,470,2.925,471,4.419,472,3.605,473,1.659,489,2.425,598,4.203,603,4.203,604,4.389,606,5.603,607,5.686,1382,6.307,1913,4.389,1914,4.389,1969,5.165,1970,6.672,1971,5,1972,5,1973,5,1974,5,1975,5]],["title/entities/User.html",[0,1.292,407,1.942]],["body/entities/User.html",[0,1.222,2,1.837,3,0.109,4,0.098,5,0.087,9,0.177,10,1.118,14,3.297,20,3.169,21,3.591,22,0.424,23,0.011,25,1.519,28,0.58,36,3.565,37,3.59,39,3.019,40,3.88,42,0.997,44,3.883,45,2.702,47,3.88,48,3.019,49,3.59,51,0.861,52,3.051,63,3.122,65,0.21,66,3.683,68,1.222,76,5.126,77,0.12,78,0.11,79,1.563,81,0.007,82,0.007,104,0.657,159,2.651,161,3.227,262,1.855,278,2.524,340,3.297,342,3.591,386,4.175,407,2.557,447,3.069,624,4.705,660,4.515,664,2.962,673,4.909,674,4.122,1771,4.909,1778,4.909,1976,3.527,1977,4.018,1978,4.018,1979,4.018,1980,4.018,1981,4.018,1982,5.592,1983,5.592,1984,4.018,1985,4.018,1986,5.592,1987,4.018,1988,4.018,1989,4.018,1990,4.018,1991,3.527,1992,4.018,1993,4.018,1994,4.018]],["title/controllers/UserController.html",[119,1.641,1995,3.132]],["body/controllers/UserController.html",[3,0.06,4,0.054,5,0.138,9,0.098,15,0.602,22,0.358,23,0.011,25,1.376,28,0.525,42,0.96,45,0.735,51,1.205,65,0.263,77,0.066,78,0.061,79,1.77,81,0.004,82,0.004,104,1.242,119,0.856,121,0.83,124,1.297,125,0.844,126,2.361,135,1.297,137,1.737,138,1.035,140,1.721,146,2.489,148,2.638,149,1.634,151,1.831,159,0.914,160,1.439,161,0.945,162,1.439,163,1.013,164,1.185,165,1.238,166,1.439,167,3.47,168,1.297,169,2.893,170,1.439,171,1.528,172,1.238,173,0.341,174,1.092,176,1.76,182,3.915,184,1.238,185,0.914,186,0.78,188,1.48,191,1.528,192,1.528,255,1.532,257,1.58,265,0.714,266,1.822,278,1.628,279,0.978,340,2.638,372,1.297,373,1.528,374,1.439,375,1.297,376,1.528,382,1.528,384,1.528,389,1.946,405,1.76,406,3.266,407,1.633,427,3.092,437,1.092,444,1.439,599,1.528,621,4.675,624,2.09,691,1.946,693,5.295,700,4.156,715,3.663,722,1.946,728,1.767,731,3.546,732,3.546,736,1.634,788,1.185,833,2.913,836,3.136,837,3.136,838,1.439,839,1.767,840,1.946,841,1.767,842,1.767,843,1.946,844,1.439,845,3.136,846,1.767,847,1.767,848,2.848,849,1.634,850,1.528,851,3.136,852,1.946,853,1.528,854,1.946,862,1.946,863,1.946,864,1.946,865,3.136,881,1.767,882,3.136,889,1.946,890,1.946,891,1.946,966,1.439,1030,4.953,1031,3.793,1043,1.694,1046,1.767,1047,1.439,1052,1.946,1228,1.946,1445,1.946,1521,1.634,1528,1.634,1543,1.634,1637,1.767,1644,1.767,1655,4.808,1765,4.102,1768,4.102,1785,4.675,1925,4.675,1956,4.864,1968,4.864,1995,2.633,1996,1.946,1997,3.572,1998,5.145,1999,3.572,2000,4.487,2001,4.487,2002,4.487,2003,3.572,2004,4.487,2005,4.487,2006,4.487,2007,4.487,2008,4.487,2009,2.217,2010,3.572,2011,2.217,2012,3.572,2013,2.217,2014,2.217,2015,3.572,2016,2.217,2017,2.217,2018,3.572,2019,2.217,2020,2.217,2021,3.572,2022,2.217,2023,2.217,2024,2.217,2025,2.217,2026,2.217,2027,2.217,2028,2.217,2029,2.217,2030,2.217,2031,2.217,2032,2.217,2033,2.217,2034,2.217,2035,2.217,2036,2.217,2037,2.217,2038,2.217,2039,2.217,2040,2.217,2041,2.217,2042,2.217,2043,2.217,2044,3.572,2045,3.572,2046,2.217,2047,2.217,2048,1.946,2049,2.217,2050,2.217,2051,2.217,2052,2.217,2053,2.217,2054,2.217,2055,2.217,2056,2.217,2057,2.217,2058,2.217,2059,2.217,2060,2.217,2061,2.217,2062,4.487,2063,2.217,2064,2.217,2065,2.217,2066,2.217,2067,2.217,2068,2.217,2069,2.217,2070,2.217,2071,2.217,2072,2.217,2073,2.217,2074,2.217,2075,2.217,2076,2.217,2077,2.217,2078,2.217,2079,2.217,2080,2.217]],["title/modules/UserModule.html",[211,1.542,308,2.758]],["body/modules/UserModule.html",[3,0.137,4,0.124,5,0.11,15,1.377,23,0.011,65,0.278,77,0.151,78,0.139,81,0.008,82,0.008,121,2.446,126,1.416,161,2.786,173,0.78,188,1.013,211,2.625,213,2.404,214,2.404,215,2.599,216,2.599,217,2.404,218,3.708,219,3.708,222,3.35,223,2.599,224,2.498,226,2.83,227,1.732,229,3.493,308,5.347,310,4.817,311,4.469,312,2.83,314,3.291,333,3.737,334,3.737,407,2.318,414,4.041,415,3.291,419,4.041,420,3.737,421,3.737,422,4.041,423,3.493,424,4.45,427,5.934,624,3.823,650,4.041,1204,4.45,1991,4.45,1995,5.331,2048,4.45,2081,4.45,2082,4.45,2083,4.45,2084,5.069,2085,5.069,2086,5.069,2087,5.069]],["title/interfaces/UserPayload.html",[271,1.942,401,2.758]],["body/interfaces/UserPayload.html",[3,0.153,4,0.137,5,0.122,9,0.249,10,1.397,22,0.38,23,0.011,42,1.096,51,1.169,65,0.248,77,0.209,78,0.154,81,0.009,82,0.009,88,3.504,138,1.012,159,3.273,163,3.194,173,0.867,185,2.322,231,1.012,271,3.194,273,3.658,311,4.443,312,3.146,340,4.071,394,4.153,395,4.153,396,4.492,399,4.492,400,3.658,401,4.93,402,3.658,403,3.658,404,3.658,405,2.776,406,2.486,407,2.576,408,4.153]],["title/interfaces/UserQuery.html",[271,1.942,2088,3.387]],["body/interfaces/UserQuery.html",[3,0.168,4,0.151,5,0.135,9,0.274,10,1.481,22,0.397,23,0.011,42,1.044,51,1.31,81,0.009,82,0.009,138,1.188,148,4.207,151,4.207,271,2.837,273,4.028,340,4.207,623,4.573,2088,5.907,2089,5.446]],["title/coverage.html",[2090,4.633]],["body/coverage.html",[0,2.308,1,2.162,5,0.104,6,3.764,7,4.089,8,3.4,22,0.361,23,0.011,24,1.592,30,1.592,33,1.592,69,1.985,70,2.807,71,1.258,78,0.23,81,0.005,82,0.005,83,3.088,106,2.153,119,2.786,120,1.808,122,1.808,123,2.153,134,1.69,156,1.69,159,1.011,161,1.046,163,1.122,165,1.37,178,1.592,217,1.163,231,1.195,233,2.153,234,2.153,266,0.705,271,2.713,272,1.808,274,3.088,279,1.082,282,1.808,283,2.153,290,1.592,352,2.153,356,1.808,357,2.153,365,1.808,369,1.808,372,1.435,377,1.592,394,3.537,401,1.592,406,1.709,407,1.122,412,1.69,425,2.153,427,1.69,447,3.943,459,1.956,461,2.153,462,3.088,474,2.153,475,3.088,490,1.69,491,2.153,492,3.088,517,1.592,518,2.153,519,3.088,586,1.69,587,2.153,588,3.088,589,5.192,595,1.808,596,3.088,597,2.153,617,1.808,618,2.153,621,1.808,622,2.153,623,3.537,624,1.435,653,2.266,654,3.4,683,1.808,684,2.153,709,1.69,712,1.808,717,1.592,738,2.153,739,3.537,741,1.258,742,1.592,806,2.153,813,1.808,814,2.153,838,1.592,850,1.69,853,1.69,855,1.37,858,1.592,902,2.669,903,3.4,904,3.4,936,2.153,938,1.592,985,1.956,986,2.153,987,3.537,995,3.4,1020,1.69,1021,3.852,1022,2.153,1109,3.537,1110,1.69,1112,3.756,1119,1.69,1128,1.69,1156,1.592,1160,1.592,1163,1.592,1197,1.69,1198,1.69,1200,2.153,1209,2.153,1254,2.153,1292,3.088,1293,2.153,1299,1.956,1309,2.153,1318,1.956,1348,2.153,1355,2.153,1386,1.956,1466,1.956,1467,2.153,1468,2.153,1487,2.153,1505,1.808,1506,2.153,1527,1.592,1531,1.592,1546,2.153,1548,1.592,1557,2.514,1577,2.153,1591,2.153,1606,1.592,1607,2.153,1627,1.808,1628,2.153,1647,1.592,1673,2.153,1705,1.956,1706,2.153,1717,1.956,1718,2.153,1725,2.153,1726,2.153,1731,3.4,1764,2.153,1781,2.153,1785,1.808,1786,2.153,1787,3.088,1789,2.153,1800,1.808,1801,2.153,1811,1.69,1814,1.592,1830,2.153,1854,2.153,1862,1.956,1870,2.153,1889,2.153,1904,2.153,1905,2.153,1910,3.088,1925,1.808,1926,2.153,1929,2.153,1956,1.808,1957,3.088,1958,2.153,1967,2.153,1968,1.808,1969,1.956,1970,2.153,1976,2.153,1995,1.808,1996,2.153,2088,1.956,2089,2.153,2090,1.956,2091,2.153,2092,2.453,2093,2.453,2094,5.616,2095,6.603,2096,8.423,2097,2.153,2098,2.153,2099,2.153,2100,2.153,2101,2.153,2102,1.956,2103,2.153,2104,2.153,2105,3.4,2106,7.59,2107,7.357,2108,7.481,2109,3.4,2110,2.153,2111,2.153,2112,2.453,2113,7.044,2114,5.934,2115,3.873,2116,5.45,2117,3.873,2118,3.873,2119,2.453,2120,2.453,2121,2.453,2122,2.453,2123,2.453,2124,2.453,2125,2.453,2126,2.453,2127,2.453,2128,2.453,2129,2.453,2130,3.873,2131,2.453,2132,2.453,2133,2.453,2134,2.453,2135,2.453,2136,2.453,2137,2.453,2138,2.453]],["title/dependencies.html",[214,2.425,2139,3.108]],["body/dependencies.html",[23,0.011,68,1.804,78,0.197,81,0.009,82,0.009,173,0.913,214,2.814,227,2.027,312,3.313,400,3.851,405,2.923,415,3.851,428,4.73,440,5.208,469,2.027,470,3.471,473,1.968,841,4.73,846,4.73,849,4.373,1044,5.208,1496,5.208,1708,4.73,1860,5.208,2140,7.771,2141,5.933,2142,7.212,2143,5.933,2144,5.933,2145,5.933,2146,5.933,2147,5.933,2148,5.933,2149,5.933,2150,5.933,2151,5.933,2152,5.933,2153,5.933,2154,5.933,2155,5.933,2156,5.933,2157,5.933,2158,5.933,2159,5.933]],["title/miscellaneous/enumerations.html",[2160,2.072,2161,4.488]],["body/miscellaneous/enumerations.html",[9,0.114,20,1.986,23,0.011,38,2.358,57,1.902,58,1.902,81,0.005,82,0.005,161,1.718,262,0.856,314,2.616,407,1.843,420,2.971,507,3.847,593,2.971,614,3.213,639,3.213,838,2.616,920,3.213,1036,3.954,1341,3.213,1342,2.971,1344,3.213,1414,3.538,1437,3.538,1871,3.954,2160,1.51,2161,2.265,2162,3.213,2163,7.157,2164,4.03,2165,4.03,2166,4.03,2167,3.538,2168,4.03,2169,2.581,2170,2.581,2171,2.581,2172,4.03,2173,2.581,2174,4.03,2175,6.282,2176,4.03,2177,5.604,2178,4.03,2179,4.03,2180,3.538,2181,3.538,2182,3.538,2183,3.538,2184,3.538,2185,3.538,2186,3.538,2187,3.538,2188,3.538,2189,3.538,2190,3.538,2191,4.03,2192,4.03,2193,5.604,2194,4.03,2195,5.604,2196,4.03,2197,4.03,2198,4.353,2199,4.959,2200,4.959,2201,5.656,2202,4.919,2203,3.538,2204,3.538,2205,3.538,2206,4.03,2207,3.538,2208,4.03,2209,5.656,2210,3.538,2211,4.03,2212,4.919,2213,3.538,2214,4.03,2215,3.538,2216,4.03,2217,3.538,2218,4.03,2219,3.538,2220,4.03,2221,4.03,2222,4.03,2223,4.03,2224,3.538,2225,3.538,2226,4.353,2227,4.353,2228,4.353,2229,3.538,2230,4.03,2231,3.538,2232,4.03,2233,3.538,2234,3.538,2235,3.538,2236,3.538,2237,3.538,2238,3.538,2239,3.538,2240,3.538,2241,3.538,2242,3.538,2243,3.538,2244,3.538,2245,3.538,2246,3.538,2247,3.538,2248,3.954,2249,4.353,2250,4.03,2251,4.03,2252,4.03,2253,4.03,2254,3.538,2255,3.538,2256,3.538,2257,6.113,2258,3.538,2259,4.03,2260,3.538,2261,5.604,2262,4.03,2263,4.03,2264,5.604,2265,3.538,2266,3.538,2267,2.581,2268,3.538,2269,3.538,2270,3.538,2271,4.03,2272,3.538,2273,2.581,2274,4.03,2275,4.03,2276,4.03,2277,4.03,2278,4.03,2279,4.03,2280,2.581,2281,4.03,2282,4.03,2283,4.03,2284,4.03,2285,4.03,2286,4.03,2287,4.03,2288,4.03,2289,4.03,2290,4.03,2291,4.03,2292,4.03,2293,4.03,2294,2.581,2295,4.03,2296,2.581,2297,4.03,2298,2.581]],["title/miscellaneous/functions.html",[2160,2.072,2299,4.488]],["body/miscellaneous/functions.html",[9,0.3,23,0.01,81,0.01,82,0.01,217,3.905,2111,5.979,2160,3.984,2299,5.979,2300,6.811]],["title/index.html",[9,0.156,2301,3.541,2302,3.541]],["body/index.html",[4,0.103,15,1.146,23,0.011,81,0.007,82,0.007,224,3.787,237,2.002,263,3.366,288,5.079,351,3.706,466,2.427,975,4.266,1046,3.366,1064,3.706,1342,3.112,1851,3.366,2090,3.366,2091,5.079,2162,6.128,2303,4.222,2304,4.222,2305,6.602,2306,5.787,2307,4.222,2308,4.222,2309,4.222,2310,4.222,2311,5.787,2312,6.602,2313,4.222,2314,4.222,2315,7.103,2316,4.222,2317,8.015,2318,4.222,2319,7.87,2320,4.222,2321,4.222,2322,5.787,2323,4.222,2324,6.602,2325,3.706,2326,4.222,2327,4.222,2328,4.222,2329,4.222,2330,4.222,2331,7.103,2332,8.015,2333,5.787,2334,4.222,2335,4.222,2336,4.222,2337,4.222,2338,7.686,2339,5.787,2340,7.103,2341,4.222,2342,5.787,2343,4.222,2344,4.222,2345,5.787,2346,7.686,2347,7.103,2348,4.222,2349,5.787,2350,4.222,2351,4.222,2352,4.222,2353,4.222,2354,7.103,2355,4.222,2356,4.222,2357,4.222,2358,4.222,2359,5.787,2360,4.222,2361,4.222,2362,4.222,2363,4.222,2364,4.222,2365,5.787,2366,4.222,2367,4.222,2368,4.222,2369,5.787,2370,4.222,2371,4.222,2372,6.235,2373,5.787,2374,4.222,2375,4.222,2376,4.222,2377,4.222,2378,4.222,2379,4.222,2380,4.222,2381,5.787,2382,4.222,2383,4.222,2384,4.222,2385,4.222,2386,6.602,2387,4.222,2388,4.222,2389,4.222,2390,4.222,2391,4.222,2392,4.222,2393,5.787,2394,4.222,2395,4.222,2396,4.222,2397,4.222,2398,4.222,2399,5.787,2400,4.222,2401,4.222,2402,4.222,2403,5.787,2404,5.787,2405,4.222,2406,4.222,2407,4.222,2408,4.222,2409,4.222,2410,4.222,2411,4.222,2412,4.222,2413,4.222,2414,4.222,2415,3.706,2416,4.222,2417,4.222,2418,4.222,2419,4.222,2420,4.222,2421,4.222,2422,3.706]],["title/modules.html",[213,2.756]],["body/modules.html",[23,0.009,81,0.009,82,0.009,212,4.215,213,2.901,297,4.508,301,4.215,302,4.215,303,4.215,304,3.761,305,4.215,306,4.215,307,4.215,308,3.97,2248,6.979,2372,7.684,2423,8.754,2424,8.754]],["title/overview.html",[2425,5.101]],["body/overview.html",[2,1.902,23,0.011,81,0.007,82,0.007,121,1.557,178,4.253,211,1.51,212,5.102,213,1.973,214,1.973,215,2.133,216,2.133,217,1.973,218,2.133,219,2.133,220,3.652,221,3.652,222,2.937,223,2.133,224,2.05,232,1.38,273,2.701,290,4.253,297,6.425,298,3.652,299,3.652,300,3.652,301,5.585,302,5.585,303,5.403,304,5.332,305,5.403,306,5.102,307,5.102,308,5.089,377,4.253,409,3.652,411,3.652,412,4.515,427,5.403,460,1.34,512,3.062,516,2.558,644,3.317,717,4.253,741,4.019,742,4.253,799,3.652,801,3.652,855,4.377,858,4.253,928,3.652,929,3.652,938,5.089,1020,4.515,1111,3.067,1194,3.652,1195,3.652,1196,3.652,1197,4.515,1198,4.515,1531,4.253,1548,4.253,1571,3.652,1572,3.652,1647,4.253,1668,3.652,1669,3.652,1814,4.253,1824,3.652,1825,3.652,2081,3.652,2082,3.652,2083,3.652,2425,3.652,2426,4.16,2427,4.16,2428,4.16]],["title/properties.html",[10,1.022,2139,3.108]],["body/properties.html",[10,1.351,15,1.835,23,0.011,81,0.01,82,0.01,997,4.981,2415,5.932,2422,5.932,2429,6.758,2430,6.758]],["title/miscellaneous/typealiases.html",[2160,2.072,2431,5.113]],["body/miscellaneous/typealiases.html",[9,0.272,22,0.309,23,0.011,81,0.009,82,0.009,406,2.724,1112,4.255,1119,5.091,2094,4.923,2097,6.94,2098,6.94,2099,6.94,2100,6.94,2101,6.94,2102,5.89,2103,6.94,2104,6.94,2160,3.612,2432,6.175,2433,7.606,2434,6.175]],["title/miscellaneous/variables.html",[2160,2.072,2435,4.488]],["body/miscellaneous/variables.html",[9,0.142,22,0.284,23,0.011,39,3.039,42,0.983,51,0.733,81,0.006,82,0.006,159,2.761,161,1.369,188,1.591,202,1.676,204,2.258,255,1.905,265,1.533,266,1.367,272,2.367,274,2.56,275,3.509,276,3.28,277,2.819,278,1.728,279,2.1,280,1.793,281,2.819,507,3.393,512,1.716,612,6.803,614,2.56,775,4.178,838,3.09,1036,3.795,1246,4.178,1299,3.795,1318,3.795,1341,3.795,1342,3.509,1343,2.819,1344,3.795,1386,3.795,1851,2.56,1862,3.795,1871,2.56,2094,2.56,2102,2.56,2105,2.819,2109,2.819,2110,2.819,2160,1.879,2162,3.795,2167,2.819,2175,6.159,2180,2.819,2181,2.819,2182,2.819,2183,2.819,2184,2.819,2185,4.178,2186,2.819,2187,2.819,2188,2.819,2189,2.819,2190,2.819,2198,2.819,2201,4.178,2202,4.178,2203,4.979,2204,2.819,2205,2.819,2207,2.819,2209,4.979,2210,2.819,2212,4.178,2213,4.178,2215,2.819,2217,4.178,2219,2.819,2224,2.819,2225,2.819,2226,2.819,2227,2.819,2228,2.819,2229,2.819,2231,2.819,2233,4.178,2234,2.819,2235,2.819,2236,2.819,2237,2.819,2238,2.819,2239,2.819,2240,2.819,2241,2.819,2242,2.819,2243,2.819,2244,2.819,2245,2.819,2246,2.819,2247,2.819,2248,2.56,2249,2.819,2254,2.819,2255,2.819,2256,2.819,2257,2.819,2258,2.819,2260,2.819,2265,4.178,2266,2.819,2268,2.819,2269,2.819,2270,2.819,2272,2.819,2325,4.979,2433,4.979,2435,2.819,2436,3.211,2437,3.211,2438,4.76,2439,4.76,2440,7.618,2441,3.211,2442,3.211,2443,3.211,2444,3.211,2445,3.211,2446,3.211,2447,3.211,2448,3.211,2449,3.211,2450,5.672,2451,8.115,2452,3.211,2453,3.211,2454,5.672,2455,3.211,2456,4.76,2457,4.76,2458,3.211,2459,4.76,2460,5.672,2461,4.76,2462,3.211,2463,4.76,2464,3.211,2465,4.76,2466,3.211,2467,4.76,2468,3.211,2469,3.211,2470,3.211,2471,3.211,2472,3.211,2473,3.211,2474,3.211,2475,3.211,2476,3.211,2477,3.211,2478,3.211,2479,3.211,2480,3.211,2481,3.211,2482,3.211,2483,3.211,2484,3.211,2485,3.211,2486,4.76,2487,4.76,2488,3.211,2489,3.211,2490,3.211,2491,5.672,2492,3.211,2493,3.211,2494,4.76,2495,3.211,2496,3.211,2497,3.211,2498,3.211,2499,4.76,2500,3.211,2501,3.211,2502,3.211,2503,4.76,2504,4.76,2505,4.76,2506,4.76,2507,3.211]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/DatasetManageService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/ParseFileTypePipe.html":{},"entities/Profile.html":{},"interfaces/Request-1.html":{},"entities/Task.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"coverage.html":{}}}],["0..0",{"_index":927,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["0.0.1",{"_index":2429,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2106,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":565,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["01110",{"_index":553,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["06",{"_index":564,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["1",{"_index":262,"title":{"interfaces/Request-1.html":{}},"body":{"injectables/AiServiceService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatasetController.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["1'})@apiproperty({description",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["1.4.5",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["1/13",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":512,"title":{},"body":{"classes/CreateDatasetDto.html":{},"controllers/DatasetController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"classes/UpdateDatasetDto.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":55,"title":{},"body":{"entities/AiService.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{}}}],["1024",{"_index":612,"title":{},"body":{"classes/CreateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["11.0.0",{"_index":2142,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":632,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["13",{"_index":2426,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1605,"title":{},"body":{"classes/LoginDto.html":{}}}],["16个字母、数字、下划线或破折号组成！'})@apiproperty({description",{"_index":1598,"title":{},"body":{"classes/LoginDto.html":{}}}],["18888888888",{"_index":1963,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["1d",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["1h",{"_index":619,"title":{},"body":{"classes/CreateTempLinkDto.html":{},"injectables/FileDownloadService.html":{},"modules/FileModule.html":{}}}],["2",{"_index":515,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["2/7",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":629,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["200",{"_index":280,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"miscellaneous/variables.html":{}}}],["201",{"_index":1436,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["2021",{"_index":563,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["20位'})@apiproperty({description",{"_index":1928,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["20位！'})@apiproperty({description",{"_index":631,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["24",{"_index":2427,"title":{},"body":{"overview.html":{}}}],["25",{"_index":658,"title":{},"body":{"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{}}}],["255",{"_index":49,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"entities/User.html":{}}}],["28",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2428,"title":{},"body":{"overview.html":{}}}],["3",{"_index":516,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"overview.html":{}}}],["3,16",{"_index":1597,"title":{},"body":{"classes/LoginDto.html":{}}}],["3.0.2",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["3.12.0",{"_index":2152,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":998,"title":{},"body":{"entities/File.html":{}}}],["32",{"_index":1004,"title":{},"body":{"entities/File.html":{},"entities/Task.html":{}}}],["3gpp",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":2153,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["50",{"_index":1880,"title":{},"body":{"entities/Task.html":{}}}],["500",{"_index":1895,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["5165133@asdf.com",{"_index":626,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["6",{"_index":630,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["66",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["7.0.1",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["7z",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":888,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["80",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1084,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["9_",{"_index":1596,"title":{},"body":{"classes/LoginDto.html":{}}}],["aac",{"_index":2187,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":1075,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["access",{"_index":71,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"entities/Dataset.html":{},"entities/File.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"coverage.html":{}}}],["access_token",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessid",{"_index":84,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["accesstime",{"_index":85,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["active",{"_index":57,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{},"miscellaneous/enumerations.html":{}}}],["add",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":1765,"title":{},"body":{"entities/Profile.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{}}}],["admin",{"_index":593,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/LoginDto.html":{},"classes/UpdateRoleDto.html":{},"miscellaneous/enumerations.html":{}}}],["affectedpart",{"_index":520,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["affectedplant",{"_index":521,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["ai",{"_index":69,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"modules/AppModule.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{},"coverage.html":{}}}],["aiservice",{"_index":1,"title":{"entities/AiService.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"coverage.html":{}}}],["aiservice.aiserviceaccesslogs",{"_index":103,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["aiservice.aiserviceaccesslogs)@joincolumn({name",{"_index":94,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["aiservice.aiserviceconfigs",{"_index":118,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["aiservice.aiserviceconfigs)@joincolumn({name",{"_index":114,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["aiservice.aiservicelogs",{"_index":210,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["aiservice.aiservicelogs)@joincolumn({name",{"_index":208,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["aiserviceaccesslog",{"_index":24,"title":{"entities/AiServiceAccessLog.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"coverage.html":{}}}],["aiserviceaccesslog.service",{"_index":27,"title":{},"body":{"entities/AiService.html":{}}}],["aiserviceaccesslogrepository",{"_index":240,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["aiserviceaccesslogs",{"_index":11,"title":{},"body":{"entities/AiService.html":{},"injectables/AiServiceService.html":{}}}],["aiserviceconfig",{"_index":30,"title":{"entities/AiServiceConfig.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"coverage.html":{}}}],["aiserviceconfig.service",{"_index":31,"title":{},"body":{"entities/AiService.html":{}}}],["aiserviceconfigrepository",{"_index":239,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["aiserviceconfigs",{"_index":12,"title":{},"body":{"entities/AiService.html":{},"injectables/AiServiceService.html":{}}}],["aiservicecontroller",{"_index":120,"title":{"controllers/AiServiceController.html":{}},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{},"coverage.html":{}}}],["aiservicelog",{"_index":33,"title":{"entities/AiServiceLog.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"coverage.html":{}}}],["aiservicelog.service",{"_index":34,"title":{},"body":{"entities/AiService.html":{}}}],["aiservicelogrepository",{"_index":238,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["aiservicelogs",{"_index":13,"title":{},"body":{"entities/AiService.html":{},"injectables/AiServiceService.html":{}}}],["aiservicemodule",{"_index":212,"title":{"modules/AiServiceModule.html":{}},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aiservicerepository",{"_index":242,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["aiserviceservice",{"_index":178,"title":{"injectables/AiServiceService.html":{}},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["alias",{"_index":589,"title":{},"body":{"classes/CreateRoleDto.html":{},"entities/Role.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["aliases",{"_index":2432,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedtypes",{"_index":1351,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{}}}],["allowing",{"_index":2360,"title":{},"body":{"index.html":{}}}],["already",{"_index":1416,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["amazing",{"_index":2409,"title":{},"body":{"index.html":{}}}],["amr",{"_index":2196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api/file/access",{"_index":1104,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["apiproperty",{"_index":468,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{}}}],["apiproperty({description",{"_index":500,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiresponse",{"_index":272,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apk",{"_index":2178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["app",{"_index":1343,"title":{},"body":{"injectables/FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":282,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2162,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/caffe",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/darknet",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/font",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/gzip",{"_index":2200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application/huggingface",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/java",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/javascript",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application/json",{"_index":2226,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/msword",{"_index":2207,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/mxnet",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/octet",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/onnx",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":2205,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/pytorch",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/rtf",{"_index":2221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application/tensorflow",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.android.package",{"_index":2179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application/vnd.ms",{"_index":2212,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformats",{"_index":2209,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/x",{"_index":2175,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/xml",{"_index":2228,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["application/zip",{"_index":2198,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":2311,"title":{},"body":{"index.html":{}}}],["applicationtypevalue",{"_index":2097,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["appmodule",{"_index":297,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":290,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apptypes",{"_index":1333,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["apptypevalue",{"_index":2098,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["archive",{"_index":2180,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["archiver",{"_index":1044,"title":{},"body":{"injectables/FileDownloadService.html":{},"dependencies.html":{}}}],["archiver('zip",{"_index":1081,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["argumentmetadata",{"_index":1709,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{}}}],["argumentshost",{"_index":1472,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["array.isarray(fileids",{"_index":1130,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["array.isarray(value",{"_index":1715,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{}}}],["arrayminsize",{"_index":647,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["arrayminsize(1",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["asc",{"_index":1688,"title":{},"body":{"injectables/MenuService.html":{}}}],["async",{"_index":126,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["audio",{"_index":1344,"title":{},"body":{"injectables/FileStorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["audio/aac",{"_index":2188,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["audio/amr",{"_index":2197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["audio/flac",{"_index":2190,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":2192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["audio/mpeg",{"_index":2182,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":2186,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":2184,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["audio/webm",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/x",{"_index":2194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["audiotypes",{"_index":1335,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["audiotypevalue",{"_index":2099,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["auth",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.strategy",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":356,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":163,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"interfaces/Request.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["authmodule",{"_index":301,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2415,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":377,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["avatar",{"_index":1766,"title":{},"body":{"entities/Profile.html":{}}}],["avatarpath",{"_index":2062,"title":{},"body":{"controllers/UserController.html":{}}}],["avi",{"_index":2256,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":257,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["aws",{"_index":2349,"title":{},"body":{"index.html":{}}}],["backers",{"_index":2410,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1043,"title":{},"body":{"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request-1.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["badrequestexception('task",{"_index":1415,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["badrequestexception(`chunk",{"_index":1420,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["based",{"_index":2344,"title":{},"body":{"index.html":{}}}],["bcryptjs",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["between",{"_index":1281,"title":{},"body":{"injectables/FileService.html":{}}}],["bigint",{"_index":1007,"title":{},"body":{"entities/File.html":{},"entities/Task.html":{}}}],["bin",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biologicalcontrol",{"_index":522,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["bmp",{"_index":2242,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":2402,"title":{},"body":{"index.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":1859,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":217,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2424,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2423,"title":{},"body":{"modules.html":{}}}],["buffer.from(file.originalname",{"_index":885,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["building",{"_index":2306,"title":{},"body":{"index.html":{}}}],["buildmenutree",{"_index":1689,"title":{},"body":{"injectables/MenuService.html":{}}}],["buildmenutree(menu.id",{"_index":1697,"title":{},"body":{"injectables/MenuService.html":{}}}],["buildmenutree(null",{"_index":1698,"title":{},"body":{"injectables/MenuService.html":{}}}],["buttonsget",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["bytes",{"_index":1073,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["bytes=${start",{"_index":1078,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["caffe",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caffemodel",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculatefilemd5",{"_index":1210,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["calculatefilemd5(filepath",{"_index":1213,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["canactivate",{"_index":1113,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1115,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"guards/RolesGuard.html":{}}}],["cascade",{"_index":1983,"title":{},"body":{"entities/User.html":{}}}],["case",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":894,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"classes/TypeormFilter.html":{}}}],["catch(exception",{"_index":1470,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["catch(httpexception",{"_index":1476,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1893,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["category",{"_index":523,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["cause",{"_index":524,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["cb",{"_index":865,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["cb(null",{"_index":882,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["channel",{"_index":2375,"title":{},"body":{"index.html":{}}}],["char",{"_index":1003,"title":{},"body":{"entities/File.html":{}}}],["check",{"_index":2338,"title":{},"body":{"index.html":{}}}],["checkfiletype",{"_index":1356,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["checkfiletype(file",{"_index":1365,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["checkrepeated",{"_index":1357,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["checkrepeated(file",{"_index":1367,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["chemicalcontrol",{"_index":525,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["children",{"_index":1608,"title":{},"body":{"entities/Menu.html":{},"injectables/MenuService.html":{}}}],["chunk",{"_index":1425,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["chunk.dto.ts",{"_index":462,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/UploadChunkDto.html":{},"coverage.html":{}}}],["chunk.dto.ts:13",{"_index":467,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/UploadChunkDto.html":{}}}],["chunk.dto.ts:22",{"_index":1975,"title":{},"body":{"classes/UploadChunkDto.html":{}}}],["chunk.dto.ts:31",{"_index":1973,"title":{},"body":{"classes/UploadChunkDto.html":{}}}],["chunk_status",{"_index":1410,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["chunkdeletionpromises",{"_index":1451,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["chunkindex",{"_index":1382,"title":{},"body":{"injectables/FileUploadService.html":{},"classes/UploadChunkDto.html":{}}}],["chunkpath",{"_index":1220,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["chunkpaths",{"_index":1449,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["chunkpaths.map((chunkpath",{"_index":1452,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["chunkstatus",{"_index":1417,"title":{},"body":{"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["chunkstream",{"_index":1233,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["chunkstream.on('end",{"_index":1239,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["chunkstream.on('error",{"_index":1241,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["chunkstream.pipe(writestream",{"_index":1238,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["class",{"_index":78,"title":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":460,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"overview.html":{}}}],["clicks",{"_index":2359,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":2343,"title":{},"body":{"index.html":{}}}],["cluster_aiservicemodule",{"_index":220,"title":{},"body":{"modules/AiServiceModule.html":{},"overview.html":{}}}],["cluster_aiservicemodule_providers",{"_index":221,"title":{},"body":{"modules/AiServiceModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_datasetmodule",{"_index":799,"title":{},"body":{"modules/DatasetModule.html":{},"overview.html":{}}}],["cluster_datasetmodule_imports",{"_index":800,"title":{},"body":{"modules/DatasetModule.html":{}}}],["cluster_datasetmodule_providers",{"_index":801,"title":{},"body":{"modules/DatasetModule.html":{},"overview.html":{}}}],["cluster_diagnosismodule",{"_index":928,"title":{},"body":{"modules/DiagnosisModule.html":{},"overview.html":{}}}],["cluster_diagnosismodule_imports",{"_index":930,"title":{},"body":{"modules/DiagnosisModule.html":{}}}],["cluster_diagnosismodule_providers",{"_index":929,"title":{},"body":{"modules/DiagnosisModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":1194,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":1196,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":1195,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_knowledgemodule",{"_index":1571,"title":{},"body":{"modules/KnowledgeModule.html":{},"overview.html":{}}}],["cluster_knowledgemodule_providers",{"_index":1572,"title":{},"body":{"modules/KnowledgeModule.html":{},"overview.html":{}}}],["cluster_menumodule",{"_index":1668,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_menumodule_providers",{"_index":1669,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1824,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1825,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2081,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2083,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2082,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":275,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{},"miscellaneous/variables.html":{}}}],["colletotrichum",{"_index":574,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["column",{"_index":66,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["column({name",{"_index":97,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["column({nullable",{"_index":1621,"title":{},"body":{"entities/Menu.html":{}}}],["column({type",{"_index":37,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["come",{"_index":2366,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1732,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["common/decorator/roles.decorator",{"_index":160,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["common/enum/config.enum",{"_index":1204,"title":{},"body":{"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["common/enum/mime.enum",{"_index":839,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileTypeValidationPipe.html":{},"controllers/UserController.html":{}}}],["common/enum/role.enum",{"_index":162,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["common/enum/status.enum",{"_index":950,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["common/enum/user.enum",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["common/filters/typeorm.filter",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["common/guards/auth.guard",{"_index":164,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["common/guards/roles.guard",{"_index":166,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["common/helpers/response.helper",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["common/pipe/string",{"_index":713,"title":{},"body":{"controllers/DatasetController.html":{}}}],["common/utils",{"_index":1300,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{}}}],["compare",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(password",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["completechunkdto",{"_index":459,"title":{"classes/CompleteChunkDto.html":{}},"body":{"classes/CompleteChunkDto.html":{},"coverage.html":{}}}],["completed",{"_index":1414,"title":{},"body":{"injectables/FileUploadService.html":{},"miscellaneous/enumerations.html":{}}}],["completeupload",{"_index":1358,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["completeupload(userid",{"_index":1369,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["compressed",{"_index":2203,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["compression",{"_index":2164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["computefilesizebytype",{"_index":1310,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["computefilesizebytype(createdby",{"_index":1313,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["config",{"_index":73,"title":{},"body":{"entities/AiService.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{}}}],["config.ts",{"_index":106,"title":{},"body":{"entities/AiServiceConfig.html":{},"coverage.html":{}}}],["config.ts:13",{"_index":110,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["config.ts:17",{"_index":115,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["config.ts:20",{"_index":111,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["config.ts:23",{"_index":112,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["config.ts:26",{"_index":113,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["config.ts:33",{"_index":116,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["configenum",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"miscellaneous/enumerations.html":{}}}],["configid",{"_index":107,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["configkey",{"_index":108,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["configmodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["configmodule.forroot",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{}}}],["configservice.get(configenum.db_database",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.db_host",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.db_password",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.db_port",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.db_sync",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.db_type",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.db_username",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(configenum.secret",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{}}}],["configvalue",{"_index":109,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["confirmpassword",{"_index":1927,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["console.error",{"_index":1308,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["console.error(`failed",{"_index":1462,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["const",{"_index":255,"title":{},"body":{"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":235,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{}}}],["constructor(aiservicerepository",{"_index":236,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["constructor(allowedtypes",{"_index":1349,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{}}}],["constructor(configservice",{"_index":397,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(datasetrepository",{"_index":740,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{}}}],["constructor(diagnosisrepository",{"_index":937,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["constructor(filerepository",{"_index":1142,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{}}}],["constructor(fileservice",{"_index":1027,"title":{},"body":{"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{}}}],["constructor(knowledgerepository",{"_index":1547,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["constructor(maxsize",{"_index":1294,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["constructor(menurepository",{"_index":1675,"title":{},"body":{"injectables/MenuService.html":{}}}],["constructor(private",{"_index":185,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/DatasetController.html":{},"guards/FileGuard.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"guards/FilesGuard.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{}}}],["constructor(protected",{"_index":1497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(reflector",{"_index":1855,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(rolerepository",{"_index":1832,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(usersservice",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["content",{"_index":1057,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["context",{"_index":1118,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":1867,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1866,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1121,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":119,"title":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('ai",{"_index":181,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["controller('auth",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('dataset",{"_index":720,"title":{},"body":{"controllers/DatasetController.html":{}}}],["controller('diagnosis",{"_index":860,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["controller('knowledge",{"_index":1533,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["controller('menu",{"_index":1649,"title":{},"body":{"controllers/MenuController.html":{}}}],["controller('role",{"_index":1816,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('user",{"_index":2049,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":121,"title":{},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DatasetController.html":{},"modules/DatasetModule.html":{},"controllers/DiagnosisController.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"controllers/KnowledgeController.html":{},"modules/KnowledgeModule.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["count",{"_index":1189,"title":{},"body":{"injectables/FileManageService.html":{}}}],["courses",{"_index":2380,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2090,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":127,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["create(@body",{"_index":187,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{}}}],["create(dto",{"_index":133,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"injectables/KnowledgeService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["create(menudata",{"_index":1630,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["createaiservicedto",{"_index":134,"title":{"classes/CreateAiServiceDto.html":{}},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"classes/CreateAiServiceDto.html":{},"coverage.html":{}}}],["created",{"_index":1662,"title":{},"body":{"controllers/MenuController.html":{}}}],["createdat",{"_index":14,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["createdataset",{"_index":685,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["createdataset(@req",{"_index":729,"title":{},"body":{"controllers/DatasetController.html":{}}}],["createdataset(req",{"_index":690,"title":{},"body":{"controllers/DatasetController.html":{}}}],["createdataset(userid",{"_index":745,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["createdatasetdto",{"_index":490,"title":{"classes/CreateDatasetDto.html":{}},"body":{"classes/CreateDatasetDto.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"coverage.html":{}}}],["createdby",{"_index":655,"title":{},"body":{"entities/Dataset.html":{},"injectables/DatasetManageService.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["createdend",{"_index":696,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileService.html":{}}}],["createdstart",{"_index":695,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileService.html":{}}}],["createfile",{"_index":1135,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["createfile(user_id",{"_index":1371,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["createfile(userid",{"_index":1145,"title":{},"body":{"injectables/FileManageService.html":{}}}],["createfileintransaction",{"_index":1136,"title":{},"body":{"injectables/FileManageService.html":{}}}],["createfileintransaction(userid",{"_index":1149,"title":{},"body":{"injectables/FileManageService.html":{}}}],["createplantdiseaseknowledgedto",{"_index":517,"title":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"coverage.html":{}}}],["createquerybuilder('file",{"_index":1320,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["createreadstream",{"_index":1045,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileOperationService.html":{}}}],["createreadstream(chunkpath",{"_index":1234,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["createreadstream(filepath",{"_index":1247,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["createroledto",{"_index":586,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createtaskdto",{"_index":595,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"injectables/FileUploadService.html":{},"coverage.html":{}}}],["createtemplinkdto",{"_index":617,"title":{"classes/CreateTempLinkDto.html":{}},"body":{"classes/CreateTempLinkDto.html":{},"injectables/FileDownloadService.html":{},"coverage.html":{}}}],["createuploadtask",{"_index":1359,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["createuploadtask(userid",{"_index":1374,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["createuserdto",{"_index":621,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createwritestream",{"_index":1225,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["createwritestream(finalpath",{"_index":1236,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["creating",{"_index":1094,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["crypto",{"_index":1224,"title":{},"body":{"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{}}}],["crypto.createhash('md5",{"_index":1245,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["crypto.createhash('md5').update(filebuffer).digest('hex",{"_index":1391,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["css",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["csv",{"_index":2224,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ctx",{"_index":1477,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["ctx.getresponse",{"_index":1479,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["culturalpractices",{"_index":526,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["current_timestamp",{"_index":40,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["d+)(kb|mb|gb|tb)$/i",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d41d8cd98f00b204e9800998ecf8427e",{"_index":607,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UploadChunkDto.html":{}}}],["darknet",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":276,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/FileOperationService.html":{},"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["dataset",{"_index":653,"title":{"entities/Dataset.html":{}},"body":{"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"entities/File.html":{},"coverage.html":{}}}],["dataset.controller",{"_index":804,"title":{},"body":{"modules/DatasetModule.html":{}}}],["dataset.createdby",{"_index":797,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.description",{"_index":794,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.dto",{"_index":716,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["dataset.dto.ts",{"_index":492,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{},"coverage.html":{}}}],["dataset.dto.ts:12",{"_index":1909,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts:18",{"_index":505,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.dto.ts:20",{"_index":1906,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts:26",{"_index":496,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.dto.ts:38",{"_index":1907,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts:44",{"_index":501,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["dataset.entity",{"_index":755,"title":{},"body":{"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{}}}],["dataset.files",{"_index":785,"title":{},"body":{"injectables/DatasetManageService.html":{},"entities/File.html":{}}}],["dataset.files.length",{"_index":772,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.files.map((file",{"_index":790,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.files.reduce((totalsize",{"_index":774,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.name",{"_index":792,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.service",{"_index":756,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset.updatedby",{"_index":796,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["dataset/dataset.entity",{"_index":1016,"title":{},"body":{"entities/File.html":{}}}],["dataset/dataset.module",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["dataset_id",{"_index":680,"title":{},"body":{"entities/Dataset.html":{}}}],["datasetcontroller",{"_index":683,"title":{"controllers/DatasetController.html":{}},"body":{"controllers/DatasetController.html":{},"modules/DatasetModule.html":{},"coverage.html":{}}}],["datasetdata",{"_index":782,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["datasetdata.description",{"_index":795,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["datasetdata.name",{"_index":793,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["datasetid",{"_index":704,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["datasetmanageservice",{"_index":717,"title":{"injectables/DatasetManageService.html":{}},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"coverage.html":{},"overview.html":{}}}],["datasetmodule",{"_index":302,"title":{"modules/DatasetModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetModule.html":{},"modules.html":{},"overview.html":{}}}],["datasetrepository",{"_index":744,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{}}}],["datasets",{"_index":996,"title":{},"body":{"entities/File.html":{}}}],["datasets_files",{"_index":666,"title":{},"body":{"entities/Dataset.html":{}}}],["datasetservice",{"_index":742,"title":{"injectables/DatasetService.html":{}},"body":{"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"coverage.html":{},"overview.html":{}}}],["datasetsize",{"_index":773,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["datasetslistget",{"_index":686,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["datasetslistget(page",{"_index":747,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["datasetslistget(req",{"_index":694,"title":{},"body":{"controllers/DatasetController.html":{}}}],["datasource",{"_index":939,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["date",{"_index":36,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["date().toisostring",{"_index":1899,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["date(filters.createdend",{"_index":1283,"title":{},"body":{"injectables/FileService.html":{}}}],["date(filters.createdstart",{"_index":1282,"title":{},"body":{"injectables/FileService.html":{}}}],["date(filters.updatedend",{"_index":1287,"title":{},"body":{"injectables/FileService.html":{}}}],["date(filters.updatedstart",{"_index":1286,"title":{},"body":{"injectables/FileService.html":{}}}],["date(value",{"_index":1730,"title":{},"body":{"injectables/ParseStringDatePipe.html":{}}}],["date.now",{"_index":294,"title":{},"body":{"controllers/AppController.html":{},"controllers/DiagnosisController.html":{}}}],["date.pipe",{"_index":714,"title":{},"body":{"controllers/DatasetController.html":{}}}],["date.pipe.ts",{"_index":1726,"title":{},"body":{"injectables/ParseStringDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:6",{"_index":1727,"title":{},"body":{"injectables/ParseStringDatePipe.html":{}}}],["datetime",{"_index":660,"title":{},"body":{"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["db_database",{"_index":2284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["db_host",{"_index":2282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["db_password",{"_index":2286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["db_port",{"_index":2283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["db_sync",{"_index":2287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["db_type",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["db_username",{"_index":2285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":216,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":402,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{}}}],["decorator/roles.decorator",{"_index":1863,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decorators",{"_index":25,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"controllers/KnowledgeController.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"entities/Task.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["deeper",{"_index":2377,"title":{},"body":{"index.html":{}}}],["default",{"_index":39,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":168,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["delete(':datasetid",{"_index":735,"title":{},"body":{"controllers/DatasetController.html":{}}}],["delete(':datasetid')@httpcode(httpstatus.no_content",{"_index":702,"title":{},"body":{"controllers/DatasetController.html":{}}}],["delete(':id",{"_index":1543,"title":{},"body":{"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content",{"_index":1518,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@roles(role.admin)@useguards(rolesguard",{"_index":1809,"title":{},"body":{"controllers/RoleController.html":{}}}],["delete(':id')@roles(role.admin)@useguards(rolesguard",{"_index":1642,"title":{},"body":{"controllers/MenuController.html":{}}}],["delete(':id')@roles(role.admin)@useguards(rolesguard)@httpcode(httpstatus.no_content",{"_index":2030,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':serviceid",{"_index":153,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["deleted",{"_index":1667,"title":{},"body":{"controllers/MenuController.html":{}}}],["deletedataset",{"_index":687,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["deletedataset(datasetid",{"_index":701,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["deletefile",{"_index":1137,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{}}}],["deletefile(fileid",{"_index":1151,"title":{},"body":{"injectables/FileManageService.html":{}}}],["deletefile(filepath",{"_index":1215,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["deletefiles",{"_index":1138,"title":{},"body":{"injectables/FileManageService.html":{}}}],["deletefiles(fileids",{"_index":1153,"title":{},"body":{"injectables/FileManageService.html":{}}}],["deletionpromises",{"_index":1191,"title":{},"body":{"injectables/FileManageService.html":{}}}],["dependencies",{"_index":214,"title":{"dependencies.html":{}},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2331,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2348,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2339,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":2358,"title":{},"body":{"index.html":{}}}],["desc",{"_index":983,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileService.html":{}}}],["description",{"_index":15,"title":{},"body":{"entities/AiService.html":{},"modules/AppModule.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"classes/DownloadFilesDto.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"properties.html":{}}}],["description必须是字符串！'})@apiproperty({description",{"_index":495,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["destination",{"_index":864,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["development",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["development'}.local",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["devtools",{"_index":2388,"title":{},"body":{"index.html":{}}}],["diagnosis",{"_index":482,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"classes/UpdateAiServiceDto.html":{}}}],["diagnosis.controller",{"_index":932,"title":{},"body":{"modules/DiagnosisModule.html":{}}}],["diagnosis.service",{"_index":859,"title":{},"body":{"controllers/DiagnosisController.html":{},"modules/DiagnosisModule.html":{}}}],["diagnosis.status",{"_index":977,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["diagnosis/diagnosis.module",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["diagnosisconfidence",{"_index":905,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["diagnosiscontroller",{"_index":813,"title":{"controllers/DiagnosisController.html":{}},"body":{"controllers/DiagnosisController.html":{},"modules/DiagnosisModule.html":{},"coverage.html":{}}}],["diagnosishistory",{"_index":902,"title":{"entities/DiagnosisHistory.html":{}},"body":{"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"coverage.html":{}}}],["diagnosishistory.file",{"_index":967,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["diagnosishistoryget",{"_index":815,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["diagnosishistoryget(@req",{"_index":899,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["diagnosishistoryget(req",{"_index":820,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["diagnosishistoryget(userid",{"_index":942,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["diagnosishistorylistget",{"_index":816,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["diagnosishistorylistget(page",{"_index":944,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["diagnosishistorylistget(req",{"_index":823,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["diagnosismodule",{"_index":303,"title":{"modules/DiagnosisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DiagnosisModule.html":{},"modules.html":{},"overview.html":{}}}],["diagnosisrepository",{"_index":941,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["diagnosisresult",{"_index":906,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["diagnosisservice",{"_index":858,"title":{"injectables/DiagnosisService.html":{}},"body":{"controllers/DiagnosisController.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"coverage.html":{},"overview.html":{}}}],["dict",{"_index":1802,"title":{},"body":{"controllers/RoleController.html":{}}}],["discord",{"_index":2374,"title":{},"body":{"index.html":{}}}],["diseasecode",{"_index":527,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["diseasecycle",{"_index":528,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["diseasename",{"_index":529,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["diseasetype",{"_index":530,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["diskstorage",{"_index":845,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["diskusageget",{"_index":1311,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["diskusageget(userid",{"_index":1316,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["dive",{"_index":2376,"title":{},"body":{"index.html":{}}}],["doc",{"_index":2206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["docs",{"_index":1345,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["doctypes",{"_index":1337,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["document",{"_index":2166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":2091,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documenturl",{"_index":531,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["docx",{"_index":2208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["download.service",{"_index":1205,"title":{},"body":{"modules/FileModule.html":{}}}],["download.service.ts",{"_index":1022,"title":{},"body":{"injectables/FileDownloadService.html":{},"coverage.html":{}}}],["download.service.ts:107",{"_index":1039,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["download.service.ts:133",{"_index":1041,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["download.service.ts:14",{"_index":1028,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["download.service.ts:27",{"_index":1032,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["download.service.ts:74",{"_index":1035,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["downloadfile",{"_index":1023,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["downloadfile(filemeta",{"_index":1029,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["downloadfilesaszip",{"_index":1024,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["downloadfilesaszip(filesmeta",{"_index":1034,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["downloadfilesdto",{"_index":985,"title":{"classes/DownloadFilesDto.html":{}},"body":{"classes/DownloadFilesDto.html":{},"coverage.html":{}}}],["downloadrequest",{"_index":1119,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dto",{"_index":139,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["dto.expiresin",{"_index":1101,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["dto.name",{"_index":1844,"title":{},"body":{"injectables/RoleService.html":{}}}],["dto/change",{"_index":2043,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/create",{"_index":174,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["dto/login.dto",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/register.dto",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/reset",{"_index":2046,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/update",{"_index":176,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["e2e",{"_index":2326,"title":{},"body":{"index.html":{}}}],["each",{"_index":514,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["efficient",{"_index":2307,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":2336,"title":{},"body":{"index.html":{}}}],["email",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["end",{"_index":1066,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileOperationService.html":{}}}],["endpointurl",{"_index":16,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["end}/${filemeta.filesize",{"_index":1074,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["ensure",{"_index":2334,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":2392,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('ai_service_access_logs",{"_index":102,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["entity('ai_service_configs",{"_index":117,"title":{},"body":{"entities/AiServiceConfig.html":{}}}],["entity('ai_service_logs",{"_index":209,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["entity('ai_services",{"_index":74,"title":{},"body":{"entities/AiService.html":{}}}],["entity('dataset",{"_index":676,"title":{},"body":{"entities/Dataset.html":{}}}],["entity('diagnosis_history",{"_index":925,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["entity('file",{"_index":1017,"title":{},"body":{"entities/File.html":{}}}],["entity('menu",{"_index":1625,"title":{},"body":{"entities/Menu.html":{}}}],["entity('plant_disease_knowledge",{"_index":1762,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["entity('profile",{"_index":1780,"title":{},"body":{"entities/Profile.html":{}}}],["entity('role",{"_index":1799,"title":{},"body":{"entities/Role.html":{}}}],["entity('task",{"_index":1888,"title":{},"body":{"entities/Task.html":{}}}],["entity('user",{"_index":1993,"title":{},"body":{"entities/User.html":{}}}],["enum",{"_index":60,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceLog.html":{}}}],["enum/role.enum",{"_index":1861,"title":{},"body":{"guards/RolesGuard.html":{}}}],["enumerations",{"_index":2161,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["env.${process.env.node_env",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":1091,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["err.message",{"_index":1095,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileUploadService.html":{}}}],["error",{"_index":204,"title":{},"body":{"entities/AiServiceLog.html":{},"injectables/DatasetManageService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"miscellaneous/variables.html":{}}}],["error('ai",{"_index":267,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["error?.message",{"_index":1168,"title":{},"body":{"injectables/FileManageService.html":{}}}],["errorhttpstatuscode",{"_index":731,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["example",{"_index":466,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"index.html":{}}}],["excel",{"_index":2213,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["excelopenxml",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":1474,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["exception.drivererror.errno",{"_index":1897,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["exception.filter.ts",{"_index":1468,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":1473,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":1482,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1480,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":1903,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["exceptionfilter",{"_index":1469,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["exe",{"_index":2174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["executioncontext",{"_index":1116,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"guards/RolesGuard.html":{}}}],["existssync",{"_index":842,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileOperationService.html":{},"controllers/UserController.html":{}}}],["existssync('uploads/avatar",{"_index":2054,"title":{},"body":{"controllers/UserController.html":{}}}],["existssync(filepath",{"_index":1228,"title":{},"body":{"injectables/FileOperationService.html":{},"controllers/UserController.html":{}}}],["existssync(folder",{"_index":879,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["experience",{"_index":2379,"title":{},"body":{"index.html":{}}}],["expert",{"_index":2295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresin",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateTempLinkDto.html":{},"injectables/FileDownloadService.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["export",{"_index":77,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{}}}],["exports",{"_index":219,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":405,"title":{},"body":{"injectables/AuthGuard.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":833,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["extends",{"_index":395,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{}}}],["extension",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extname",{"_index":2042,"title":{},"body":{"controllers/UserController.html":{}}}],["extname(file.originalname",{"_index":2058,"title":{},"body":{"controllers/UserController.html":{}}}],["extractjwt",{"_index":1494,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":1437,"title":{},"body":{"injectables/FileUploadService.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":1230,"title":{},"body":{"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{},"injectables/JwtStrategy.html":{},"entities/Task.html":{}}}],["fast",{"_index":2352,"title":{},"body":{"index.html":{}}}],["features",{"_index":2362,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":1654,"title":{},"body":{"controllers/MenuController.html":{}}}],["few",{"_index":2354,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{"entities/File.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"coverage.html":{}}}],["file.access",{"_index":1125,"title":{},"body":{"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["file.controller",{"_index":1201,"title":{},"body":{"modules/FileModule.html":{}}}],["file.createdat",{"_index":1280,"title":{},"body":{"injectables/FileService.html":{}}}],["file.createdby",{"_index":1097,"title":{},"body":{"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["file.datasets",{"_index":679,"title":{},"body":{"entities/Dataset.html":{}}}],["file.datasets)@jointable({name",{"_index":665,"title":{},"body":{"entities/Dataset.html":{}}}],["file.dto",{"_index":1162,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["file.dto.ts",{"_index":987,"title":{},"body":{"classes/DownloadFilesDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"coverage.html":{}}}],["file.dto.ts:17",{"_index":992,"title":{},"body":{"classes/DownloadFilesDto.html":{}}}],["file.dto.ts:22",{"_index":1915,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts:33",{"_index":1916,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts:44",{"_index":1912,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts:59",{"_index":1924,"title":{},"body":{"classes/UpdateFilesAccessDto.html":{}}}],["file.dto.ts:69",{"_index":1919,"title":{},"body":{"classes/UpdateFilesAccessDto.html":{}}}],["file.filemd5",{"_index":1181,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["file.filename",{"_index":964,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileUploadService.html":{}}}],["file.filepath",{"_index":1430,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["file.filesize",{"_index":776,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileUploadService.html":{}}}],["file.filetype",{"_index":1431,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["file.id",{"_index":791,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileUploadService.html":{}}}],["file.mimetype",{"_index":869,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileUploadService.html":{}}}],["file.originalname",{"_index":884,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileUploadService.html":{}}}],["file.path",{"_index":960,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileSizeValidationPipe.html":{}}}],["file.service",{"_index":1050,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileUploadService.html":{}}}],["file.size",{"_index":965,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["file.storagefilename",{"_index":1429,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["file.updatedat",{"_index":1285,"title":{},"body":{"injectables/FileService.html":{}}}],["file.updatedby",{"_index":1172,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["file.version",{"_index":1173,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["file/file.module",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{}}}],["file/models/file.entity",{"_index":675,"title":{},"body":{"entities/Dataset.html":{}}}],["file/pipe/file",{"_index":851,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["file/services/file",{"_index":856,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["file?.size",{"_index":1306,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["file_id",{"_index":682,"title":{},"body":{"entities/Dataset.html":{},"injectables/FileUploadService.html":{}}}],["filebuffer",{"_index":1389,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filecontroller",{"_index":1200,"title":{},"body":{"modules/FileModule.html":{},"coverage.html":{}}}],["filecount",{"_index":771,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["filedata",{"_index":1146,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["filedata.filemd5",{"_index":1402,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata.filepath",{"_index":1398,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata.filesize",{"_index":1400,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata.filetype",{"_index":1401,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata.originalfilename",{"_index":1394,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata.storagefilename",{"_index":1396,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata?.filename",{"_index":1395,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata?.originalname",{"_index":1393,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata?.path",{"_index":1397,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedata?.size",{"_index":1399,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filedownloadservice",{"_index":1020,"title":{"injectables/FileDownloadService.html":{}},"body":{"injectables/FileDownloadService.html":{},"modules/FileModule.html":{},"coverage.html":{},"overview.html":{}}}],["fileentity",{"_index":912,"title":{},"body":{"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["fileextension",{"_index":1445,"title":{},"body":{"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["fileguard",{"_index":1110,"title":{"guards/FileGuard.html":{}},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["fileid",{"_index":916,"title":{},"body":{"entities/DiagnosisHistory.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["fileids",{"_index":493,"title":{},"body":{"classes/CreateDatasetDto.html":{},"injectables/DatasetManageService.html":{},"classes/DownloadFilesDto.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/ParseFileIdsPipe.html":{},"interfaces/Request-1.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["fileids.length",{"_index":1131,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["fileids?.length",{"_index":784,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["fileinterceptor",{"_index":840,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["fileinterceptor('file",{"_index":862,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["filemanageservice",{"_index":938,"title":{"injectables/FileManageService.html":{}},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"coverage.html":{},"overview.html":{}}}],["filemd5",{"_index":598,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{},"classes/UploadChunkDto.html":{}}}],["filemd5s",{"_index":1184,"title":{},"body":{"injectables/FileManageService.html":{}}}],["filemeta",{"_index":1033,"title":{},"body":{"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["filemeta.filepath",{"_index":1053,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["filemeta.filesize",{"_index":1058,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["filemeta.filetype",{"_index":1059,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["filemeta.id",{"_index":1408,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filemeta.originalfilename",{"_index":1088,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["filemodule",{"_index":304,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":599,"title":{},"body":{"classes/CreateTaskDto.html":{},"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{},"controllers/UserController.html":{}}}],["fileoperationservice",{"_index":855,"title":{"injectables/FileOperationService.html":{}},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{},"coverage.html":{},"overview.html":{}}}],["filepath",{"_index":966,"title":{},"body":{"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["filerepository",{"_index":1144,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{}}}],["files",{"_index":656,"title":{},"body":{"entities/Dataset.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["files.filter((file",{"_index":1188,"title":{},"body":{"injectables/FileManageService.html":{}}}],["files.length",{"_index":1177,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{}}}],["files.map((file",{"_index":1185,"title":{},"body":{"injectables/FileManageService.html":{}}}],["files.zip",{"_index":1080,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["fileservice",{"_index":741,"title":{"injectables/FileService.html":{}},"body":{"injectables/DatasetManageService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"overview.html":{}}}],["filesget",{"_index":1255,"title":{},"body":{"injectables/FileService.html":{}}}],["filesget(userid",{"_index":1260,"title":{},"body":{"injectables/FileService.html":{}}}],["filesguard",{"_index":1128,"title":{"guards/FilesGuard.html":{}},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["filesize",{"_index":600,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["filesizevalidationpipe",{"_index":850,"title":{"injectables/FileSizeValidationPipe.html":{}},"body":{"controllers/DiagnosisController.html":{},"injectables/FileSizeValidationPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["filesizevalidationpipe('10mb",{"_index":891,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["fileslistget",{"_index":1256,"title":{},"body":{"injectables/FileService.html":{}}}],["fileslistget(page",{"_index":1262,"title":{},"body":{"injectables/FileService.html":{}}}],["filesmeta",{"_index":1037,"title":{},"body":{"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["filestodelete",{"_index":1187,"title":{},"body":{"injectables/FileManageService.html":{}}}],["filestodelete.map((file",{"_index":1192,"title":{},"body":{"injectables/FileManageService.html":{}}}],["filestorageservice",{"_index":1197,"title":{"injectables/FileStorageService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["fileswithaccess",{"_index":1132,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["fileswithaccess.push(file",{"_index":1133,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["filetype",{"_index":601,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["filetypes",{"_index":1314,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["filetypes.length",{"_index":1327,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["filetypevalidationpipe",{"_index":853,"title":{"injectables/FileTypeValidationPipe.html":{}},"body":{"controllers/DiagnosisController.html":{},"injectables/FileTypeValidationPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["filetypevalidationpipe([mime_type.png",{"_index":889,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["fileuploadservice",{"_index":1198,"title":{"injectables/FileUploadService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileUploadService.html":{},"coverage.html":{},"overview.html":{}}}],["filter((item",{"_index":1722,"title":{},"body":{"injectables/ParseFileTypePipe.html":{}}}],["filter((menu",{"_index":1690,"title":{},"body":{"injectables/MenuService.html":{}}}],["filters",{"_index":748,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileService.html":{},"injectables/KnowledgeManageService.html":{}}}],["filters.category",{"_index":1565,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["filters.createdend",{"_index":1278,"title":{},"body":{"injectables/FileService.html":{}}}],["filters.createdstart",{"_index":766,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileService.html":{}}}],["filters.filetype",{"_index":1274,"title":{},"body":{"injectables/FileService.html":{}}}],["filters.name",{"_index":763,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["filters.originalfilename",{"_index":1276,"title":{},"body":{"injectables/FileService.html":{}}}],["filters.updatedend",{"_index":1284,"title":{},"body":{"injectables/FileService.html":{}}}],["filters.updatedstart",{"_index":768,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileService.html":{}}}],["filters?.createdend",{"_index":767,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["filters?.createdstart",{"_index":764,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["filters?.name",{"_index":761,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["filters?.updatedend",{"_index":769,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["finally",{"_index":971,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["finalpath",{"_index":1218,"title":{},"body":{"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{}}}],["findall",{"_index":128,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["findauthroutes",{"_index":1674,"title":{},"body":{"injectables/MenuService.html":{}}}],["findauthroutes(roleid",{"_index":1680,"title":{},"body":{"injectables/MenuService.html":{}}}],["findbyid",{"_index":807,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/FileService.html":{},"injectables/KnowledgeService.html":{}}}],["findbyid(fileid",{"_index":1264,"title":{},"body":{"injectables/FileService.html":{}}}],["findbyid(id",{"_index":809,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/KnowledgeService.html":{}}}],["findbyids",{"_index":1257,"title":{},"body":{"injectables/FileService.html":{}}}],["findbyids(fileids",{"_index":1266,"title":{},"body":{"injectables/FileService.html":{}}}],["findbymd5",{"_index":1258,"title":{},"body":{"injectables/FileService.html":{}}}],["findbymd5(filemd5",{"_index":1268,"title":{},"body":{"injectables/FileService.html":{}}}],["finddict",{"_index":1831,"title":{},"body":{"injectables/RoleService.html":{}}}],["findone",{"_index":129,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["findone(@param('serviceid",{"_index":194,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["findone(id",{"_index":1636,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["findone(serviceid",{"_index":143,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{}}}],["findpaginated",{"_index":130,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{}}}],["findpaginated(page",{"_index":147,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{}}}],["firstreported",{"_index":532,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["flac",{"_index":2189,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":1237,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["float",{"_index":909,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["flv",{"_index":2264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":2361,"title":{},"body":{"index.html":{}}}],["folder",{"_index":866,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["follow",{"_index":2396,"title":{},"body":{"index.html":{}}}],["font",{"_index":2167,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["font/otf",{"_index":2232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["font/ttf",{"_index":2230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["font/woff",{"_index":2234,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["font/woff2",{"_index":2236,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fontotf",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fontttf",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fonttypevalue",{"_index":2100,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["fontwoff",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["formatresponse",{"_index":279,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formatresponse(200",{"_index":788,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["formatresponse(201",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["formatresponse(202",{"_index":1439,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["formatresponse(404",{"_index":2065,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":268,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/FileUploadService.html":{},"controllers/MenuController.html":{}}}],["foundfile",{"_index":1403,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["foundfile.originalfilename",{"_index":1407,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["framework",{"_index":2305,"title":{},"body":{"index.html":{}}}],["fs",{"_index":844,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileDownloadService.html":{},"injectables/FileOperationService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["fs.promises.mkdir(folder",{"_index":1444,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fs.promises.unlink(chunkpath",{"_index":1453,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fs.promises.unlink(file.path",{"_index":1409,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fs.statsync(finalpath).size",{"_index":1456,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fs/promises",{"_index":1227,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["full",{"_index":2391,"title":{},"body":{"index.html":{}}}],["function",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2299,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2357,"title":{},"body":{"index.html":{}}}],["gb",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":1767,"title":{},"body":{"entities/Profile.html":{},"classes/UpdateProfileDto.html":{}}}],["generateaccesslink",{"_index":1025,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["generateaccesslink(fileid",{"_index":1038,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["geographicalarea",{"_index":533,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["get(':datasetid",{"_index":706,"title":{},"body":{"controllers/DatasetController.html":{}}}],["get(':id",{"_index":1521,"title":{},"body":{"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["get(':id')@roles(role.admin)@useguards(rolesguard",{"_index":1637,"title":{},"body":{"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["get(':id/status",{"_index":827,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["get(':serviceid",{"_index":144,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["get('avatar",{"_index":2010,"title":{},"body":{"controllers/UserController.html":{}}}],["get('buttons",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('buttons')@useguards(authguard)@httpcode(httpstatus.ok",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('dict",{"_index":1805,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('history",{"_index":821,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["get('history/list",{"_index":824,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["get('list",{"_index":149,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/UserController.html":{}}}],["get('list')@roles(role.admin)@useguards(rolesguard",{"_index":2035,"title":{},"body":{"controllers/UserController.html":{}}}],["get('profile",{"_index":2015,"title":{},"body":{"controllers/UserController.html":{}}}],["get('routes",{"_index":1640,"title":{},"body":{"controllers/MenuController.html":{}}}],["get('speed",{"_index":293,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@roles(role.admin)@useguards(rolesguard",{"_index":1634,"title":{},"body":{"controllers/MenuController.html":{},"controllers/RoleController.html":{}}}],["getavatar",{"_index":1997,"title":{},"body":{"controllers/UserController.html":{}}}],["getavatar(@req",{"_index":2061,"title":{},"body":{"controllers/UserController.html":{}}}],["getavatar(req",{"_index":2009,"title":{},"body":{"controllers/UserController.html":{}}}],["getdatasetdetail",{"_index":688,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["getdatasetdetail(datasetid",{"_index":705,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["getdiagnosisstatus",{"_index":817,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["getdiagnosisstatus(id",{"_index":826,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["getfiletype",{"_index":1318,"title":{},"body":{"injectables/FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfiletype('app",{"_index":1334,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["getfiletype('application",{"_index":1338,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["getfiletype('audio",{"_index":1336,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["getfiletype('image",{"_index":1330,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["getfiletype('other",{"_index":1340,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["getfiletype('video",{"_index":1332,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["gethello",{"_index":284,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmanyandcount",{"_index":1291,"title":{},"body":{"injectables/FileService.html":{},"injectables/KnowledgeManageService.html":{}}}],["getmodelmimetype",{"_index":1386,"title":{},"body":{"injectables/FileUploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmodelmimetype(path.extname(file.originalname",{"_index":1392,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["getroutes",{"_index":1629,"title":{},"body":{"controllers/MenuController.html":{}}}],["getroutes(@req",{"_index":1650,"title":{},"body":{"controllers/MenuController.html":{}}}],["getroutes(req",{"_index":1639,"title":{},"body":{"controllers/MenuController.html":{}}}],["gettimestamp",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":2301,"title":{"index.html":{}},"body":{}}],["getuploadtaskstatus",{"_index":1360,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["getuploadtaskstatus(taskid",{"_index":1377,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["gif",{"_index":2240,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":403,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{}}}],["gloeosporioides",{"_index":575,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["graph",{"_index":2383,"title":{},"body":{"index.html":{}}}],["grow",{"_index":2406,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1109,"title":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1111,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["gz",{"_index":2199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h5",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hands",{"_index":2378,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2367,"title":{},"body":{"index.html":{}}}],["haojingxin0121@qq.com",{"_index":1782,"title":{},"body":{"classes/RegisterDto.html":{}}}],["hash",{"_index":1244,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["hash.update(data",{"_index":1249,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["headers",{"_index":1077,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["heic",{"_index":2252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["heif",{"_index":2250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hello",{"_index":354,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2381,"title":{},"body":{"index.html":{}}}],["here",{"_index":2413,"title":{},"body":{"index.html":{}}}],["historicalcases",{"_index":534,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["history.entity",{"_index":934,"title":{},"body":{"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{}}}],["history.entity.ts",{"_index":904,"title":{},"body":{"entities/DiagnosisHistory.html":{},"coverage.html":{}}}],["history.entity.ts:15",{"_index":919,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:19",{"_index":917,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:22",{"_index":911,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:25",{"_index":910,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:32",{"_index":921,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:35",{"_index":908,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:38",{"_index":923,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:45",{"_index":907,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["history.entity.ts:53",{"_index":922,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["host",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"injectables/FileDownloadService.html":{},"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["host.switchtohttp",{"_index":1478,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{}}}],["host.switchtohttp().getrequest",{"_index":1894,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["html",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["http",{"_index":105,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"classes/HttpExceptionFilter.html":{}}}],["http://localhost:5001",{"_index":478,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["httpcode",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.created",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":736,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["httpd",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":1471,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":1466,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://example.com/document.pdf",{"_index":560,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["https://example.com/image.jpg",{"_index":569,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["https://example.com/video.mp4",{"_index":582,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["https://nestjs.com",{"_index":2419,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/FileDownloadService.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["httpstatus.not_acceptable",{"_index":732,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["huggingface",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1609,"title":{},"body":{"entities/Menu.html":{},"injectables/MenuService.html":{}}}],["id",{"_index":79,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateDatasetDto.html":{},"entities/Dataset.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Task.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["identifier",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["id不能为空！'})@isarray({message",{"_index":1920,"title":{},"body":{"classes/UpdateFilesAccessDto.html":{}}}],["id不能为空！'})@isint({message",{"_index":1913,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UploadChunkDto.html":{}}}],["id必须为数字类型'})@type(undefined)@apiproperty({description",{"_index":465,"title":{},"body":{"classes/CompleteChunkDto.html":{}}}],["id必须为数字类型！'})@apiproperty({description",{"_index":1923,"title":{},"body":{"classes/UpdateFilesAccessDto.html":{}}}],["id必须为数字类型！'})@type(undefined)@apiproperty({description",{"_index":1914,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UploadChunkDto.html":{}}}],["id必须为数组类型！'})@arrayminsize(1",{"_index":1921,"title":{},"body":{"classes/UpdateFilesAccessDto.html":{}}}],["id数组长度至少为1",{"_index":1918,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["id数组长度至少为1！'})@transform",{"_index":1922,"title":{},"body":{"classes/UpdateFilesAccessDto.html":{}}}],["ignoreexpiration",{"_index":1500,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1341,"title":{},"body":{"injectables/FileStorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/bmp",{"_index":2243,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/gif",{"_index":2241,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/heic",{"_index":2253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image/heif",{"_index":2251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["image/jpeg",{"_index":614,"title":{},"body":{"classes/CreateTaskDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/png",{"_index":2239,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":2249,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/tiff",{"_index":2245,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["image/webp",{"_index":2247,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["imagetypes",{"_index":1329,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["imagetypevalue",{"_index":2101,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imageurl",{"_index":535,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["implements",{"_index":1120,"title":{},"body":{"guards/FileGuard.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request-1.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{}}}],["import",{"_index":65,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{}}}],["imports",{"_index":229,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["in(fileids",{"_index":1176,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{}}}],["in(filemd5s",{"_index":1186,"title":{},"body":{"injectables/FileManageService.html":{}}}],["in_progress",{"_index":2297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive",{"_index":58,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{},"miscellaneous/enumerations.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index('dataset_user_id_fk",{"_index":677,"title":{},"body":{"entities/Dataset.html":{}}}],["index('dataset_user_id_fk_2",{"_index":678,"title":{},"body":{"entities/Dataset.html":{}}}],["index('diagnosis_history_created_by_idx",{"_index":926,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["index('diseasecode",{"_index":1763,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["index('file_user_id_fk",{"_index":1018,"title":{},"body":{"entities/File.html":{}}}],["index('file_user_id_fk_2",{"_index":1019,"title":{},"body":{"entities/File.html":{}}}],["index('servicenameidx",{"_index":75,"title":{},"body":{"entities/AiService.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{}}}],["information",{"_index":2341,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":2364,"title":{},"body":{"index.html":{}}}],["inject",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["injectable",{"_index":231,"title":{"injectables/AiServiceService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"injectables/RoleService.html":{}},"body":{"injectables/AiServiceService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["injectables",{"_index":232,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"injectables/RoleService.html":{},"overview.html":{}}}],["injectrepository",{"_index":249,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{}}}],["injectrepository(aiservice",{"_index":250,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["injectrepository(aiserviceaccesslog",{"_index":254,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["injectrepository(aiserviceconfig",{"_index":253,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["injectrepository(aiservicelog",{"_index":252,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["injectrepository(dataset",{"_index":757,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{}}}],["injectrepository(diagnosishistory",{"_index":952,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["injectrepository(fileentity",{"_index":1051,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{}}}],["injectrepository(menu",{"_index":1686,"title":{},"body":{"injectables/MenuService.html":{}}}],["injectrepository(plantdiseaseknowledge",{"_index":1560,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["injectrepository(role",{"_index":1841,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(taskentity",{"_index":1388,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["install",{"_index":2356,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":2318,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1896,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["int",{"_index":91,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Task.html":{}}}],["interact",{"_index":2384,"title":{},"body":{"index.html":{}}}],["interface",{"_index":271,"title":{"interfaces/ApiResponse.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthGuard.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"coverage.html":{}}}],["interfaces",{"_index":273,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1223,"title":{},"body":{"injectables/FileOperationService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{}}}],["inversejoincolumn",{"_index":667,"title":{},"body":{"entities/Dataset.html":{}}}],["isarray",{"_index":506,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["isarray({message",{"_index":988,"title":{},"body":{"classes/DownloadFilesDto.html":{}}}],["isdate",{"_index":1728,"title":{},"body":{"injectables/ParseStringDatePipe.html":{}}}],["isdate(new",{"_index":1729,"title":{},"body":{"injectables/ParseStringDatePipe.html":{}}}],["isdatestring",{"_index":584,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["isemail",{"_index":648,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum",{"_index":487,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum(['active",{"_index":484,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["isenum(userstatus",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isglobal",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":1917,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["isin(['public",{"_index":1911,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["isint",{"_index":471,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateDatasetDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UploadChunkDto.html":{}}}],["isint({each",{"_index":499,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["isint({message",{"_index":1971,"title":{},"body":{"classes/UploadChunkDto.html":{}}}],["islink",{"_index":1610,"title":{},"body":{"entities/Menu.html":{},"injectables/MenuService.html":{}}}],["isnan(numberid",{"_index":1714,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{}}}],["isnotempty",{"_index":472,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UploadChunkDto.html":{}}}],["isnotempty()@isint({message",{"_index":464,"title":{},"body":{"classes/CompleteChunkDto.html":{}}}],["isnotempty()@isstring()@apiproperty({description",{"_index":592,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isnotempty({message",{"_index":603,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UploadChunkDto.html":{}}}],["isnumber",{"_index":611,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isobject",{"_index":649,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":488,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@apiproperty({description",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isarray({message",{"_index":497,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isdatestring()@apiproperty({description",{"_index":562,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["isoptional()@isemail",{"_index":625,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isenum(userstatus",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isobject({message",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isstring()@apiproperty({description",{"_index":476,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateRoleDto.html":{}}}],["isoptional()@isstring()@isurl()@apiproperty({description",{"_index":559,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["isoptional()@isstring({message",{"_index":494,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{}}}],["isphonenumber",{"_index":1965,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["isphonenumber('cn",{"_index":1966,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["isphonenumber('cn')@isoptional()@apiproperty({description",{"_index":1962,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["isstring",{"_index":489,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{}}}],["isstring()@apiproperty({description",{"_index":480,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":556,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["isstring({message",{"_index":502,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isurl",{"_index":585,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["isvalid",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":1723,"title":{},"body":{"injectables/ParseFileTypePipe.html":{}}}],["item.trim",{"_index":1721,"title":{},"body":{"injectables/ParseFileTypePipe.html":{}}}],["jar",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["job",{"_index":2399,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2401,"title":{},"body":{"index.html":{}}}],["join",{"_index":1046,"title":{},"body":{"injectables/FileDownloadService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["join(process.cwd",{"_index":1052,"title":{},"body":{"injectables/FileDownloadService.html":{},"controllers/UserController.html":{}}}],["joincolumn",{"_index":99,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/Menu.html":{},"entities/Profile.html":{}}}],["jointable",{"_index":673,"title":{},"body":{"entities/Dataset.html":{},"entities/User.html":{}}}],["jpeg",{"_index":2237,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["js",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json",{"_index":1871,"title":{},"body":{"entities/Task.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":1498,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.registerasync",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["jwtservice",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileDownloadService.html":{}}}],["jwtstrategy",{"_index":412,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":2416,"title":{},"body":{"index.html":{}}}],["kb",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1851,"title":{},"body":{"injectables/RoleService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["knowledge",{"_index":1507,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["knowledge.controller",{"_index":1574,"title":{},"body":{"modules/KnowledgeModule.html":{}}}],["knowledge.dto",{"_index":1530,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["knowledge.dto.ts",{"_index":519,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"coverage.html":{}}}],["knowledge.dto.ts:105",{"_index":567,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:107",{"_index":1942,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:11",{"_index":1939,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:113",{"_index":566,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:115",{"_index":1946,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:121",{"_index":571,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:123",{"_index":1935,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:129",{"_index":551,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:131",{"_index":1932,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:137",{"_index":548,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:139",{"_index":1936,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:145",{"_index":552,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:147",{"_index":1948,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:153",{"_index":573,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:156",{"_index":1945,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:162",{"_index":570,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:165",{"_index":1941,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:17",{"_index":557,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:171",{"_index":561,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:174",{"_index":1955,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:180",{"_index":583,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:182",{"_index":1933,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:188",{"_index":549,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:19",{"_index":1937,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:190",{"_index":1950,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:196",{"_index":577,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:198",{"_index":1954,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:204",{"_index":581,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:206",{"_index":1944,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:212",{"_index":568,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:214",{"_index":1947,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:220",{"_index":572,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:25",{"_index":554,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:27",{"_index":1949,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:33",{"_index":576,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:35",{"_index":1953,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:41",{"_index":580,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:43",{"_index":1952,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:49",{"_index":579,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:51",{"_index":1934,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:57",{"_index":550,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:59",{"_index":1940,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:65",{"_index":558,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:67",{"_index":1931,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:73",{"_index":547,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:75",{"_index":1930,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:81",{"_index":546,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:83",{"_index":1938,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:89",{"_index":555,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:91",{"_index":1951,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:97",{"_index":578,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.dto.ts:99",{"_index":1943,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["knowledge.entity",{"_index":1558,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{}}}],["knowledge.service",{"_index":1559,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["knowledge/knowledge.module",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["knowledgecontroller",{"_index":1505,"title":{"controllers/KnowledgeController.html":{}},"body":{"controllers/KnowledgeController.html":{},"modules/KnowledgeModule.html":{},"coverage.html":{}}}],["knowledgecreate",{"_index":1508,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgecreate(@body",{"_index":1534,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["knowledgecreate(dto",{"_index":1514,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgedelete",{"_index":1509,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgedelete(@param('id",{"_index":1544,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["knowledgedelete(id",{"_index":1517,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgedetailget",{"_index":1510,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgedetailget(@param('id",{"_index":1539,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["knowledgedetailget(id",{"_index":1520,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgeget",{"_index":1511,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgelistget",{"_index":1512,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgelistget(page",{"_index":1524,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgemanageservice",{"_index":1531,"title":{"injectables/KnowledgeManageService.html":{}},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"coverage.html":{},"overview.html":{}}}],["knowledgemodule",{"_index":305,"title":{"modules/KnowledgeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/KnowledgeModule.html":{},"modules.html":{},"overview.html":{}}}],["knowledgerepository",{"_index":1550,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["knowledgeservice",{"_index":1548,"title":{"injectables/KnowledgeService.html":{}},"body":{"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"coverage.html":{},"overview.html":{}}}],["knowledgeupdate",{"_index":1513,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["knowledgeupdate(id",{"_index":1526,"title":{},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{}}}],["last_updated",{"_index":1325,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["latin1').tostring",{"_index":886,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["learn",{"_index":2370,"title":{},"body":{"index.html":{}}}],["legend",{"_index":215,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":48,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["length(5",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["length(6",{"_index":628,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["level",{"_index":1083,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["license",{"_index":2422,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2404,"title":{},"body":{"index.html":{}}}],["link",{"_index":1106,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["link.dto",{"_index":1048,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["link.dto.ts",{"_index":618,"title":{},"body":{"classes/CreateTempLinkDto.html":{},"coverage.html":{}}}],["link.dto.ts:11",{"_index":620,"title":{},"body":{"classes/CreateTempLinkDto.html":{}}}],["link/${token",{"_index":1105,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["linkedin",{"_index":2398,"title":{},"body":{"index.html":{}}}],["list",{"_index":779,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileService.html":{},"injectables/KnowledgeManageService.html":{}}}],["literal",{"_index":749,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileService.html":{},"injectables/KnowledgeManageService.html":{}}}],["lock",{"_index":974,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["log",{"_index":72,"title":{},"body":{"entities/AiService.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{}}}],["log.ts",{"_index":83,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceLog.html":{},"coverage.html":{}}}],["log.ts:13",{"_index":89,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceLog.html":{}}}],["log.ts:17",{"_index":95,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceLog.html":{}}}],["log.ts:20",{"_index":98,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["log.ts:23",{"_index":90,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["log.ts:24",{"_index":206,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["log.ts:26",{"_index":92,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["log.ts:27",{"_index":207,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["log.ts:29",{"_index":96,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["log.ts:30",{"_index":203,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["log_level",{"_index":2292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_on",{"_index":2293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logenum",{"_index":2168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["logid",{"_index":200,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["login",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["login(@body",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(login",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":365,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logout",{"_index":1998,"title":{},"body":{"controllers/UserController.html":{}}}],["logtype",{"_index":201,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["looking",{"_index":2342,"title":{},"body":{"index.html":{}}}],["loop",{"_index":2394,"title":{},"body":{"index.html":{}}}],["lts.1",{"_index":2150,"title":{},"body":{"dependencies.html":{}}}],["m4a",{"_index":2191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["makes",{"_index":2350,"title":{},"body":{"index.html":{}}}],["manage.service",{"_index":719,"title":{},"body":{"controllers/DatasetController.html":{},"modules/DatasetModule.html":{},"injectables/DiagnosisService.html":{},"modules/FileModule.html":{},"controllers/KnowledgeController.html":{},"modules/KnowledgeModule.html":{}}}],["manage.service.ts",{"_index":739,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileManageService.html":{},"injectables/KnowledgeManageService.html":{},"coverage.html":{}}}],["manage.service.ts:101",{"_index":746,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["manage.service.ts:11",{"_index":1549,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:115",{"_index":752,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileManageService.html":{}}}],["manage.service.ts:12",{"_index":743,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["manage.service.ts:125",{"_index":753,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["manage.service.ts:142",{"_index":751,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["manage.service.ts:147",{"_index":1161,"title":{},"body":{"injectables/FileManageService.html":{}}}],["manage.service.ts:15",{"_index":1143,"title":{},"body":{"injectables/FileManageService.html":{}}}],["manage.service.ts:184",{"_index":1152,"title":{},"body":{"injectables/FileManageService.html":{}}}],["manage.service.ts:19",{"_index":1551,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:20",{"_index":750,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["manage.service.ts:226",{"_index":1154,"title":{},"body":{"injectables/FileManageService.html":{}}}],["manage.service.ts:24",{"_index":1554,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:29",{"_index":1148,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:52",{"_index":1150,"title":{},"body":{"injectables/FileManageService.html":{}}}],["manage.service.ts:62",{"_index":1553,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:68",{"_index":1556,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:76",{"_index":1552,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["manage.service.ts:78",{"_index":1157,"title":{},"body":{"injectables/FileManageService.html":{}}}],["manageservice",{"_index":721,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{}}}],["managing",{"_index":2363,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":674,"title":{},"body":{"entities/Dataset.html":{},"entities/File.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined",{"_index":664,"title":{},"body":{"entities/Dataset.html":{},"entities/File.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytoone",{"_index":100,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/DiagnosisHistory.html":{},"entities/Menu.html":{}}}],["manytoone(undefined",{"_index":93,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/DiagnosisHistory.html":{},"entities/Menu.html":{}}}],["map((item",{"_index":1720,"title":{},"body":{"injectables/ParseFileTypePipe.html":{}}}],["map((menu",{"_index":1692,"title":{},"body":{"injectables/MenuService.html":{}}}],["match",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match[2].tolowercase",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":1601,"title":{},"body":{"classes/LoginDto.html":{}}}],["matches(/^[a",{"_index":1593,"title":{},"body":{"classes/LoginDto.html":{}}}],["matching",{"_index":82,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matroska",{"_index":2263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mau",{"_index":2346,"title":{},"body":{"index.html":{}}}],["max(file.updatedat",{"_index":1324,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["maxsize",{"_index":1296,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["mb",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["md5",{"_index":606,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{},"classes/UploadChunkDto.html":{}}}],["md5不能为空！'})@isstring({message",{"_index":604,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UploadChunkDto.html":{}}}],["md5必须为字符串类型！'})@apiproperty({description",{"_index":605,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["md5必须为字符串类型！'})@type(undefined)@apiproperty({description",{"_index":1974,"title":{},"body":{"classes/UploadChunkDto.html":{}}}],["menu",{"_index":1606,"title":{"entities/Menu.html":{}},"body":{"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["menu.children",{"_index":1626,"title":{},"body":{"entities/Menu.html":{}}}],["menu.children)@joincolumn({name",{"_index":1619,"title":{},"body":{"entities/Menu.html":{}}}],["menu.controller",{"_index":1671,"title":{},"body":{"modules/MenuModule.html":{}}}],["menu.entity",{"_index":1646,"title":{},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{}}}],["menu.icon",{"_index":1693,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.islink",{"_index":1696,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.parent",{"_index":1614,"title":{},"body":{"entities/Menu.html":{}}}],["menu.parentid",{"_index":1691,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.path",{"_index":1695,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.service",{"_index":1648,"title":{},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{}}}],["menu.title",{"_index":1694,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu/menu.module",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["menucontroller",{"_index":1627,"title":{"controllers/MenuController.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["menudata",{"_index":1633,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["menumodule",{"_index":306,"title":{"modules/MenuModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules.html":{},"overview.html":{}}}],["menurepository",{"_index":1677,"title":{},"body":{"injectables/MenuService.html":{}}}],["menus",{"_index":1656,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["menuservice",{"_index":1647,"title":{"injectables/MenuService.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"coverage.html":{},"overview.html":{}}}],["merged",{"_index":1461,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["mergefile",{"_index":1211,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["mergefile(chunkpath",{"_index":1217,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["message",{"_index":202,"title":{},"body":{"entities/AiServiceLog.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/TypeormFilter.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1708,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"dependencies.html":{}}}],["method",{"_index":1901,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["methods",{"_index":125,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{}}}],["mime",{"_index":870,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileTypeValidationPipe.html":{}}}],["mime_type",{"_index":838,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileTypeValidationPipe.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mime_type.jpeg",{"_index":890,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["mimetype",{"_index":868,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["mimetype.startswith('application",{"_index":875,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["mimetype.startswith('audio",{"_index":877,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["mimetype.startswith('image",{"_index":871,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["mimetype.startswith('video",{"_index":873,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["mimetypevalue",{"_index":2102,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2160,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2403,"title":{},"body":{"index.html":{}}}],["mkdirsync",{"_index":843,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["mkdirsync('uploads/avatar",{"_index":2055,"title":{},"body":{"controllers/UserController.html":{}}}],["mkdirsync(folder",{"_index":880,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["mkv",{"_index":2262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mode",{"_index":975,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"index.html":{}}}],["model",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modelmimetypes",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modelmimetypes[extension.tolowercase",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/ai",{"_index":177,"title":{},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{}}}],["models/diagnosis",{"_index":933,"title":{},"body":{"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{}}}],["models/file.entity",{"_index":1049,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{}}}],["models/profile.entity",{"_index":650,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"modules/UserModule.html":{}}}],["models/task.entity",{"_index":1165,"title":{},"body":{"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileUploadService.html":{}}}],["models/user.entity",{"_index":2086,"title":{},"body":{"modules/UserModule.html":{}}}],["module",{"_index":211,"title":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":213,"title":{"modules.html":{}},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/file/models/file.entity",{"_index":924,"title":{},"body":{"entities/DiagnosisHistory.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["modules/file/services/file",{"_index":951,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["modules/file/services/file.service",{"_index":754,"title":{},"body":{"injectables/DatasetManageService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["more",{"_index":2340,"title":{},"body":{"index.html":{}}}],["mov",{"_index":2259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mp3",{"_index":2181,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":2254,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mpeg",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ms",{"_index":2195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["msdownload",{"_index":2176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["msi",{"_index":2177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["msvideo",{"_index":2258,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["multer",{"_index":846,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["mxnet",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":2151,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":2417,"title":{},"body":{"index.html":{}}}],["name",{"_index":104,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateRoleDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/Profile.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["namespace",{"_index":404,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{}}}],["name不能为空！'})@apiproperty({description",{"_index":504,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["name必须是字符串！'})@isnotempty({message",{"_index":503,"title":{},"body":{"classes/CreateDatasetDto.html":{}}}],["name必须是字符串！'})@isoptional({message",{"_index":1908,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["need",{"_index":2389,"title":{},"body":{"index.html":{}}}],["nest",{"_index":2312,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2421,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":2332,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":173,"title":{},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1860,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/FileDownloadService.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":400,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":841,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":469,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":227,"title":{},"body":{"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"modules/AppModule.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["new",{"_index":266,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newfile",{"_index":1428,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["newmenu",{"_index":1660,"title":{},"body":{"controllers/MenuController.html":{}}}],["node.js",{"_index":2304,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":811,"title":{},"body":{"injectables/DatasetService.html":{},"injectables/DiagnosisService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"interfaces/Request-1.html":{},"injectables/RoleService.html":{}}}],["notfoundexception('menu",{"_index":1659,"title":{},"body":{"controllers/MenuController.html":{}}}],["notfoundexception('task",{"_index":1412,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["null",{"_index":278,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileTypePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["null'})@joincolumn({name",{"_index":915,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["nullable",{"_index":44,"title":{},"body":{"entities/AiService.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["number",{"_index":51,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"injectables/AuthGuard.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/Task.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"miscellaneous/variables.html":{}}}],["number(file.filesize",{"_index":777,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["number(id",{"_index":1713,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{}}}],["number(v",{"_index":994,"title":{},"body":{"classes/DownloadFilesDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["numberid",{"_index":1712,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{}}}],["object.assign(aiservice",{"_index":269,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["object.assign(file",{"_index":1171,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["object.assign(knowledge",{"_index":1568,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["object.assign(role",{"_index":1847,"title":{},"body":{"injectables/RoleService.html":{}}}],["object.values(mime_type.application",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(mime_type.audio",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(mime_type.font",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(mime_type.image",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(mime_type.other",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(mime_type.video",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["occurred",{"_index":1485,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["octetstream",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offer",{"_index":2400,"title":{},"body":{"index.html":{}}}],["officedocument.presentationml.presentation",{"_index":2219,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":2215,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["officedocument.wordprocessingml.document",{"_index":2210,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["official",{"_index":2347,"title":{},"body":{"index.html":{}}}],["ogg",{"_index":2185,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ogg_audio",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ogg_video",{"_index":2267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ondelete",{"_index":913,"title":{},"body":{"entities/DiagnosisHistory.html":{}}}],["onetomany",{"_index":67,"title":{},"body":{"entities/AiService.html":{},"entities/Menu.html":{}}}],["onetomany(undefined",{"_index":26,"title":{},"body":{"entities/AiService.html":{},"entities/Menu.html":{}}}],["onetoone",{"_index":1778,"title":{},"body":{"entities/Profile.html":{},"entities/User.html":{}}}],["onetoone(undefined",{"_index":1981,"title":{},"body":{"entities/User.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":1776,"title":{},"body":{"entities/Profile.html":{}}}],["onnx",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onupdate",{"_index":63,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["open",{"_index":2405,"title":{},"body":{"index.html":{}}}],["operation.service",{"_index":857,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileUploadService.html":{}}}],["operation.service.ts",{"_index":1209,"title":{},"body":{"injectables/FileOperationService.html":{},"coverage.html":{}}}],["operation.service.ts:13",{"_index":1222,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["operation.service.ts:26",{"_index":1216,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["operation.service.ts:44",{"_index":1219,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["operation.service.ts:61",{"_index":1214,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["optional",{"_index":138,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"classes/ResetPasswordDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{}}}],["opus",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":982,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/MenuService.html":{}}}],["orderby('file.id",{"_index":1288,"title":{},"body":{"injectables/FileService.html":{}}}],["originalfilename",{"_index":962,"title":{},"body":{"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileService.html":{},"injectables/FileUploadService.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["otf",{"_index":2231,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["othertypes",{"_index":1339,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["othertypevalue",{"_index":2103,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":224,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2425,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2139,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":151,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"controllers/UserController.html":{},"interfaces/UserQuery.html":{}}}],["pagesize",{"_index":148,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"controllers/UserController.html":{},"interfaces/UserQuery.html":{}}}],["param",{"_index":169,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":1541,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["param('serviceid",{"_index":196,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{}}}],["params",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parent",{"_index":1611,"title":{},"body":{"entities/Menu.html":{},"injectables/MenuService.html":{}}}],["parentid",{"_index":1612,"title":{},"body":{"entities/Menu.html":{},"injectables/MenuService.html":{}}}],["parsedsize",{"_index":1303,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["parsefileidspipe",{"_index":1705,"title":{"injectables/ParseFileIdsPipe.html":{}},"body":{"injectables/ParseFileIdsPipe.html":{},"coverage.html":{}}}],["parsefiletypepipe",{"_index":1717,"title":{"injectables/ParseFileTypePipe.html":{}},"body":{"injectables/ParseFileTypePipe.html":{},"coverage.html":{}}}],["parseint(item",{"_index":511,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["parseint(match[1",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(parts[0",{"_index":1065,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["parseint(parts[1",{"_index":1068,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["parseintpipe",{"_index":715,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["parsesize",{"_index":1299,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parsesize(this.maxsize",{"_index":1304,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["parsestringdatepipe",{"_index":712,"title":{"injectables/ParseStringDatePipe.html":{}},"body":{"controllers/DatasetController.html":{},"injectables/ParseStringDatePipe.html":{},"coverage.html":{}}}],["part",{"_index":2390,"title":{},"body":{"index.html":{}}}],["partial",{"_index":1147,"title":{},"body":{"injectables/FileManageService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["parts",{"_index":1061,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["parts[1",{"_index":1067,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["pass.dto",{"_index":2044,"title":{},"body":{"controllers/UserController.html":{}}}],["pass.dto.ts",{"_index":1787,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["pass.dto.ts:12",{"_index":1788,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["passport",{"_index":1496,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportauthguard",{"_index":399,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{}}}],["passportauthguard('jwt",{"_index":396,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{}}}],["passportmodule",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1493,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["path",{"_index":1047,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileUploadService.html":{},"entities/Menu.html":{},"injectables/MenuService.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{}}}],["path.extname(task.filename",{"_index":1446,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["path.join(folder",{"_index":1448,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["payload",{"_index":1099,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.fileid",{"_index":1108,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["payload.roles",{"_index":1504,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":1502,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":1503,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pb",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":2204,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":920,"title":{},"body":{"entities/DiagnosisHistory.html":{},"entities/Task.html":{},"miscellaneous/enumerations.html":{}}}],["pessimistic_write",{"_index":976,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["phone",{"_index":1768,"title":{},"body":{"entities/Profile.html":{},"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{}}}],["php",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipetransform",{"_index":1301,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{}}}],["plant_disease_knowledge",{"_index":1564,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["plantdiseaseknowledge",{"_index":1557,"title":{"entities/PlantDiseaseKnowledge.html":{}},"body":{"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"entities/PlantDiseaseKnowledge.html":{},"coverage.html":{}}}],["platform",{"_index":2345,"title":{},"body":{"index.html":{}}}],["please",{"_index":2373,"title":{},"body":{"index.html":{}}}],["png",{"_index":2238,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pnpm",{"_index":2317,"title":{},"body":{"index.html":{}}}],["port",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":2337,"title":{},"body":{"index.html":{}}}],["post",{"_index":135,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["post(':id/start",{"_index":830,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["post('avatar",{"_index":2053,"title":{},"body":{"controllers/UserController.html":{}}}],["post('avatar')@httpcode(httpstatus.ok)@useinterceptors(undefined",{"_index":2024,"title":{},"body":{"controllers/UserController.html":{}}}],["post('create",{"_index":691,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/UserController.html":{}}}],["post('create')@roles(role.admin)@useguards(rolesguard)@httpcode(httpstatus.created",{"_index":2027,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":2012,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@httpcode(httpstatus.created",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":861,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":834,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["post()@httpcode(httpstatus.created",{"_index":1515,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["post()@roles(role.admin)@httpcode(httpstatus.created)@useguards(rolesguard",{"_index":1803,"title":{},"body":{"controllers/RoleController.html":{}}}],["post()@roles(role.admin)@useguards(rolesguard)@httpcode(httpstatus.created",{"_index":1631,"title":{},"body":{"controllers/MenuController.html":{}}}],["powerpoint",{"_index":2217,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ppt",{"_index":2216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pptx",{"_index":2218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pptxopenxml",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":124,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["preventivemeasures",{"_index":536,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["primarygeneratedcolumn",{"_index":52,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('increment",{"_index":918,"title":{},"body":{"entities/DiagnosisHistory.html":{},"entities/Task.html":{}}}],["private",{"_index":251,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/AuthService.html":{},"entities/Dataset.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"interfaces/Request-1.html":{},"injectables/RoleService.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["process.env.node_env",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":2322,"title":{},"body":{"index.html":{}}}],["profile",{"_index":624,"title":{"entities/Profile.html":{}},"body":{"classes/CreateUserDto.html":{},"entities/Profile.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["profile.dto",{"_index":2047,"title":{},"body":{"controllers/UserController.html":{}}}],["profile.dto.ts",{"_index":1958,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:11",{"_index":1960,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:19",{"_index":1961,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:27",{"_index":1964,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:35",{"_index":1959,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.entity",{"_index":1992,"title":{},"body":{"entities/User.html":{}}}],["profile.user",{"_index":1982,"title":{},"body":{"entities/User.html":{}}}],["profileget",{"_index":1999,"title":{},"body":{"controllers/UserController.html":{}}}],["profileget(@req",{"_index":2050,"title":{},"body":{"controllers/UserController.html":{}}}],["profileget(req",{"_index":2014,"title":{},"body":{"controllers/UserController.html":{}}}],["profileupdate",{"_index":2000,"title":{},"body":{"controllers/UserController.html":{}}}],["profileupdate(req",{"_index":2017,"title":{},"body":{"controllers/UserController.html":{}}}],["progressive",{"_index":2303,"title":{},"body":{"index.html":{}}}],["project",{"_index":2315,"title":{},"body":{"index.html":{}}}],["promise",{"_index":141,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"injectables/DatasetManageService.html":{},"guards/FileGuard.html":{},"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/MenuService.html":{},"interfaces/Request-1.html":{}}}],["promise((resolve",{"_index":1231,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["promise.all",{"_index":1346,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["promise.all(chunkdeletionpromises",{"_index":1454,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["promise.all(deletionpromises",{"_index":1193,"title":{},"body":{"injectables/FileManageService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"interfaces/ApiResponse.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"properties.html":{}}}],["providers",{"_index":218,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["pt",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pth",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1126,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["put",{"_index":170,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["put(':datasetid",{"_index":710,"title":{},"body":{"controllers/DatasetController.html":{}}}],["put(':id",{"_index":1528,"title":{},"body":{"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["put(':id')@roles(role.admin)@useguards(rolesguard",{"_index":1644,"title":{},"body":{"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["put(':id/reset/password",{"_index":2078,"title":{},"body":{"controllers/UserController.html":{}}}],["put(':id/reset/password')@roles(role.admin)@useguards(rolesguard",{"_index":2038,"title":{},"body":{"controllers/UserController.html":{}}}],["put(':serviceid",{"_index":157,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["put('profile",{"_index":2018,"title":{},"body":{"controllers/UserController.html":{}}}],["put('reset/password",{"_index":2021,"title":{},"body":{"controllers/UserController.html":{}}}],["pytorch",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":171,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/UserController.html":{}}}],["query('address",{"_index":2070,"title":{},"body":{"controllers/UserController.html":{}}}],["query('category",{"_index":1537,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["query('createdend",{"_index":724,"title":{},"body":{"controllers/DatasetController.html":{}}}],["query('createdstart",{"_index":723,"title":{},"body":{"controllers/DatasetController.html":{}}}],["query('name",{"_index":722,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/UserController.html":{}}}],["query('page",{"_index":191,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/UserController.html":{}}}],["query('pagesize",{"_index":192,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/UserController.html":{}}}],["query('phone",{"_index":2069,"title":{},"body":{"controllers/UserController.html":{}}}],["query('updatedend",{"_index":726,"title":{},"body":{"controllers/DatasetController.html":{}}}],["query('updatedstart",{"_index":725,"title":{},"body":{"controllers/DatasetController.html":{}}}],["query('username",{"_index":2068,"title":{},"body":{"controllers/UserController.html":{}}}],["querybuilder",{"_index":758,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/KnowledgeManageService.html":{}}}],["querybuilder.andwhere",{"_index":1279,"title":{},"body":{"injectables/FileService.html":{}}}],["querybuilder.andwhere('dataset.createdat",{"_index":765,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["querybuilder.andwhere('dataset.name",{"_index":762,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["querybuilder.andwhere('dataset.updatedat",{"_index":770,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["querybuilder.andwhere('file.createdby",{"_index":1273,"title":{},"body":{"injectables/FileService.html":{}}}],["querybuilder.andwhere('file.filetype",{"_index":1275,"title":{},"body":{"injectables/FileService.html":{},"injectables/FileStorageService.html":{}}}],["querybuilder.andwhere('file.originalfilename",{"_index":1277,"title":{},"body":{"injectables/FileService.html":{}}}],["querybuilder.getrawone",{"_index":1328,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["querybuilder.where('dataset.createdby",{"_index":760,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["querybuilder.where('knowledge.category",{"_index":1566,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["queryfailederror",{"_index":1892,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["queryrunner",{"_index":953,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.committransaction",{"_index":969,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.connect",{"_index":955,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.manager.count(taskentity",{"_index":1180,"title":{},"body":{"injectables/FileManageService.html":{}}}],["queryrunner.manager.create(diagnosishistory",{"_index":957,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["queryrunner.manager.create(taskentity",{"_index":1433,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["queryrunner.manager.delete(fileentity",{"_index":1182,"title":{},"body":{"injectables/FileManageService.html":{}}}],["queryrunner.manager.find(fileentity",{"_index":1175,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.manager.findone(diagnosishistory",{"_index":973,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["queryrunner.manager.findone(fileentity",{"_index":1170,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.manager.findone(taskentity",{"_index":1411,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["queryrunner.manager.save(diagnosishistory",{"_index":968,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["queryrunner.manager.save(file",{"_index":1174,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.manager.save(fileentity",{"_index":1432,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["queryrunner.manager.save(filemeta",{"_index":1169,"title":{},"body":{"injectables/FileManageService.html":{}}}],["queryrunner.manager.save(files",{"_index":1178,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.manager.save(newfile",{"_index":1460,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["queryrunner.manager.save(task",{"_index":1427,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["queryrunner.manager.save(taskentity",{"_index":1423,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["queryrunner.release",{"_index":972,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.rollbacktransaction",{"_index":970,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["queryrunner.starttransaction",{"_index":956,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["questions",{"_index":2371,"title":{},"body":{"index.html":{}}}],["quicktime",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["range",{"_index":1054,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["range.replace(/bytes",{"_index":1062,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["ranges",{"_index":1076,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["rar",{"_index":2202,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":2412,"title":{},"body":{"index.html":{}}}],["readfile",{"_index":1212,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["readfile(filepath",{"_index":1221,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["readonly",{"_index":186,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["ready",{"_index":2330,"title":{},"body":{"index.html":{}}}],["real",{"_index":2385,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":881,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["redis_host",{"_index":2288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redis_password",{"_index":2290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redis_port",{"_index":2289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redis_reconnect",{"_index":2291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["referencecount",{"_index":1179,"title":{},"body":{"injectables/FileManageService.html":{}}}],["referencecount[file.filemd5",{"_index":1190,"title":{},"body":{"injectables/FileManageService.html":{}}}],["referencedcolumnname",{"_index":681,"title":{},"body":{"entities/Dataset.html":{}}}],["reflect",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1856,"title":{},"body":{"guards/RolesGuard.html":{}}}],["regex",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(dto",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(email",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto",{"_index":369,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["reject",{"_index":1232,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["reject(new",{"_index":1253,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["relations",{"_index":260,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/DatasetService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{}}}],["remove",{"_index":131,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["remove(@param('serviceid",{"_index":198,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["remove(id",{"_index":1582,"title":{},"body":{"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["remove(serviceid",{"_index":152,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{}}}],["repository",{"_index":237,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"index.html":{}}}],["req",{"_index":693,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/FileDownloadService.html":{},"controllers/MenuController.html":{},"controllers/UserController.html":{}}}],["req.headers.range",{"_index":1055,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["req.user",{"_index":1651,"title":{},"body":{"controllers/MenuController.html":{}}}],["req.user.userid",{"_index":728,"title":{},"body":{"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["request",{"_index":406,"title":{"interfaces/Request.html":{},"interfaces/Request-1.html":{}},"body":{"injectables/AuthGuard.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["request.body.fileids",{"_index":1129,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["request.file",{"_index":1124,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["request.filemeta",{"_index":1127,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["request.filesmeta",{"_index":1134,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["request.method",{"_index":1902,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["request.params.fileid",{"_index":1122,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["request.protocol}://${request.get",{"_index":1103,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["request.url",{"_index":1900,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["request.user.userid",{"_index":1098,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["request.user?.userid",{"_index":1123,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["requiredroles",{"_index":1864,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1868,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiring",{"_index":2353,"title":{},"body":{"index.html":{}}}],["res",{"_index":1030,"title":{},"body":{"injectables/FileDownloadService.html":{},"controllers/UserController.html":{}}}],["res.attachment(zipfilename",{"_index":1085,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["res.sendfile(filepath",{"_index":2064,"title":{},"body":{"controllers/UserController.html":{}}}],["researchsources",{"_index":537,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["reset",{"_index":223,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":1785,"title":{"classes/ResetPasswordDto.html":{}},"body":{"classes/ResetPasswordDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["resetpassworddto.password",{"_index":2080,"title":{},"body":{"controllers/UserController.html":{}}}],["resistantvarieties",{"_index":538,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["resolve",{"_index":1240,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["resolve(hash.digest('hex",{"_index":1251,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["resources",{"_index":2365,"title":{},"body":{"index.html":{}}}],["response",{"_index":1031,"title":{},"body":{"injectables/FileDownloadService.html":{},"classes/HttpExceptionFilter.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{}}}],["response.status(500).json",{"_index":1898,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["response.status(status).json",{"_index":1486,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsebody",{"_index":1481,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsebody.code",{"_index":1483,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsebody.message",{"_index":1484,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsetime",{"_index":86,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["result",{"_index":780,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/FileUploadService.html":{},"injectables/ParseFileTypePipe.html":{}}}],["result.length",{"_index":1724,"title":{},"body":{"injectables/ParseFileTypePipe.html":{}}}],["results",{"_index":81,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":188,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateDatasetDto.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request-1.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/UpdateDatasetDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":140,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{}}}],["role",{"_index":161,"title":{"entities/Role.html":{}},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.alias",{"_index":1853,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.controller",{"_index":1828,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.dto",{"_index":1813,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.dto.ts",{"_index":588,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:11",{"_index":594,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":590,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts:27",{"_index":591,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.entity",{"_index":1827,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["role.expert",{"_index":183,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{}}}],["role.id",{"_index":1852,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.name",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["role.service",{"_index":1815,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role.users",{"_index":1994,"title":{},"body":{"entities/User.html":{}}}],["role.users)@jointable({name",{"_index":1985,"title":{},"body":{"entities/User.html":{}}}],["role/role.entity",{"_index":1991,"title":{},"body":{"entities/User.html":{},"modules/UserModule.html":{}}}],["role/role.module",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["rolecontroller",{"_index":1800,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roleid",{"_index":1682,"title":{},"body":{"injectables/MenuService.html":{}}}],["rolemodule",{"_index":307,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":1834,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":159,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/DatasetController.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"interfaces/Request.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":182,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["roles.map((role",{"_index":1850,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles_key",{"_index":1862,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":1814,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolesguard",{"_index":165,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AiServiceController.html":{},"controllers/DatasetController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["routes",{"_index":1652,"title":{},"body":{"controllers/MenuController.html":{}}}],["rtf",{"_index":2220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":2319,"title":{},"body":{"index.html":{}}}],["runs",{"_index":2335,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["s+@\\s+\\.\\s+$/.test(o.login",{"_index":1604,"title":{},"body":{"classes/LoginDto.html":{}}}],["satisfiable",{"_index":1071,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["scalable",{"_index":2308,"title":{},"body":{"index.html":{}}}],["scientificname",{"_index":539,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["sdfgsafgasgsad",{"_index":645,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["secret",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{},"miscellaneous/enumerations.html":{}}}],["secretorkey",{"_index":1501,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":1321,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["send('requested",{"_index":1070,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["send(`error",{"_index":1093,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["sendfile(filepath",{"_index":1060,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["server",{"_index":2309,"title":{},"body":{"index.html":{}}}],["service",{"_index":70,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"coverage.html":{}}}],["service.controller",{"_index":228,"title":{},"body":{"modules/AiServiceModule.html":{}}}],["service.controller.ts",{"_index":123,"title":{},"body":{"controllers/AiServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:29",{"_index":136,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["service.controller.ts:35",{"_index":142,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["service.controller.ts:41",{"_index":150,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["service.controller.ts:50",{"_index":145,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["service.controller.ts:56",{"_index":158,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["service.controller.ts:65",{"_index":154,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["service.dto",{"_index":175,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{}}}],["service.dto.ts",{"_index":475,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{},"coverage.html":{}}}],["service.dto.ts:11",{"_index":481,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["service.dto.ts:19",{"_index":483,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["service.dto.ts:27",{"_index":477,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["service.dto.ts:35",{"_index":486,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["service.dto.ts:43",{"_index":479,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["service.entity",{"_index":101,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{}}}],["service.entity.ts",{"_index":8,"title":{},"body":{"entities/AiService.html":{},"coverage.html":{}}}],["service.entity.ts:16",{"_index":53,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:19",{"_index":54,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:22",{"_index":56,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:25",{"_index":46,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:32",{"_index":62,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:35",{"_index":50,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:38",{"_index":41,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:45",{"_index":64,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:48",{"_index":35,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:54",{"_index":32,"title":{},"body":{"entities/AiService.html":{}}}],["service.entity.ts:60",{"_index":29,"title":{},"body":{"entities/AiService.html":{}}}],["service.module",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["service.module.ts",{"_index":225,"title":{},"body":{"modules/AiServiceModule.html":{}}}],["service.service",{"_index":180,"title":{},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{}}}],["service.service.ts",{"_index":234,"title":{},"body":{"injectables/AiServiceService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":241,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service.service.ts:28",{"_index":243,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service.service.ts:34",{"_index":244,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service.service.ts:41",{"_index":246,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service.service.ts:51",{"_index":245,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service.service.ts:59",{"_index":248,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service.service.ts:72",{"_index":247,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["service/ai",{"_index":122,"title":{},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["service/dataset",{"_index":718,"title":{},"body":{"controllers/DatasetController.html":{},"modules/DatasetModule.html":{}}}],["service/dataset.service",{"_index":803,"title":{},"body":{"modules/DatasetModule.html":{}}}],["service/dto/create",{"_index":474,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"coverage.html":{}}}],["service/dto/update",{"_index":1904,"title":{},"body":{"classes/UpdateAiServiceDto.html":{},"coverage.html":{}}}],["service/models/ai",{"_index":7,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"coverage.html":{}}}],["service/services/ai",{"_index":233,"title":{},"body":{"injectables/AiServiceService.html":{},"coverage.html":{}}}],["serviceid",{"_index":17,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{}}}],["servicename",{"_index":18,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["services/ai",{"_index":179,"title":{},"body":{"controllers/AiServiceController.html":{},"modules/AiServiceModule.html":{}}}],["services/file",{"_index":1203,"title":{},"body":{"modules/FileModule.html":{}}}],["services/file.service",{"_index":1202,"title":{},"body":{"modules/FileModule.html":{}}}],["services/knowledge",{"_index":1532,"title":{},"body":{"controllers/KnowledgeController.html":{},"modules/KnowledgeModule.html":{}}}],["services/knowledge.service",{"_index":1575,"title":{},"body":{"modules/KnowledgeModule.html":{}}}],["servicetype",{"_index":19,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["set",{"_index":914,"title":{},"body":{"entities/DiagnosisHistory.html":{},"injectables/FileDownloadService.html":{}}}],["setmetadata(roles_key",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":2316,"title":{},"body":{"index.html":{}}}],["severity",{"_index":540,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["sh",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":2310,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":422,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["simple",{"_index":2355,"title":{},"body":{"index.html":{}}}],["size",{"_index":775,"title":{},"body":{"injectables/DatasetManageService.html":{},"miscellaneous/variables.html":{}}}],["size.match(regex",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size.pipe",{"_index":852,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["size.pipe.ts",{"_index":1293,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{},"coverage.html":{}}}],["size.pipe.ts:6",{"_index":1295,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["size.pipe.ts:9",{"_index":1298,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["skip",{"_index":261,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/DiagnosisService.html":{}}}],["skip((page",{"_index":1289,"title":{},"body":{"injectables/FileService.html":{},"injectables/KnowledgeManageService.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"modules/DatasetModule.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"modules/DiagnosisModule.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"modules/KnowledgeModule.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"index.html":{}}}],["speed",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["split",{"_index":1063,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/ParseFileTypePipe.html":{}}}],["sponsors",{"_index":2408,"title":{},"body":{"index.html":{}}}],["spreadmethod",{"_index":541,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["src/.../config.enum.ts",{"_index":2165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../file.guard.ts",{"_index":2434,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":2300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mime.enum.ts",{"_index":2163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mime.ts",{"_index":2433,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../parse.ts",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../response.helper.ts",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":2169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":2170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.enum.ts",{"_index":2171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/mime.ts",{"_index":2094,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorator/roles.decorator.ts",{"_index":2105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/enum/config.enum",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/common/enum/config.enum.ts",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enum/mime.enum.ts",{"_index":2173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enum/role.enum.ts",{"_index":2294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enum/status.enum.ts",{"_index":2296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enum/user.enum.ts",{"_index":2298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/filters/http",{"_index":1467,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filters/typeorm.filter.ts",{"_index":1889,"title":{},"body":{"classes/TypeormFilter.html":{},"coverage.html":{}}}],["src/common/filters/typeorm.filter.ts:7",{"_index":1891,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["src/common/guards/auth.guard.ts",{"_index":394,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/common/guards/auth.guard.ts:20",{"_index":398,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":1854,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts:10",{"_index":1858,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:7",{"_index":1857,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/helpers/response.helper.ts",{"_index":274,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/pipe/string",{"_index":1725,"title":{},"body":{"injectables/ParseStringDatePipe.html":{},"coverage.html":{}}}],["src/common/utils/mime.ts",{"_index":2109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/utils/parse.ts",{"_index":2110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/ai",{"_index":6,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"modules/AiServiceModule.html":{},"injectables/AiServiceService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{},"coverage.html":{}}}],["src/modules/app.controller.ts",{"_index":283,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/app.controller.ts:10",{"_index":286,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app.controller.ts:16",{"_index":289,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app.module.ts",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/app.service.ts",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/app.service.ts:5",{"_index":353,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:23",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:30",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:38",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:14",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:23",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:49",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:8",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.strategy.ts",{"_index":1487,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/auth.strategy.ts:18",{"_index":1492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/auth.strategy.ts:9",{"_index":1490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":1591,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:23",{"_index":1599,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:31",{"_index":1600,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":1781,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:11",{"_index":1783,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:19",{"_index":1784,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/dataset/dataset.controller.ts",{"_index":684,"title":{},"body":{"controllers/DatasetController.html":{},"coverage.html":{}}}],["src/modules/dataset/dataset.controller.ts:37",{"_index":699,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/modules/dataset/dataset.controller.ts:58",{"_index":692,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/modules/dataset/dataset.controller.ts:64",{"_index":707,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/modules/dataset/dataset.controller.ts:76",{"_index":711,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/modules/dataset/dataset.controller.ts:91",{"_index":703,"title":{},"body":{"controllers/DatasetController.html":{}}}],["src/modules/dataset/dataset.entity.ts",{"_index":654,"title":{},"body":{"entities/Dataset.html":{},"coverage.html":{}}}],["src/modules/dataset/dataset.entity.ts:16",{"_index":669,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:19",{"_index":670,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:22",{"_index":663,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:25",{"_index":659,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:28",{"_index":661,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:35",{"_index":671,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:38",{"_index":662,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:41",{"_index":672,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.entity.ts:50",{"_index":668,"title":{},"body":{"entities/Dataset.html":{}}}],["src/modules/dataset/dataset.module.ts",{"_index":802,"title":{},"body":{"modules/DatasetModule.html":{}}}],["src/modules/dataset/dto/create",{"_index":491,"title":{},"body":{"classes/CreateDatasetDto.html":{},"coverage.html":{}}}],["src/modules/dataset/dto/update",{"_index":1905,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"coverage.html":{}}}],["src/modules/dataset/service/dataset",{"_index":738,"title":{},"body":{"injectables/DatasetManageService.html":{},"coverage.html":{}}}],["src/modules/dataset/service/dataset.service.ts",{"_index":806,"title":{},"body":{"injectables/DatasetService.html":{},"coverage.html":{}}}],["src/modules/dataset/service/dataset.service.ts:13",{"_index":810,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/modules/dataset/service/dataset.service.ts:7",{"_index":808,"title":{},"body":{"injectables/DatasetService.html":{}}}],["src/modules/diagnosis/diagnosis.controller.ts",{"_index":814,"title":{},"body":{"controllers/DiagnosisController.html":{},"coverage.html":{}}}],["src/modules/diagnosis/diagnosis.controller.ts:110",{"_index":822,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["src/modules/diagnosis/diagnosis.controller.ts:116",{"_index":825,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["src/modules/diagnosis/diagnosis.controller.ts:68",{"_index":835,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["src/modules/diagnosis/diagnosis.controller.ts:86",{"_index":831,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["src/modules/diagnosis/diagnosis.controller.ts:98",{"_index":828,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["src/modules/diagnosis/diagnosis.module.ts",{"_index":931,"title":{},"body":{"modules/DiagnosisModule.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts",{"_index":936,"title":{},"body":{"injectables/DiagnosisService.html":{},"coverage.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts:102",{"_index":945,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts:11",{"_index":940,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts:21",{"_index":949,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts:59",{"_index":947,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts:83",{"_index":946,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["src/modules/diagnosis/diagnosis.service.ts:93",{"_index":943,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["src/modules/diagnosis/models/diagnosis",{"_index":903,"title":{},"body":{"entities/DiagnosisHistory.html":{},"coverage.html":{}}}],["src/modules/file/dto/complete",{"_index":461,"title":{},"body":{"classes/CompleteChunkDto.html":{},"coverage.html":{}}}],["src/modules/file/dto/create",{"_index":596,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"coverage.html":{}}}],["src/modules/file/dto/download",{"_index":986,"title":{},"body":{"classes/DownloadFilesDto.html":{},"coverage.html":{}}}],["src/modules/file/dto/update",{"_index":1910,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"coverage.html":{}}}],["src/modules/file/dto/upload",{"_index":1970,"title":{},"body":{"classes/UploadChunkDto.html":{},"coverage.html":{}}}],["src/modules/file/file.controller.ts",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["src/modules/file/file.module.ts",{"_index":1199,"title":{},"body":{"modules/FileModule.html":{}}}],["src/modules/file/guards/file.guard.ts",{"_index":1112,"title":{},"body":{"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/file/guards/file.guard.ts:30",{"_index":1114,"title":{},"body":{"guards/FileGuard.html":{}}}],["src/modules/file/guards/file.guard.ts:33",{"_index":1117,"title":{},"body":{"guards/FileGuard.html":{}}}],["src/modules/file/guards/file.guard.ts:55",{"_index":1464,"title":{},"body":{"guards/FilesGuard.html":{}}}],["src/modules/file/guards/file.guard.ts:58",{"_index":1465,"title":{},"body":{"guards/FilesGuard.html":{}}}],["src/modules/file/models/file.entity.ts",{"_index":995,"title":{},"body":{"entities/File.html":{},"coverage.html":{}}}],["src/modules/file/models/file.entity.ts:15",{"_index":1010,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:18",{"_index":1011,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:21",{"_index":1012,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:24",{"_index":1006,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:27",{"_index":1008,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:30",{"_index":1009,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:33",{"_index":1005,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:36",{"_index":999,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:39",{"_index":1000,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:46",{"_index":1013,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:49",{"_index":1001,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:52",{"_index":1014,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:55",{"_index":1015,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/file.entity.ts:59",{"_index":1002,"title":{},"body":{"entities/File.html":{}}}],["src/modules/file/models/task.entity.ts",{"_index":1870,"title":{},"body":{"entities/Task.html":{},"coverage.html":{}}}],["src/modules/file/models/task.entity.ts:12",{"_index":1878,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:15",{"_index":1877,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:18",{"_index":1875,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:21",{"_index":1882,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:24",{"_index":1885,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:27",{"_index":1881,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:30",{"_index":1872,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:33",{"_index":1873,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:40",{"_index":1883,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:43",{"_index":1874,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:46",{"_index":1884,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:49",{"_index":1887,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:6",{"_index":1879,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/models/task.entity.ts:9",{"_index":1876,"title":{},"body":{"entities/Task.html":{}}}],["src/modules/file/pipe/delete.pipe.ts",{"_index":1706,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{},"coverage.html":{}}}],["src/modules/file/pipe/delete.pipe.ts:10",{"_index":1710,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{}}}],["src/modules/file/pipe/file",{"_index":1292,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"coverage.html":{}}}],["src/modules/file/pipe/type.pipe.ts",{"_index":1718,"title":{},"body":{"injectables/ParseFileTypePipe.html":{},"coverage.html":{}}}],["src/modules/file/pipe/type.pipe.ts:10",{"_index":1719,"title":{},"body":{"injectables/ParseFileTypePipe.html":{}}}],["src/modules/file/services/file",{"_index":1021,"title":{},"body":{"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"coverage.html":{}}}],["src/modules/file/services/file.service.ts",{"_index":1254,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/modules/file/services/file.service.ts:14",{"_index":1265,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/file/services/file.service.ts:24",{"_index":1269,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/file/services/file.service.ts:34",{"_index":1267,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/file/services/file.service.ts:52",{"_index":1261,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/file/services/file.service.ts:67",{"_index":1263,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/file/services/file.service.ts:8",{"_index":1259,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/knowledge/dto/create",{"_index":518,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"coverage.html":{}}}],["src/modules/knowledge/dto/update",{"_index":1929,"title":{},"body":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"coverage.html":{}}}],["src/modules/knowledge/knowledge.controller.ts",{"_index":1506,"title":{},"body":{"controllers/KnowledgeController.html":{},"coverage.html":{}}}],["src/modules/knowledge/knowledge.controller.ts:32",{"_index":1516,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["src/modules/knowledge/knowledge.controller.ts:38",{"_index":1523,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["src/modules/knowledge/knowledge.controller.ts:44",{"_index":1525,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["src/modules/knowledge/knowledge.controller.ts:54",{"_index":1522,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["src/modules/knowledge/knowledge.controller.ts:60",{"_index":1529,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["src/modules/knowledge/knowledge.controller.ts:70",{"_index":1519,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["src/modules/knowledge/knowledge.entity.ts",{"_index":1731,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{},"coverage.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:10",{"_index":1743,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:107",{"_index":1745,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:115",{"_index":1761,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:118",{"_index":1736,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:126",{"_index":1755,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:129",{"_index":1759,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:132",{"_index":1748,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:135",{"_index":1752,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:18",{"_index":1741,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:26",{"_index":1754,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:29",{"_index":1758,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:32",{"_index":1757,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:35",{"_index":1737,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:38",{"_index":1744,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:41",{"_index":1734,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:44",{"_index":1733,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:47",{"_index":1742,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:50",{"_index":1756,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:58",{"_index":1747,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:61",{"_index":1746,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:68",{"_index":1739,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:7",{"_index":1749,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:76",{"_index":1760,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:79",{"_index":1751,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:82",{"_index":1738,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:85",{"_index":1735,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:88",{"_index":1740,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:91",{"_index":1753,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.entity.ts:99",{"_index":1750,"title":{},"body":{"entities/PlantDiseaseKnowledge.html":{}}}],["src/modules/knowledge/knowledge.module.ts",{"_index":1573,"title":{},"body":{"modules/KnowledgeModule.html":{}}}],["src/modules/knowledge/services/knowledge",{"_index":1546,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"coverage.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts",{"_index":1577,"title":{},"body":{"injectables/KnowledgeService.html":{},"coverage.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts:16",{"_index":1579,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts:22",{"_index":1580,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts:27",{"_index":1581,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts:36",{"_index":1585,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts:46",{"_index":1583,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["src/modules/knowledge/services/knowledge.service.ts:9",{"_index":1578,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["src/modules/menu/menu.controller.ts",{"_index":1628,"title":{},"body":{"controllers/MenuController.html":{},"coverage.html":{}}}],["src/modules/menu/menu.controller.ts:120",{"_index":1643,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/modules/menu/menu.controller.ts:34",{"_index":1641,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/modules/menu/menu.controller.ts:48",{"_index":1635,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/modules/menu/menu.controller.ts:61",{"_index":1638,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/modules/menu/menu.controller.ts:84",{"_index":1632,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/modules/menu/menu.controller.ts:97",{"_index":1645,"title":{},"body":{"controllers/MenuController.html":{}}}],["src/modules/menu/menu.entity.ts",{"_index":1607,"title":{},"body":{"entities/Menu.html":{},"coverage.html":{}}}],["src/modules/menu/menu.entity.ts:13",{"_index":1617,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:16",{"_index":1616,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:19",{"_index":1624,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:22",{"_index":1623,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:25",{"_index":1622,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:28",{"_index":1618,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:33",{"_index":1620,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.entity.ts:37",{"_index":1615,"title":{},"body":{"entities/Menu.html":{}}}],["src/modules/menu/menu.module.ts",{"_index":1670,"title":{},"body":{"modules/MenuModule.html":{}}}],["src/modules/menu/menu.service.ts",{"_index":1673,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/modules/menu/menu.service.ts:14",{"_index":1681,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/menu/menu.service.ts:44",{"_index":1679,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/menu/menu.service.ts:51",{"_index":1683,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/menu/menu.service.ts:59",{"_index":1678,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/menu/menu.service.ts:65",{"_index":1685,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/menu/menu.service.ts:7",{"_index":1676,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/menu/menu.service.ts:71",{"_index":1684,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/modules/role/dto/create",{"_index":587,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/dto/update",{"_index":1967,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts",{"_index":1801,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts:32",{"_index":1806,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:40",{"_index":1807,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:48",{"_index":1808,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:63",{"_index":1804,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:71",{"_index":1812,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:87",{"_index":1810,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.entity.ts",{"_index":1789,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/modules/role/role.entity.ts:10",{"_index":1794,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.entity.ts:13",{"_index":1791,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.entity.ts:16",{"_index":1797,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.entity.ts:19",{"_index":1792,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.entity.ts:26",{"_index":1795,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.entity.ts:7",{"_index":1793,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.module.ts",{"_index":1826,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/modules/role/role.service.ts",{"_index":1830,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/modules/role/role.service.ts:13",{"_index":1833,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:20",{"_index":1836,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:25",{"_index":1838,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:37",{"_index":1835,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:46",{"_index":1840,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:53",{"_index":1839,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:59",{"_index":1837,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/user/dto/change",{"_index":1926,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/create",{"_index":622,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/get",{"_index":2089,"title":{},"body":{"interfaces/UserQuery.html":{},"coverage.html":{}}}],["src/modules/user/dto/reset",{"_index":1786,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/update",{"_index":1957,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/models/profile.entity.ts",{"_index":1764,"title":{},"body":{"entities/Profile.html":{},"coverage.html":{}}}],["src/modules/user/models/profile.entity.ts:13",{"_index":1773,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/profile.entity.ts:16",{"_index":1772,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/profile.entity.ts:19",{"_index":1770,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/profile.entity.ts:22",{"_index":1774,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/profile.entity.ts:25",{"_index":1775,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/profile.entity.ts:28",{"_index":1769,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/profile.entity.ts:33",{"_index":1777,"title":{},"body":{"entities/Profile.html":{}}}],["src/modules/user/models/user.entity.ts",{"_index":1976,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/modules/user/models/user.entity.ts:15",{"_index":1979,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:18",{"_index":1978,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:21",{"_index":1990,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:24",{"_index":1980,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:27",{"_index":1988,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:32",{"_index":1987,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:36",{"_index":1984,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:39",{"_index":1977,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/models/user.entity.ts:46",{"_index":1989,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1996,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:115",{"_index":2022,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:127",{"_index":2013,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:135",{"_index":2036,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:156",{"_index":2028,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:167",{"_index":2033,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:182",{"_index":2031,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:196",{"_index":2041,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:211",{"_index":2039,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:53",{"_index":2016,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:59",{"_index":2019,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:86",{"_index":2025,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:99",{"_index":2011,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":2084,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":1064,"title":{},"body":{"injectables/FileDownloadService.html":{},"index.html":{}}}],["start:dev",{"_index":2321,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2323,"title":{},"body":{"index.html":{}}}],["startdiagnosis",{"_index":818,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["startdiagnosis(id",{"_index":829,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["started",{"_index":2302,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2314,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":20,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateUserDto.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"injectables/FileUploadService.html":{},"classes/HttpExceptionFilter.html":{},"entities/Task.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["status(httpstatus.internal_server_error",{"_index":1092,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["status(httpstatus.ok",{"_index":1056,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["status(httpstatus.partial_content",{"_index":1072,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["status(httpstatus.requested_range_not_satisfiable",{"_index":1069,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["status.in_progress",{"_index":978,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["status.pending",{"_index":958,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["statuscode",{"_index":87,"title":{},"body":{"entities/AiServiceAccessLog.html":{}}}],["stay",{"_index":2393,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2333,"title":{},"body":{"index.html":{}}}],["storage",{"_index":863,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["storage.service",{"_index":1207,"title":{},"body":{"modules/FileModule.html":{}}}],["storage.service.ts",{"_index":1309,"title":{},"body":{"injectables/FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":1315,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["storage.service.ts:31",{"_index":1317,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["storage.service.ts:9",{"_index":1312,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["storagefilename",{"_index":963,"title":{},"body":{"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileUploadService.html":{}}}],["straightforward",{"_index":2351,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1495,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["stream",{"_index":1246,"title":{},"body":{"injectables/FileOperationService.html":{},"miscellaneous/variables.html":{}}}],["stream.on('data",{"_index":1248,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["stream.on('end",{"_index":1250,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["stream.on('error",{"_index":1252,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["string",{"_index":42,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"interfaces/ApiResponse.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"entities/DiagnosisHistory.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":281,"title":{},"body":{"interfaces/ApiResponse.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["successfully",{"_index":1426,"title":{},"body":{"injectables/FileUploadService.html":{},"controllers/MenuController.html":{}}}],["sum(file.filesize",{"_index":1322,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["super",{"_index":408,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{}}}],["support",{"_index":2372,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":2248,"title":{},"body":{"miscellaneous/enumerations.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symptoms",{"_index":542,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["synchronize",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["synonyms",{"_index":543,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["t",{"_index":277,"title":{},"body":{"interfaces/ApiResponse.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":544,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["take",{"_index":263,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/DiagnosisService.html":{},"index.html":{}}}],["take(pagesize",{"_index":1290,"title":{},"body":{"injectables/FileService.html":{},"injectables/KnowledgeManageService.html":{}}}],["tar",{"_index":2201,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["task",{"_index":1163,"title":{"entities/Task.html":{}},"body":{"injectables/FileManageService.html":{},"modules/FileModule.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{},"coverage.html":{}}}],["task.chunkstatus",{"_index":1418,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.chunkstatus[chunkindex",{"_index":1419,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.dto",{"_index":1387,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.dto.ts",{"_index":597,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:11",{"_index":610,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:19",{"_index":613,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:27",{"_index":615,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:35",{"_index":608,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:43",{"_index":616,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.filemd5",{"_index":1459,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filename",{"_index":1457,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filesize",{"_index":1455,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filetype",{"_index":1458,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filetype.startswith('application",{"_index":1442,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filetype.startswith('audio",{"_index":1443,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filetype.startswith('image",{"_index":1440,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.filetype.startswith('video",{"_index":1441,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.id",{"_index":1424,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.status",{"_index":1413,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.totalchunks",{"_index":1438,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["task.uploadedchunks",{"_index":1422,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["taskentity",{"_index":1164,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["taskid",{"_index":463,"title":{},"body":{"classes/CompleteChunkDto.html":{},"injectables/FileUploadService.html":{},"classes/UploadChunkDto.html":{}}}],["taskmeta",{"_index":1375,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["taskrepository",{"_index":1363,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["tb",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templink",{"_index":1102,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["tensorflow",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test.jpg",{"_index":609,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["test:covdeployment",{"_index":2328,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2327,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2324,"title":{},"body":{"index.html":{}}}],["text",{"_index":43,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"entities/Dataset.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{}}}],["text/css",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text/csv",{"_index":2225,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text/html",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text/plain",{"_index":2223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thanks",{"_index":2407,"title":{},"body":{"index.html":{}}}],["this.aiservicerepository.create(dto",{"_index":256,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["this.aiservicerepository.find",{"_index":259,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["this.aiservicerepository.findone",{"_index":264,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["this.aiservicerepository.remove(aiservice",{"_index":270,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["this.aiservicerepository.save(aiservice",{"_index":258,"title":{},"body":{"injectables/AiServiceService.html":{}}}],["this.aiserviceservice.create(dto",{"_index":189,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["this.aiserviceservice.findall",{"_index":190,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["this.aiserviceservice.findone(serviceid",{"_index":195,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["this.aiserviceservice.findpaginated(page",{"_index":193,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["this.aiserviceservice.remove(serviceid",{"_index":199,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["this.aiserviceservice.update(serviceid",{"_index":197,"title":{},"body":{"controllers/AiServiceController.html":{}}}],["this.allowedtypes.includes(file.mimetype",{"_index":1353,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{}}}],["this.allowedtypes.join",{"_index":1354,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{}}}],["this.appservice.gethello",{"_index":292,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.buttonsget",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(login",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(email",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.checkfiletype(file",{"_index":1405,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.checkrepeated(file",{"_index":1404,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.computefilesizebytype(userid",{"_index":1347,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["this.createfile(userid",{"_index":1406,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.datasetrepository.create",{"_index":783,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["this.datasetrepository.createquerybuilder('dataset",{"_index":759,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["this.datasetrepository.findone",{"_index":812,"title":{},"body":{"injectables/DatasetService.html":{}}}],["this.datasetrepository.remove(dataset",{"_index":798,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["this.datasetrepository.save(dataset",{"_index":787,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["this.datasetservice.findbyid(datasetid",{"_index":789,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["this.datasource.createqueryrunner",{"_index":954,"title":{},"body":{"injectables/DiagnosisService.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["this.diagnosisrepository.find",{"_index":981,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["this.diagnosisrepository.findandcount",{"_index":984,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["this.diagnosisrepository.findone",{"_index":980,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["this.diagnosisrepository.save(diagnosis",{"_index":979,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["this.diagnosisservice.diagnosishistoryget(req.user.userid",{"_index":900,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["this.diagnosisservice.diagnosishistorylistget",{"_index":901,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["this.diagnosisservice.getdiagnosisstatus(id",{"_index":898,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["this.diagnosisservice.startdiagnosis(id",{"_index":897,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["this.diagnosisservice.uploaddata(req.user.userid",{"_index":893,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["this.filemanageservice.createfileintransaction",{"_index":961,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["this.fileoperationservice.calculatefilemd5",{"_index":959,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["this.fileoperationservice.deletefile(file.filepath",{"_index":1183,"title":{},"body":{"injectables/FileManageService.html":{}}}],["this.fileoperationservice.deletefile(file.path",{"_index":895,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["this.fileoperationservice.mergefile(chunkpath",{"_index":1450,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.fileoperationservice.readfile(file.path",{"_index":1390,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.filerepository",{"_index":1319,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["this.filerepository.create",{"_index":1166,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["this.filerepository.createquerybuilder('file",{"_index":1272,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.find",{"_index":1271,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerepository.findone",{"_index":1270,"title":{},"body":{"injectables/FileService.html":{},"injectables/FileUploadService.html":{}}}],["this.filerepository.save(filemeta",{"_index":1167,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["this.fileservice.findbyid(fileid",{"_index":1096,"title":{},"body":{"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["this.fileservice.findbyids(fileids",{"_index":786,"title":{},"body":{"injectables/DatasetManageService.html":{},"guards/FileGuard.html":{},"guards/FilesGuard.html":{},"interfaces/Request-1.html":{}}}],["this.findall",{"_index":1849,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.findone(id",{"_index":1703,"title":{},"body":{"injectables/MenuService.html":{},"injectables/RoleService.html":{}}}],["this.jwt.sign",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":1100,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["this.jwtservice.verify(token",{"_index":1107,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["this.knowledgerepository.create(dto",{"_index":1586,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["this.knowledgerepository.createquerybuilder",{"_index":1563,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["this.knowledgerepository.delete(id",{"_index":1570,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["this.knowledgerepository.find",{"_index":1562,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["this.knowledgerepository.findone",{"_index":1587,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["this.knowledgerepository.merge(knowledge",{"_index":1589,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["this.knowledgerepository.save(knowledge",{"_index":1569,"title":{},"body":{"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{}}}],["this.knowledgerepository.save(updatedknowledge",{"_index":1590,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["this.knowledgeservice.create(dto",{"_index":1561,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["this.knowledgeservice.findbyid(id",{"_index":1567,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["this.manageservice.createdataset(req.user.userid",{"_index":730,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.manageservice.datasetslistget(page",{"_index":727,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.manageservice.deletedataset(datasetid",{"_index":737,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.manageservice.getdatasetdetail(datasetid",{"_index":733,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.manageservice.knowledgecreate(dto",{"_index":1535,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["this.manageservice.knowledgedelete(id",{"_index":1545,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["this.manageservice.knowledgedetailget(id",{"_index":1540,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["this.manageservice.knowledgeget",{"_index":1536,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["this.manageservice.knowledgelistget(page",{"_index":1538,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["this.manageservice.knowledgeupdate(id",{"_index":1542,"title":{},"body":{"controllers/KnowledgeController.html":{}}}],["this.manageservice.updatedataset(datasetid",{"_index":734,"title":{},"body":{"controllers/DatasetController.html":{}}}],["this.maxsize",{"_index":1305,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["this.menurepository.create(menudata",{"_index":1700,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.delete(id",{"_index":1704,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.find",{"_index":1687,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.findone",{"_index":1699,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.save(menu",{"_index":1701,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menurepository.update(id",{"_index":1702,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menuservice.create(menudata",{"_index":1661,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findall",{"_index":1657,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findauthroutes(user.id",{"_index":1653,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.findone(id",{"_index":1658,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.remove(id",{"_index":1666,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.update(id",{"_index":1664,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1865,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.rolerepository.create(dto",{"_index":1845,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.find",{"_index":1842,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone",{"_index":1843,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.remove(role",{"_index":1848,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(role",{"_index":1846,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.create(dto",{"_index":1820,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findall",{"_index":1818,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.finddict",{"_index":1817,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findone(id",{"_index":1819,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.remove(id",{"_index":1823,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":1822,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.taskrepository.findone",{"_index":1463,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.userservice.getavatar(req.user.userid",{"_index":2063,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.profileget(req.user.userid",{"_index":2051,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.profileupdate(req.user.userid",{"_index":2052,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setroles(user",{"_index":2073,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateavatar(req.user.userid",{"_index":2060,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword",{"_index":2066,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.usercreate(user",{"_index":2074,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userdelete(id",{"_index":2076,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userget(id",{"_index":2075,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userlistget(page",{"_index":2071,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userreset(id",{"_index":2079,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userupdate(id",{"_index":2077,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findbyemail(email",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbylogin(login",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.usercreate",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["three_gp",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throw",{"_index":265,"title":{},"body":{"injectables/AiServiceService.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"interfaces/Request-1.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["tiff",{"_index":2244,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":2386,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":38,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"controllers/AppController.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/TypeormFilter.html":{},"miscellaneous/enumerations.html":{}}}],["tinyint",{"_index":1771,"title":{},"body":{"entities/Profile.html":{},"entities/User.html":{}}}],["title",{"_index":1613,"title":{},"body":{"entities/Menu.html":{},"injectables/MenuService.html":{}}}],["toclassonly",{"_index":989,"title":{},"body":{"classes/DownloadFilesDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["todo",{"_index":896,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/MenuService.html":{}}}],["token",{"_index":1042,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["total",{"_index":781,"title":{},"body":{"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/KnowledgeManageService.html":{}}}],["totalchunks",{"_index":602,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["totalsize",{"_index":778,"title":{},"body":{"injectables/DatasetManageService.html":{}}}],["touch",{"_index":2414,"title":{},"body":{"index.html":{}}}],["transform",{"_index":498,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/DownloadFilesDto.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["transform(file",{"_index":1297,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{},"injectables/FileTypeValidationPipe.html":{}}}],["transform(value",{"_index":1707,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{}}}],["transformer",{"_index":470,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateDatasetDto.html":{},"classes/DownloadFilesDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UploadChunkDto.html":{},"dependencies.html":{}}}],["true",{"_index":45,"title":{},"body":{"entities/AiService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateDatasetDto.html":{},"entities/Dataset.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"classes/DownloadFilesDto.html":{},"guards/FileGuard.html":{},"injectables/FileOperationService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"interfaces/Request-1.html":{},"entities/Role.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["true})@apiproperty({description",{"_index":991,"title":{},"body":{"classes/DownloadFilesDto.html":{}}}],["true})@isint({each",{"_index":990,"title":{},"body":{"classes/DownloadFilesDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["try",{"_index":892,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"controllers/MenuController.html":{}}}],["ttf",{"_index":2229,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":2420,"title":{},"body":{"index.html":{}}}],["txt",{"_index":2222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":22,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"controllers/AiServiceController.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{},"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"entities/File.html":{},"injectables/FileDownloadService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileSizeValidationPipe.html":{},"injectables/FileStorageService.html":{},"injectables/FileTypeValidationPipe.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"classes/LoginDto.html":{},"entities/Menu.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"classes/RegisterDto.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/ResetPasswordDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(undefined)@apiproperty({description",{"_index":1972,"title":{},"body":{"classes/UploadChunkDto.html":{}}}],["type.pipe",{"_index":854,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["type.pipe.ts",{"_index":1348,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{},"coverage.html":{}}}],["type.pipe.ts:5",{"_index":1350,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{}}}],["type.pipe.ts:8",{"_index":1352,"title":{},"body":{"injectables/FileTypeValidationPipe.html":{}}}],["typealiases",{"_index":2431,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":508,"title":{},"body":{"classes/CreateDatasetDto.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"classes/UpdateDatasetDto.html":{}}}],["typeorm",{"_index":68,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceAccessLog.html":{},"entities/AiServiceConfig.html":{},"entities/AiServiceLog.html":{},"injectables/AiServiceService.html":{},"entities/Dataset.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"entities/Menu.html":{},"injectables/MenuService.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"entities/Task.html":{},"classes/TypeormFilter.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormerror",{"_index":1890,"title":{},"body":{"classes/TypeormFilter.html":{}}}],["typeormfilter",{"_index":372,"title":{"classes/TypeormFilter.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"classes/TypeormFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["typeormmodule",{"_index":226,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":230,"title":{},"body":{"modules/AiServiceModule.html":{}}}],["typeormmodule.forfeature([dataset",{"_index":805,"title":{},"body":{"modules/DatasetModule.html":{}}}],["typeormmodule.forfeature([diagnosishistory",{"_index":935,"title":{},"body":{"modules/DiagnosisModule.html":{}}}],["typeormmodule.forfeature([file",{"_index":1208,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([menu",{"_index":1672,"title":{},"body":{"modules/MenuModule.html":{}}}],["typeormmodule.forfeature([plantdiseaseknowledge",{"_index":1576,"title":{},"body":{"modules/KnowledgeModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":1829,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2087,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":2313,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":61,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceLog.html":{},"classes/CreateDatasetDto.html":{},"classes/CreateUserDto.html":{},"entities/Dataset.html":{},"injectables/DatasetManageService.html":{},"classes/DownloadFilesDto.html":{},"injectables/ParseFileTypePipe.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdateUserDto.html":{}}}],["under_maintenance",{"_index":59,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["under_maintenance'])@isoptional()@apiproperty({description",{"_index":485,"title":{},"body":{"classes/CreateAiServiceDto.html":{},"classes/UpdateAiServiceDto.html":{}}}],["unique",{"_index":76,"title":{},"body":{"entities/AiService.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["uniquename",{"_index":883,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["uniqueprefix",{"_index":2057,"title":{},"body":{"controllers/UserController.html":{}}}],["uniqueprefix}${fileextension",{"_index":2059,"title":{},"body":{"controllers/UserController.html":{}}}],["unit",{"_index":2325,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":146,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/DatasetService.html":{},"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{},"injectables/FileDownloadService.html":{},"injectables/FileManageService.html":{},"injectables/FileOperationService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["unlicensed",{"_index":2430,"title":{},"body":{"properties.html":{}}}],["unlink",{"_index":1226,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["unlink(filepath",{"_index":1229,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["unlinksync",{"_index":1302,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["unlinksync(file.path",{"_index":1307,"title":{},"body":{"injectables/FileSizeValidationPipe.html":{}}}],["update",{"_index":132,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["update(id",{"_index":1584,"title":{},"body":{"injectables/KnowledgeService.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["update(serviceid",{"_index":155,"title":{},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{}}}],["updateaiservicedto",{"_index":156,"title":{"classes/UpdateAiServiceDto.html":{}},"body":{"controllers/AiServiceController.html":{},"injectables/AiServiceService.html":{},"classes/UpdateAiServiceDto.html":{},"coverage.html":{}}}],["updated",{"_index":1665,"title":{},"body":{"controllers/MenuController.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["updatedataset",{"_index":689,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["updatedataset(datasetid",{"_index":708,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{}}}],["updatedatasetdto",{"_index":709,"title":{"classes/UpdateDatasetDto.html":{}},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"classes/UpdateDatasetDto.html":{},"coverage.html":{}}}],["updatedby",{"_index":657,"title":{},"body":{"entities/Dataset.html":{},"injectables/DatasetManageService.html":{},"entities/DiagnosisHistory.html":{},"injectables/DiagnosisService.html":{},"entities/File.html":{},"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["updatedend",{"_index":698,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileService.html":{}}}],["updatedknowledge",{"_index":1588,"title":{},"body":{"injectables/KnowledgeService.html":{}}}],["updatedmenu",{"_index":1663,"title":{},"body":{"controllers/MenuController.html":{}}}],["updatedrole",{"_index":1821,"title":{},"body":{"controllers/RoleController.html":{}}}],["updatedstart",{"_index":697,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"injectables/FileService.html":{}}}],["updatedto",{"_index":1555,"title":{},"body":{"injectables/KnowledgeManageService.html":{}}}],["updatefile",{"_index":1139,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["updatefile(userid",{"_index":1155,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["updatefiledto",{"_index":1156,"title":{"classes/UpdateFileDto.html":{}},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"coverage.html":{}}}],["updatefileintransaction",{"_index":1140,"title":{},"body":{"injectables/FileManageService.html":{}}}],["updatefileintransaction(userid",{"_index":1158,"title":{},"body":{"injectables/FileManageService.html":{}}}],["updatefilesaccess",{"_index":1141,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["updatefilesaccess(userid",{"_index":1159,"title":{},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{}}}],["updatefilesaccessdto",{"_index":1160,"title":{"classes/UpdateFilesAccessDto.html":{}},"body":{"injectables/FileManageService.html":{},"injectables/FileUploadService.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"coverage.html":{}}}],["updatepassword",{"_index":2001,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(req",{"_index":2020,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassworddto",{"_index":1925,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"classes/UpdatePasswordDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updatepassworddto.confirmpassword",{"_index":2067,"title":{},"body":{"controllers/UserController.html":{}}}],["updateplantdiseaseknowledgedto",{"_index":1527,"title":{"classes/UpdatePlantDiseaseKnowledgeDto.html":{}},"body":{"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/KnowledgeService.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":1956,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1811,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":2395,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":1968,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["upload.service",{"_index":1206,"title":{},"body":{"modules/FileModule.html":{}}}],["upload.service.ts",{"_index":1355,"title":{},"body":{"injectables/FileUploadService.html":{},"coverage.html":{}}}],["upload.service.ts:127",{"_index":1385,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:163",{"_index":1383,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:217",{"_index":1376,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:23",{"_index":1364,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:299",{"_index":1370,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:35",{"_index":1368,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:396",{"_index":1378,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:45",{"_index":1366,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:52",{"_index":1372,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:71",{"_index":1379,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["upload.service.ts:95",{"_index":1380,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadavatar",{"_index":2002,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadavatar(req",{"_index":2023,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadchunk",{"_index":1361,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadchunk(taskid",{"_index":1381,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadchunkdto",{"_index":1969,"title":{"classes/UploadChunkDto.html":{}},"body":{"classes/UploadChunkDto.html":{},"coverage.html":{}}}],["uploaddata",{"_index":819,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/DiagnosisService.html":{}}}],["uploaddata(req",{"_index":832,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["uploaddata(userid",{"_index":948,"title":{},"body":{"injectables/DiagnosisService.html":{}}}],["uploaded",{"_index":1421,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadedchunks",{"_index":1434,"title":{},"body":{"injectables/FileUploadService.html":{},"entities/Task.html":{}}}],["uploadedfile",{"_index":836,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["uploading",{"_index":1435,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploads/audio",{"_index":878,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["uploads/avatar",{"_index":2056,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads/documents",{"_index":876,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["uploads/images",{"_index":872,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["uploads/other",{"_index":867,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["uploads/videos",{"_index":874,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{}}}],["uploadsingle",{"_index":1362,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadsingle(userid",{"_index":1384,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["url",{"_index":80,"title":{},"body":{"entities/AiService.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["used",{"_index":1323,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["usefactory",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{}}}],["usefilters",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["usefilters(typeormfilter",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["useguards",{"_index":172,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":184,"title":{},"body":{"controllers/AiServiceController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DatasetController.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard)@get('speed",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(rolesguard",{"_index":1655,"title":{},"body":{"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["usehooks",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["useinterceptors",{"_index":837,"title":{},"body":{"controllers/DiagnosisController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":407,"title":{"entities/User.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/MenuController.html":{},"entities/Profile.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"interfaces/UserPayload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.controller",{"_index":2085,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":2045,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":623,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserQuery.html":{},"coverage.html":{}}}],["user.dto.ts:22",{"_index":627,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:31",{"_index":646,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:40",{"_index":633,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:48",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:57",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:66",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.entity",{"_index":1779,"title":{},"body":{"entities/Profile.html":{}}}],["user.id",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles",{"_index":1796,"title":{},"body":{"entities/Role.html":{}}}],["user.roles.map((role",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles?.includes(role",{"_index":1869,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.service",{"_index":2048,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.status",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/models/user.entity",{"_index":1798,"title":{},"body":{"entities/Role.html":{}}}],["user/user.module",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":1373,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["usercontroller",{"_index":1995,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreate",{"_index":2003,"title":{},"body":{"controllers/UserController.html":{}}}],["usercreate(@body",{"_index":2072,"title":{},"body":{"controllers/UserController.html":{}}}],["usercreate(createuserdto",{"_index":2026,"title":{},"body":{"controllers/UserController.html":{}}}],["userdelete",{"_index":2004,"title":{},"body":{"controllers/UserController.html":{}}}],["userdelete(id",{"_index":2029,"title":{},"body":{"controllers/UserController.html":{}}}],["userget",{"_index":2005,"title":{},"body":{"controllers/UserController.html":{}}}],["userget(id",{"_index":2032,"title":{},"body":{"controllers/UserController.html":{}}}],["userid",{"_index":88,"title":{},"body":{"entities/AiServiceAccessLog.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DatasetManageService.html":{},"injectables/DiagnosisService.html":{},"guards/FileGuard.html":{},"injectables/FileManageService.html":{},"injectables/FileService.html":{},"injectables/FileStorageService.html":{},"injectables/FileUploadService.html":{},"guards/FilesGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/UserPayload.html":{}}}],["userlistget",{"_index":2006,"title":{},"body":{"controllers/UserController.html":{}}}],["userlistget(page",{"_index":2034,"title":{},"body":{"controllers/UserController.html":{}}}],["usermodule",{"_index":308,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserPayload.html":{},"interfaces/UserQuery.html":{}}}],["userpayload",{"_index":401,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/UserPayload.html":{},"coverage.html":{}}}],["userquery",{"_index":2088,"title":{"interfaces/UserQuery.html":{}},"body":{"interfaces/UserQuery.html":{},"coverage.html":{}}}],["userreset",{"_index":2007,"title":{},"body":{"controllers/UserController.html":{}}}],["userreset(id",{"_index":2037,"title":{},"body":{"controllers/UserController.html":{}}}],["users",{"_index":1790,"title":{},"body":{"entities/Role.html":{},"injectables/RoleService.html":{}}}],["users_roles",{"_index":1986,"title":{},"body":{"entities/User.html":{}}}],["userservice",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["userstatus",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userupdate",{"_index":2008,"title":{},"body":{"controllers/UserController.html":{}}}],["userupdate(id",{"_index":2040,"title":{},"body":{"controllers/UserController.html":{}}}],["using",{"_index":2387,"title":{},"body":{"index.html":{}}}],["utf",{"_index":887,"title":{},"body":{"controllers/DiagnosisController.html":{}}}],["uuid",{"_index":849,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":848,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["uuidv4()}${fileextension",{"_index":1447,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["v4",{"_index":847,"title":{},"body":{"controllers/DiagnosisController.html":{},"injectables/FileUploadService.html":{},"controllers/UserController.html":{}}}],["validate",{"_index":1489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":1491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":1602,"title":{},"body":{"classes/LoginDto.html":{}}}],["validateif((o",{"_index":1603,"title":{},"body":{"classes/LoginDto.html":{}}}],["validateif(o",{"_index":1592,"title":{},"body":{"classes/LoginDto.html":{}}}],["validator",{"_index":473,"title":{},"body":{"classes/CompleteChunkDto.html":{},"classes/CreateAiServiceDto.html":{},"classes/CreateDatasetDto.html":{},"classes/CreatePlantDiseaseKnowledgeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTempLinkDto.html":{},"classes/CreateUserDto.html":{},"classes/DownloadFilesDto.html":{},"classes/LoginDto.html":{},"injectables/ParseStringDatePipe.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateAiServiceDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadChunkDto.html":{},"dependencies.html":{}}}],["value",{"_index":507,"title":{},"body":{"classes/CreateDatasetDto.html":{},"controllers/DatasetController.html":{},"injectables/DiagnosisService.html":{},"classes/DownloadFilesDto.html":{},"injectables/FileService.html":{},"controllers/KnowledgeController.html":{},"injectables/KnowledgeManageService.html":{},"injectables/ParseFileIdsPipe.html":{},"injectables/ParseFileTypePipe.html":{},"injectables/ParseStringDatePipe.html":{},"injectables/RoleService.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.includes",{"_index":509,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["value.map((id",{"_index":1716,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{}}}],["value.map((item",{"_index":513,"title":{},"body":{"classes/CreateDatasetDto.html":{},"injectables/ParseFileTypePipe.html":{},"classes/UpdateDatasetDto.html":{}}}],["value.map((v",{"_index":993,"title":{},"body":{"classes/DownloadFilesDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateFilesAccessDto.html":{}}}],["value.split(',').map((id",{"_index":1711,"title":{},"body":{"injectables/ParseFileIdsPipe.html":{}}}],["value.split(',').map((item",{"_index":510,"title":{},"body":{"classes/CreateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["varchar",{"_index":47,"title":{},"body":{"entities/AiService.html":{},"entities/AiServiceConfig.html":{},"entities/Dataset.html":{},"entities/DiagnosisHistory.html":{},"entities/File.html":{},"entities/Menu.html":{},"entities/PlantDiseaseKnowledge.html":{},"entities/Profile.html":{},"entities/Role.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["variable",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2435,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyaccesslink",{"_index":1026,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["verifyaccesslink(token",{"_index":1040,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["version",{"_index":997,"title":{},"body":{"entities/File.html":{},"injectables/FileUploadService.html":{},"entities/Task.html":{},"properties.html":{}}}],["versioncolumn",{"_index":1886,"title":{},"body":{"entities/Task.html":{}}}],["video",{"_index":1342,"title":{},"body":{"injectables/FileStorageService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["video/3gpp",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["video/avi",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mp4",{"_index":2255,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["video/mpeg",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["video/ogg",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["video/quicktime",{"_index":2260,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["video/webm",{"_index":2266,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["video/x",{"_index":2257,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["videotypes",{"_index":1331,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["videotypevalue",{"_index":2104,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["videourl",{"_index":545,"title":{},"body":{"classes/CreatePlantDiseaseKnowledgeDto.html":{},"entities/PlantDiseaseKnowledge.html":{},"classes/UpdatePlantDiseaseKnowledgeDto.html":{}}}],["visit",{"_index":2369,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2382,"title":{},"body":{"index.html":{}}}],["void",{"_index":1475,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/KnowledgeController.html":{},"classes/TypeormFilter.html":{}}}],["warning",{"_index":205,"title":{},"body":{"entities/AiServiceLog.html":{}}}],["watch",{"_index":2320,"title":{},"body":{"index.html":{}}}],["wav",{"_index":2183,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":2172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["webm",{"_index":2265,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["webp",{"_index":2246,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["website",{"_index":2418,"title":{},"body":{"index.html":{}}}],["weights",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["where('file.createdby",{"_index":1326,"title":{},"body":{"injectables/FileStorageService.html":{}}}],["wma",{"_index":2193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wmv",{"_index":2261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["woff",{"_index":2233,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["woff2",{"_index":2235,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["word",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wordopenxml",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":2368,"title":{},"body":{"index.html":{}}}],["world",{"_index":355,"title":{},"body":{"injectables/AppService.html":{}}}],["writestream",{"_index":1235,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["writestream.on('error",{"_index":1243,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["writestream.on('finish",{"_index":1242,"title":{},"body":{"injectables/FileOperationService.html":{}}}],["x",{"_index":2397,"title":{},"body":{"index.html":{}}}],["xls",{"_index":2211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xlsx",{"_index":2214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xml",{"_index":2227,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["xmsvideo",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xzip",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":700,"title":{},"body":{"controllers/DatasetController.html":{},"injectables/DatasetManageService.html":{},"controllers/DiagnosisController.html":{},"controllers/KnowledgeController.html":{},"controllers/UserController.html":{}}}],["you'd",{"_index":2411,"title":{},"body":{"index.html":{}}}],["you're",{"_index":2329,"title":{},"body":{"index.html":{}}}],["z0",{"_index":1595,"title":{},"body":{"classes/LoginDto.html":{}}}],["za",{"_index":1594,"title":{},"body":{"classes/LoginDto.html":{}}}],["zip",{"_index":1036,"title":{},"body":{"injectables/FileDownloadService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["zip.append(createreadstream(filepath",{"_index":1087,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["zip.finalize",{"_index":1089,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["zip.on('error",{"_index":1090,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["zip.pipe(res",{"_index":1086,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["zipfilename",{"_index":1079,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["zlib",{"_index":1082,"title":{},"body":{"injectables/FileDownloadService.html":{}}}],["zoom",{"_index":222,"title":{},"body":{"modules/AiServiceModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetModule.html":{},"modules/DiagnosisModule.html":{},"modules/FileModule.html":{},"modules/KnowledgeModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AiService.html":{"url":"entities/AiService.html","title":"entity - AiService","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/models/ai-service.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aiServiceAccessLogs\n                            \n                            \n                                    \n                                aiServiceConfigs\n                            \n                            \n                                    \n                                aiServiceLogs\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endpointUrl\n                            \n                            \n                                    \n                                serviceId\n                            \n                            \n                                    \n                                serviceName\n                            \n                            \n                                    \n                                serviceType\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aiServiceAccessLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiServiceAccessLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, aiServiceAccessLog => aiServiceAccessLog.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aiServiceConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiServiceConfig[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, aiServiceConfig => aiServiceConfig.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aiServiceLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiServiceLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, aiServiceLog => aiServiceLog.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"active\" | \"inactive\" | \"under_maintenance\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: undefined, default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { AiServiceAccessLog } from './ai-service-access-log';\nimport { AiServiceConfig } from './ai-service-config';\nimport { AiServiceLog } from './ai-service-log';\n\n@Entity('ai_services')\n@Index('serviceNameIdx', ['serviceName'], { unique: true }) // 为 serviceName 添加索引（可选）\nexport class AiService {\n  @PrimaryGeneratedColumn()\n  serviceId: number; // 服务ID\n\n  @Column({ type: 'varchar', length: 255 })\n  serviceName: string; // 服务名称\n\n  @Column({ type: 'varchar', length: 100, nullable: true })\n  serviceType: string; // 服务类型\n\n  @Column({ type: 'text', nullable: true })\n  description: string; // 服务描述\n\n  @Column({\n    type: 'enum',\n    enum: ['active', 'inactive', 'under_maintenance'],\n    default: 'active',\n  })\n  status: 'active' | 'inactive' | 'under_maintenance'; // 服务状态\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  endpointUrl: string; // 服务的访问URL\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n\n  @OneToMany(() => AiServiceLog, (aiServiceLog) => aiServiceLog.service)\n  aiServiceLogs: AiServiceLog[]; // 一对多关系\n\n  @OneToMany(\n    () => AiServiceConfig,\n    (aiServiceConfig) => aiServiceConfig.service,\n  )\n  aiServiceConfigs: AiServiceConfig[]; // 一对多关系\n\n  @OneToMany(\n    () => AiServiceAccessLog,\n    (aiServiceAccessLog) => aiServiceAccessLog.service,\n  )\n  aiServiceAccessLogs: AiServiceAccessLog[]; // 一对多关系\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AiServiceAccessLog.html":{"url":"entities/AiServiceAccessLog.html","title":"entity - AiServiceAccessLog","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AiServiceAccessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/models/ai-service-access-log.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessId\n                            \n                            \n                                    \n                                accessTime\n                            \n                            \n                                    \n                                responseTime\n                            \n                            \n                                    \n                                    \n                                service\n                            \n                            \n                                    \n                                statusCode\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-access-log.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-access-log.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        responseTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-access-log.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, aiService => aiService.aiServiceAccessLogs)@JoinColumn({name: 'serviceId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-access-log.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-access-log.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-access-log.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_service_access_logs')\nexport class AiServiceAccessLog {\n  @PrimaryGeneratedColumn()\n  accessId: number; // 访问记录ID\n\n  @ManyToOne(() => AiService, (aiService) => aiService.aiServiceAccessLogs)\n  @JoinColumn({ name: 'serviceId' })\n  service: AiService; // 外键，关联AI服务表\n\n  @Column({ name: 'userId' })\n  userId: number; // 用户ID（如果需要）\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  accessTime: Date; // 访问时间\n\n  @Column({ type: 'int' })\n  responseTime: number; // 响应时间（毫秒）\n\n  @Column({ type: 'int' })\n  statusCode: number; // HTTP 状态码\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AiServiceConfig.html":{"url":"entities/AiServiceConfig.html","title":"entity - AiServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AiServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/models/ai-service-config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                configId\n                            \n                            \n                                    \n                                configKey\n                            \n                            \n                                    \n                                configValue\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                service\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        configId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-config.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        configKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-config.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        configValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-config.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-config.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, aiService => aiService.aiServiceConfigs)@JoinColumn({name: 'serviceId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-config.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-config.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_service_configs')\nexport class AiServiceConfig {\n  @PrimaryGeneratedColumn()\n  configId: number; // 配置ID\n\n  @ManyToOne(() => AiService, (aiService) => aiService.aiServiceConfigs)\n  @JoinColumn({ name: 'serviceId' })\n  service: AiService; // 外键，关联AI服务表\n\n  @Column({ type: 'varchar', length: 255 })\n  configKey: string; // 配置项键名\n\n  @Column({ type: 'text' })\n  configValue: string; // 配置项值\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AiServiceController.html":{"url":"controllers/AiServiceController.html","title":"controller - AiServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AiServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/ai-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ai-service\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                findPaginated\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateAiServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/ai-service/ai-service.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/ai-service/ai-service.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(serviceId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':serviceId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/ai-service/ai-service.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPaginated(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/ai-service/ai-service.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(serviceId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':serviceId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/ai-service/ai-service.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(serviceId: number, updateAiServiceDto: UpdateAiServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':serviceId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/ai-service/ai-service.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAiServiceDto\n                                            \n                                                            UpdateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@/common/decorator/roles.decorator';\nimport { Role } from '@/common/enum/role.enum';\nimport { AuthGuard } from '@/common/guards/auth.guard';\nimport { RolesGuard } from '@/common/guards/roles.guard';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateAiServiceDto } from './dto/create-ai-service.dto';\nimport { UpdateAiServiceDto } from './dto/update-ai-service.dto';\nimport { AiService } from './models/ai-service.entity';\nimport { AiServiceService } from './services/ai-service.service';\n\n@Controller('ai-service')\n@Roles(Role.Admin, Role.Expert)\n@UseGuards(AuthGuard, RolesGuard)\nexport class AiServiceController {\n  constructor(private readonly aiServiceService: AiServiceService) {}\n\n  // 创建AI服务\n  @Post()\n  async create(@Body() dto: CreateAiServiceDto): Promise {\n    return this.aiServiceService.create(dto);\n  }\n\n  // 获取全部AI服务\n  @Get()\n  async findAll(): Promise {\n    return this.aiServiceService.findAll();\n  }\n\n  // 分页查询AI服务\n  @Get('list')\n  async findPaginated(\n    @Query('page') page: number,\n    @Query('pageSize') pageSize: number,\n  ): Promise {\n    return this.aiServiceService.findPaginated(page, pageSize);\n  }\n\n  // 获取单个AI服务\n  @Get(':serviceId')\n  async findOne(@Param('serviceId') serviceId: number) {\n    return this.aiServiceService.findOne(serviceId);\n  }\n\n  // 更新AI服务\n  @Put(':serviceId')\n  async update(\n    @Param('serviceId') serviceId: number,\n    @Body() updateAiServiceDto: UpdateAiServiceDto,\n  ): Promise {\n    return this.aiServiceService.update(serviceId, updateAiServiceDto);\n  }\n\n  // 删除AI服务\n  @Delete(':serviceId')\n  async remove(@Param('serviceId') serviceId: number): Promise {\n    return this.aiServiceService.remove(serviceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AiServiceLog.html":{"url":"entities/AiServiceLog.html","title":"entity - AiServiceLog","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AiServiceLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/models/ai-service-log.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                logId\n                            \n                            \n                                    \n                                logType\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                    \n                                service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-log.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-log.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"info\" | \"error\" | \"warning\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: undefined, default: 'info'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-log.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-log.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, aiService => aiService.aiServiceLogs)@JoinColumn({name: 'serviceId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/models/ai-service-log.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_service_logs')\nexport class AiServiceLog {\n  @PrimaryGeneratedColumn()\n  logId: number; // 日志ID\n\n  @ManyToOne(() => AiService, (aiService) => aiService.aiServiceLogs)\n  @JoinColumn({ name: 'serviceId' })\n  service: AiService; // 外键，关联AI服务表\n\n  @Column({\n    type: 'enum',\n    enum: ['info', 'error', 'warning'],\n    default: 'info',\n  })\n  logType: 'info' | 'error' | 'warning'; // 日志类型\n\n  @Column({ type: 'text' })\n  message: string; // 日志信息\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date; // 日志生成时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AiServiceModule.html":{"url":"modules/AiServiceModule.html","title":"module - AiServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    AiServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiServiceModule\n\n\n\ncluster_AiServiceModule_providers\n\n\n\n\nAiServiceService\n\nAiServiceService\n\n\n\nAiServiceModule\n\nAiServiceModule\n\nAiServiceModule -->\n\nAiServiceService->AiServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/ai-service/ai-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AiServiceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AiServiceController } from './ai-service.controller';\nimport { AiServiceAccessLog } from './models/ai-service-access-log';\nimport { AiServiceConfig } from './models/ai-service-config';\nimport { AiServiceLog } from './models/ai-service-log';\nimport { AiService } from './models/ai-service.entity';\nimport { AiServiceService } from './services/ai-service.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      AiService,\n      AiServiceAccessLog,\n      AiServiceConfig,\n      AiServiceLog,\n    ]),\n  ],\n  providers: [AiServiceService],\n  controllers: [AiServiceController],\n})\nexport class AiServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiServiceService.html":{"url":"injectables/AiServiceService.html","title":"injectable - AiServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/services/ai-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPaginated\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(aiServiceRepository: Repository, aiServiceLogRepository: Repository, aiServiceConfigRepository: Repository, aiServiceAccessLogRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/ai-service/services/ai-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiServiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceConfigRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceAccessLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateAiServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/ai-service/services/ai-service.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/ai-service/services/ai-service.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/ai-service/services/ai-service.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPaginated(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/ai-service/services/ai-service.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/ai-service/services/ai-service.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(serviceId: number, dto: UpdateAiServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/ai-service/services/ai-service.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAiServiceDto } from '../dto/create-ai-service.dto';\nimport { UpdateAiServiceDto } from '../dto/update-ai-service.dto';\nimport { AiServiceAccessLog } from '../models/ai-service-access-log';\nimport { AiServiceConfig } from '../models/ai-service-config';\nimport { AiServiceLog } from '../models/ai-service-log';\nimport { AiService } from '../models/ai-service.entity';\n\n@Injectable()\nexport class AiServiceService {\n  constructor(\n    @InjectRepository(AiService)\n    private aiServiceRepository: Repository,\n\n    @InjectRepository(AiServiceLog)\n    private aiServiceLogRepository: Repository,\n\n    @InjectRepository(AiServiceConfig)\n    private aiServiceConfigRepository: Repository,\n\n    @InjectRepository(AiServiceAccessLog)\n    private aiServiceAccessLogRepository: Repository,\n  ) {}\n\n  // 创建AI服务\n  async create(dto: CreateAiServiceDto): Promise {\n    const aiService = this.aiServiceRepository.create(dto);\n    return await this.aiServiceRepository.save(aiService);\n  }\n\n  // 获取全部AI服务\n  async findAll(): Promise {\n    return this.aiServiceRepository.find({\n      relations: ['aiServiceLogs', 'aiServiceConfigs', 'aiServiceAccessLogs'], // 加载关联的表\n    });\n  }\n\n  // 分页查询AI服务\n  async findPaginated(page: number, pageSize: number): Promise {\n    const skip = (page - 1) * pageSize;\n    return this.aiServiceRepository.find({\n      relations: ['aiServiceLogs', 'aiServiceConfigs', 'aiServiceAccessLogs'],\n      skip,\n      take: pageSize,\n    });\n  }\n\n  // 获取单个AI服务\n  async findOne(serviceId: number) {\n    return this.aiServiceRepository.findOne({\n      where: { serviceId },\n      relations: ['aiServiceLogs', 'aiServiceConfigs', 'aiServiceAccessLogs'],\n    });\n  }\n\n  // 更新AI服务\n  async update(serviceId: number, dto: UpdateAiServiceDto): Promise {\n    const aiService = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n    });\n    if (!aiService) {\n      throw new Error('AI Service not found');\n    }\n\n    Object.assign(aiService, dto);\n    return this.aiServiceRepository.save(aiService);\n  }\n\n  // 删除AI服务\n  async remove(serviceId: number): Promise {\n    const aiService = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n    });\n    if (!aiService) {\n      throw new Error('AI Service not found');\n    }\n\n    await this.aiServiceRepository.remove(aiService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/response.helper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  code: number;\n  data: T | null;\n  message: string;\n}\n\nexport const formatResponse = (\n  code: number = 200,\n  data: T | null = null,\n  message: string = 'Success',\n): ApiResponse => {\n  return { code, data, message };\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/app.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTimestamp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTimestamp()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('speed-test')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthGuard } from '@/common/guards/auth.guard';\nimport { Controller, Get, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('speed-test')\n  async getTimestamp(): Promise {\n    const timestamp = Date.now();\n    // 返回响应给前端，包含一个时间戳，前端可以根据时间戳计算响应延时\n    return {\n      message: 'Speed test successful',\n      timestamp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAiServiceModule\n\nAiServiceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiServiceModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatasetModule\n\nDatasetModule\n\nAppModule -->\n\nDatasetModule->AppModule\n\n\n\n\n\nDiagnosisModule\n\nDiagnosisModule\n\nAppModule -->\n\nDiagnosisModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nKnowledgeModule\n\nKnowledgeModule\n\nAppModule -->\n\nKnowledgeModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            根模块\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AiServiceModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DatasetModule\n                        \n                        \n                            DiagnosisModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            KnowledgeModule\n                        \n                        \n                            MenuModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigEnum } from 'src/common/enum/config.enum';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { DatasetModule } from './dataset/dataset.module';\nimport { DiagnosisModule } from './diagnosis/diagnosis.module';\nimport { FileModule } from './file/file.module';\nimport { KnowledgeModule } from './knowledge/knowledge.module';\nimport { MenuModule } from './menu/menu.module';\nimport { RoleModule } from './role/role.module';\nimport { UserModule } from './user/user.module';\nimport { AiServiceModule } from './ai-service/ai-service.module';\n\n/**\n * 根模块\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: [\n        '.env',\n        `.env.${process.env.NODE_ENV || 'development'}.local`,\n      ],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) =>\n        ({\n          type: configService.get(ConfigEnum.DB_TYPE),\n          host: configService.get(ConfigEnum.DB_HOST),\n          port: configService.get(ConfigEnum.DB_PORT),\n          username: configService.get(ConfigEnum.DB_USERNAME),\n          password: configService.get(ConfigEnum.DB_PASSWORD),\n          database: configService.get(ConfigEnum.DB_DATABASE),\n          autoLoadEntities: true, // 自动加载实体\n          synchronize: configService.get(ConfigEnum.DB_SYNC),\n          logging: process.env.NODE_ENV === 'development',\n        }) as TypeOrmModuleOptions,\n    }),\n    AuthModule,\n    UserModule,\n    RoleModule,\n    FileModule,\n    DatasetModule,\n    MenuModule,\n    KnowledgeModule,\n    DiagnosisModule,\n    AiServiceModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                buttonsGet\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        buttonsGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    buttonsGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('buttons')@UseGuards(AuthGuard)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(dto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { TypeormFilter } from '@/common/filters/typeorm.filter';\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { AuthGuard } from '@/common/guards/auth.guard';\n@Controller('auth')\n@UseFilters(TypeormFilter)\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  @HttpCode(HttpStatus.CREATED)\n  async register(@Body() dto: RegisterDto) {\n    const { email, password } = dto;\n    return this.authService.register(email, password);\n  }\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  async login(@Body() dto: LoginDto) {\n    const { login, password } = dto;\n    return this.authService.login(login, password);\n  }\n\n  @Get('buttons')\n  @UseGuards(AuthGuard)\n  @HttpCode(HttpStatus.OK)\n  async buttonsGet() {\n    return this.authService.buttonsGet();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportAuthGuard('jwt')\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/auth.guard.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport interface UserPayload {\n  userId: number;\n  roles: string[];\n  username?: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserPayload;\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigEnum } from 'src/common/enum/config.enum';\nimport { UserModule } from '../user/user.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './auth.strategy';\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(ConfigEnum.SECRET),\n          signOptions: {\n            expiresIn: '1d', // 默认一天\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buttonsGet\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwt: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buttonsGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    buttonsGet()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(login: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcryptjs';\nimport { UserService } from '../user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private jwt: JwtService,\n  ) {}\n\n  async register(email: string, password: string) {\n    const user = await this.usersService.findByEmail(email);\n    if (user) {\n      throw new ForbiddenException('用户已存在');\n    }\n    await this.usersService.userCreate({ email, password });\n    return formatResponse(201, null, '注册成功');\n  }\n\n  async login(login: string, password: string) {\n    const user = await this.usersService.findByLogin(login);\n    if (!user) {\n      throw new ForbiddenException('账号或密码错误');\n    }\n    if (user.status === 0) {\n      throw new ForbiddenException('账号未激活或已经被禁用');\n    }\n    const isValid = await compare(password, user.password);\n    if (!isValid) {\n      throw new ForbiddenException('账号或密码错误');\n    }\n\n    return formatResponse(\n      200,\n      {\n        access_token: this.jwt.sign({\n          userId: user.id,\n          username: user.username,\n          roles: user.roles.map((role) => role.name),\n        }),\n      },\n      '登录成功',\n    );\n  }\n\n  async buttonsGet() {\n    return formatResponse(\n      200,\n      { useHooks: { add: true, delete: true } },\n      '获取按钮成功',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompleteChunkDto.html":{"url":"classes/CompleteChunkDto.html","title":"class - CompleteChunkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompleteChunkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/complete-chunk.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                taskId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt({message: '任务ID必须为数字类型'})@Type(undefined)@ApiProperty({description: '任务ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/complete-chunk.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class CompleteChunkDto {\n  @IsNotEmpty()\n  @IsInt({ message: '任务ID必须为数字类型' })\n  @Type(() => Number)\n  @ApiProperty({\n    description: '任务ID',\n    example: 1,\n  })\n  taskId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAiServiceDto.html":{"url":"classes/CreateAiServiceDto.html","title":"class - CreateAiServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/dto/create-ai-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                endpointUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                serviceName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务描述', example: '用于病害智能诊断的服务'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/create-ai-service.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务的访问URL', example: 'http://localhost:5001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/create-ai-service.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        serviceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: '服务名称', example: '病害智能诊断服务'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/create-ai-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        serviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务类型', example: 'diagnosis'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/create-ai-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"active\" | \"inactive\" | \"under_maintenance\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['active', 'inactive', 'under_maintenance'])@IsOptional()@ApiProperty({description: '服务状态', example: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/create-ai-service.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateAiServiceDto {\n  @IsString()\n  @ApiProperty({\n    description: '服务名称',\n    example: '病害智能诊断服务',\n  })\n  @IsNotEmpty()\n  serviceName: string; // 服务名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务类型',\n    example: 'diagnosis',\n  })\n  serviceType?: string; // 服务类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务描述',\n    example: '用于病害智能诊断的服务',\n  })\n  description?: string; // 服务描述\n\n  @IsEnum(['active', 'inactive', 'under_maintenance'])\n  @IsOptional()\n  @ApiProperty({\n    description: '服务状态',\n    example: 'active',\n  })\n  status?: 'active' | 'inactive' | 'under_maintenance'; // 服务状态\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务的访问URL',\n    example: 'http://localhost:5001',\n  })\n  endpointUrl?: string; // 服务的访问URL\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatasetDto.html":{"url":"classes/CreateDatasetDto.html","title":"class - CreateDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dataset/dto/create-dataset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                fileIds\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '数据集description必须是字符串！'})@ApiProperty({description: '数据集描述', example: '这是一个数据集'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dto/create-dataset.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: 'fileIds 必须是数组'})@Transform( => )@IsInt({each: true, message: 'fileIds 必须是数字'})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dto/create-dataset.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '数据集name必须是字符串！'})@IsNotEmpty({message: '数据集name不能为空！'})@ApiProperty({description: '数据集名称', example: '数据集1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dto/create-dataset.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport {\n  IsString,\n  IsOptional,\n  IsArray,\n  IsNotEmpty,\n  IsInt,\n} from 'class-validator';\n\nexport class CreateDatasetDto {\n  @IsString({ message: '数据集name必须是字符串！' })\n  @IsNotEmpty({ message: '数据集name不能为空！' })\n  @ApiProperty({\n    description: '数据集名称',\n    example: '数据集1',\n  })\n  name: string;\n\n  @IsOptional()\n  @IsString({ message: '数据集description必须是字符串！' })\n  @ApiProperty({\n    description: '数据集描述',\n    example: '这是一个数据集',\n  })\n  description?: string;\n\n  @IsOptional()\n  @IsArray({\n    message: 'fileIds 必须是数组',\n  })\n  @Transform(({ value }) => {\n    if (typeof value === 'string' && value.includes(',')) {\n      return value.split(',').map((item) => parseInt(item, 10));\n    } else {\n      return value.map((item) => parseInt(item, 10));\n    }\n  })\n  @IsInt({ each: true, message: 'fileIds 必须是数字' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlantDiseaseKnowledgeDto.html":{"url":"classes/CreatePlantDiseaseKnowledgeDto.html","title":"class - CreatePlantDiseaseKnowledgeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlantDiseaseKnowledgeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/knowledge/dto/create-knowledge.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPart\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPlant\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                biologicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cause\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                chemicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                culturalPractices\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCycle\n                            \n                            \n                                    \n                                    \n                                    \n                                diseaseName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                documentUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstReported\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                geographicalArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                historicalCases\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preventiveMeasures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                researchSources\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                resistantVarieties\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                scientificName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                severity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                spreadMethod\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                symptoms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                synonyms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                videoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物部位', example: '叶片'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPlant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物种类', example: '草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        biologicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '生物防治方法', example: '生物防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害分类', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害病因', example: '病害病因'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        chemicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '化学防治方法', example: '化学防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        culturalPractices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '文化控制措施', example: '文化控制措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害唯一编码', example: '01110'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害生命周期', example: '病害生命周期'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        diseaseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: '病害名称', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害类型', example: '真菌性病害'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        documentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关文档的 URL 地址', example: 'https://example.com/document.pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstReported\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()@ApiProperty({description: '首次报告时间', example: '2021-06-01'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        geographicalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害地理分布', example: '病害地理分布'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        historicalCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '历史病例', example: '历史病例'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '病害图片的 URL 地址', example: 'https://example.com/image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preventiveMeasures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '防治措施', example: '防治措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        researchSources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '研究来源', example: '研究来源'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:220\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        resistantVarieties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '抗病品种', example: '抗病品种'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害学名', example: 'Colletotrichum gloeosporioides'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害严重程度', example: '轻度'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        spreadMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害传播方式', example: '病害传播方式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        symptoms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害症状描述', example: '病害症状描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        synonyms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害别名', example: '草莓炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害标签', example: '炭疽病, 草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        videoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关视频的 URL 地址', example: 'https://example.com/video.mp4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/create-knowledge.dto.ts:180\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\nexport class CreatePlantDiseaseKnowledgeDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: '病害名称',\n    example: '炭疽病',\n  })\n  diseaseName: string; // 病害名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害唯一编码',\n    example: '01110',\n  })\n  diseaseCode?: string; // 病害唯一编码\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害学名',\n    example: 'Colletotrichum gloeosporioides',\n  })\n  scientificName?: string; // 病害的学名（如果有）\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害别名',\n    example: '草莓炭疽病',\n  })\n  synonyms?: string; // 病害的同义词\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害症状描述',\n    example: '病害症状描述',\n  })\n  symptoms?: string; // 病害症状描述\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害病因',\n    example: '病害病因',\n  })\n  cause?: string; // 病因\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害类型',\n    example: '真菌性病害',\n  })\n  diseaseType?: string; // 病害类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物种类',\n    example: '草莓',\n  })\n  affectedPlant?: string; // 受影响的植物种类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物部位',\n    example: '叶片',\n  })\n  affectedPart?: string; // 受影响的植物部位\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害生命周期',\n    example: '病害生命周期',\n  })\n  diseaseCycle?: string; // 病害生命周期\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害传播方式',\n    example: '病害传播方式',\n  })\n  spreadMethod?: string; // 病害传播方式\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害地理分布',\n    example: '病害地理分布',\n  })\n  geographicalArea?: string; // 病害地理分布\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({\n    description: '首次报告时间',\n    example: '2021-06-01',\n  })\n  firstReported?: string; // 首次报告时间\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '防治措施',\n    example: '防治措施',\n  })\n  preventiveMeasures?: string; // 防治措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '化学防治方法',\n    example: '化学防治方法',\n  })\n  chemicalControl?: string; // 化学防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '生物防治方法',\n    example: '生物防治方法',\n  })\n  biologicalControl?: string; // 生物防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '文化控制措施',\n    example: '文化控制措施',\n  })\n  culturalPractices?: string; // 文化控制措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '抗病品种',\n    example: '抗病品种',\n  })\n  resistantVarieties?: string; // 抗病品种\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '病害图片的 URL 地址',\n    example: 'https://example.com/image.jpg',\n  })\n  imageUrl?: string; // 病害图片的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关文档的 URL 地址',\n    example: 'https://example.com/document.pdf',\n  })\n  documentUrl?: string; // 相关文档的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关视频的 URL 地址',\n    example: 'https://example.com/video.mp4',\n  })\n  videoUrl?: string; // 相关视频的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害分类',\n    example: '炭疽病',\n  })\n  category?: string; // 病害分类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害严重程度',\n    example: '轻度',\n  })\n  severity?: string; // 病害严重程度\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害标签',\n    example: '炭疽病, 草莓',\n  })\n  tags?: string; // 病害标签\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '历史病例',\n    example: '历史病例',\n  })\n  historicalCases?: string; // 历史病例\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '研究来源',\n    example: '研究来源',\n  })\n  researchSources?: string; // 研究来源\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                alias\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色别名', example: '管理员'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色描述', example: '管理员角色'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: '角色名称', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: '角色名称',\n    example: 'admin',\n  })\n  name: string; // 角色名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色别名',\n    example: '管理员',\n  })\n  alias?: string; // 角色别名\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色描述',\n    example: '管理员角色',\n  })\n  description?: string; // 角色描述\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                    \n                                    \n                                fileName\n                            \n                            \n                                    \n                                    \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                    \n                                    \n                                fileType\n                            \n                            \n                                    \n                                    \n                                    \n                                totalChunks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件MD5不能为空！'})@IsString({message: '文件MD5必须为字符串类型！'})@ApiProperty({description: '文件MD5', example: 'd41d8cd98f00b204e9800998ecf8427e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/create-task.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件名不能为空！'})@IsString({message: '文件名必须为字符串类型！'})@ApiProperty({description: '文件名', example: 'test.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/create-task.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件大小不能为空！'})@IsNumber({}, {message: '文件大小必须为数字类型！'})@ApiProperty({description: '文件大小', example: 1024})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/create-task.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件类型不能为空！'})@IsString({message: '文件类型必须为字符串类型！'})@ApiProperty({description: '文件类型', example: 'image/jpeg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/create-task.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        totalChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '总块数不能为空！'})@IsNumber({}, {message: '总块数必须为数字类型！'})@ApiProperty({description: '总块数', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/create-task.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateTaskDto {\n  @IsNotEmpty({ message: '文件名不能为空！' })\n  @IsString({ message: '文件名必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件名',\n    example: 'test.jpg',\n  })\n  fileName: string;\n\n  @IsNotEmpty({ message: '文件大小不能为空！' })\n  @IsNumber({}, { message: '文件大小必须为数字类型！' })\n  @ApiProperty({\n    description: '文件大小',\n    example: 1024,\n  })\n  fileSize: number;\n\n  @IsNotEmpty({ message: '文件类型不能为空！' })\n  @IsString({ message: '文件类型必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件类型',\n    example: 'image/jpeg',\n  })\n  fileType: string;\n\n  @IsNotEmpty({ message: '文件MD5不能为空！' })\n  @IsString({ message: '文件MD5必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件MD5',\n    example: 'd41d8cd98f00b204e9800998ecf8427e',\n  })\n  fileMd5: string;\n\n  @IsNotEmpty({ message: '总块数不能为空！' })\n  @IsNumber({}, { message: '总块数必须为数字类型！' })\n  @ApiProperty({\n    description: '总块数',\n    example: 1,\n  })\n  totalChunks: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTempLinkDto.html":{"url":"classes/CreateTempLinkDto.html","title":"class - CreateTempLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTempLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/create-link.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                expiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '链接过期时间必须为字符串类型！'})@ApiProperty({description: '链接过期时间', example: '1h'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/create-link.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class CreateTempLinkDto {\n  @IsOptional()\n  @IsString({ message: '链接过期时间必须为字符串类型！' })\n  @ApiProperty({\n    description: '链接过期时间',\n    example: '1h',\n  })\n  expiresIn?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail({}, {message: '邮箱格式不正确！'})@ApiProperty({description: '邮箱', example: '5165133@asdf.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度必须为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject({message: 'Profile 必须为一个对象！'})@IsOptional()@ApiProperty({description: 'Profile', type: Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色必须是数组！'})@ArrayMinSize(1, {message: '请至少选择一个角色！'})@ApiProperty({description: '角色', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus, {message: '状态值只能是 0 或 1'})@ApiProperty({description: '状态', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '用户名必须为字符串类型！'})@Length(5, 20, {message: '用户名长度必须为5-20位！'})@ApiProperty({description: '用户名', example: 'sdfgsafgasgsad'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsObject,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\nimport { Profile } from '../models/profile.entity';\nimport { UserStatus } from '@/common/enum/user.enum';\n\nexport class CreateUserDto {\n  @IsOptional()\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: '5165133@asdf.com',\n  })\n  email?: string;\n\n  @IsOptional()\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @Length(5, 20, { message: '用户名长度必须为5-20位！' })\n  @ApiProperty({\n    description: '用户名',\n    example: 'sdfgsafgasgsad',\n  })\n  username?: string;\n\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度必须为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus, { message: '状态值只能是 0 或 1' })\n  @ApiProperty({\n    description: '状态',\n    example: 1,\n  })\n  status?: UserStatus; // 使用枚举来限制状态值\n\n  @IsOptional()\n  @IsArray({ message: '角色必须是数组！' })\n  @ArrayMinSize(1, { message: '请至少选择一个角色！' })\n  @ApiProperty({\n    description: '角色',\n    example: [1, 2],\n  })\n  roles?: number[];\n\n  @IsOptional()\n  @IsObject({ message: 'Profile 必须为一个对象！' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Profile',\n    type: Profile,\n  })\n  profile?: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Dataset.html":{"url":"entities/Dataset.html","title":"entity - Dataset","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Dataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dataset/dataset.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 25, default: 'private'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, file => file.datasets)@JoinTable({name: 'datasets_files', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dataset.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { File } from '../file/models/file.entity';\n\n@Entity('dataset')\n@Index('dataset_user_id_fk', ['createdBy'])\n@Index('dataset_user_id_fk_2', ['updatedBy'])\nexport class Dataset {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ type: 'text', nullable: true })\n  description?: string;\n\n  @Column({ type: 'varchar', length: 25, default: 'private' })\n  access: string;\n\n  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({\n    type: 'datetime',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date;\n\n  @Column({ type: 'int' })\n  createdBy: number;\n\n  @Column({ type: 'int' })\n  updatedBy: number;\n\n  // 多对多关系：一个 Dataset 可以有多个 File，一个 File 也可以属于多个 Dataset\n  @ManyToMany(() => File, (file) => file.datasets)\n  @JoinTable({\n    name: 'datasets_files', // 中间表的名字\n    joinColumn: { name: 'dataset_id', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'file_id', referencedColumnName: 'id' },\n  })\n  files: File[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatasetController.html":{"url":"controllers/DatasetController.html","title":"controller - DatasetController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatasetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dataset/dataset.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dataset\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createDataset\n                            \n                            \n                                    \n                                    Async\n                                datasetsListGet\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteDataset\n                            \n                            \n                                    \n                                    Async\n                                getDatasetDetail\n                            \n                            \n                                    \n                                    Async\n                                updateDataset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(req: Request, dto: CreateDatasetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dataset/dataset.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        datasetsListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    datasetsListGet(req: Request, page: number, pageSize: number, name?: string, createdStart?: string, createdEnd?: string, updatedStart?: string, updatedEnd?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dataset/dataset.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                createdStart\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                createdEnd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updatedStart\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updatedEnd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDataset(datasetId: number, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':datasetId')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dataset/dataset.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDatasetDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatasetDetail(datasetId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':datasetId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dataset/dataset.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDataset(datasetId: number, req: Request, dto: UpdateDatasetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':datasetId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/dataset/dataset.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@/common/decorator/roles.decorator';\nimport { Role } from '@/common/enum/role.enum';\nimport { TypeormFilter } from '@/common/filters/typeorm.filter';\nimport { AuthGuard } from '@/common/guards/auth.guard';\nimport { RolesGuard } from '@/common/guards/roles.guard';\nimport { ParseStringDatePipe } from '@/common/pipe/string-date.pipe';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  Req,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CreateDatasetDto } from './dto/create-dataset.dto';\nimport { UpdateDatasetDto } from './dto/update-dataset.dto';\nimport { DatasetManageService } from './service/dataset-manage.service';\n\n@Controller('dataset')\n@Roles(Role.Admin, Role.Expert)\n@UseGuards(AuthGuard, RolesGuard)\n@UseFilters(TypeormFilter)\nexport class DatasetController {\n  constructor(private readonly manageService: DatasetManageService) {}\n\n  // 获取数据集列表\n  @Get('list')\n  async datasetsListGet(\n    @Req() req: Request,\n    @Query('page', ParseIntPipe) page: number = 1,\n    @Query('pageSize', ParseIntPipe) pageSize: number = 10,\n    @Query('name') name?: string,\n    @Query('createdStart', ParseStringDatePipe) createdStart?: string,\n    @Query('createdEnd', ParseStringDatePipe) createdEnd?: string,\n    @Query('updatedStart', ParseStringDatePipe) updatedStart?: string,\n    @Query('updatedEnd', ParseStringDatePipe) updatedEnd?: string,\n  ) {\n    return this.manageService.datasetsListGet(page, pageSize, req.user.userId, {\n      name,\n      createdStart,\n      createdEnd,\n      updatedStart,\n      updatedEnd,\n    });\n  }\n\n  // 创建数据集\n  @Post('create')\n  async createDataset(@Req() req: Request, @Body() dto: CreateDatasetDto) {\n    return this.manageService.createDataset(req.user.userId, dto);\n  }\n\n  // 获取数据集详情\n  @Get(':datasetId')\n  async getDatasetDetail(\n    @Param(\n      'datasetId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    datasetId: number,\n  ) {\n    return this.manageService.getDatasetDetail(datasetId);\n  }\n\n  // 更新数据集\n  @Put(':datasetId')\n  async updateDataset(\n    @Param(\n      'datasetId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    datasetId: number,\n    @Req() req: Request,\n    @Body() dto: UpdateDatasetDto,\n  ) {\n    return this.manageService.updateDataset(datasetId, req.user.userId, dto);\n  }\n\n  // 删除数据集\n  @Delete(':datasetId')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async deleteDataset(\n    @Param(\n      'datasetId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    datasetId: number,\n    @Req() req: Request,\n  ) {\n    return this.manageService.deleteDataset(datasetId, req.user.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetManageService.html":{"url":"injectables/DatasetManageService.html","title":"injectable - DatasetManageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetManageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dataset/service/dataset-manage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDataset\n                            \n                            \n                                    Async\n                                datasetsListGet\n                            \n                            \n                                    Async\n                                deleteDataset\n                            \n                            \n                                    Async\n                                getDatasetDetail\n                            \n                            \n                                    Async\n                                updateDataset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datasetRepository: Repository, fileService: FileService, datasetService: DatasetService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/dataset/service/dataset-manage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetService\n                                                  \n                                                        \n                                                                        DatasetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(userId: number, dto: CreateDatasetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dataset/service/dataset-manage.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        datasetsListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    datasetsListGet(page: number, pageSize: number, userId: number, filters?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dataset/service/dataset-manage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDataset(datasetId: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dataset/service/dataset-manage.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDatasetDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatasetDetail(datasetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dataset/service/dataset-manage.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDataset(datasetId: number, userId: number, dto: UpdateDatasetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dataset/service/dataset-manage.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport { FileService } from '@/modules/file/services/file.service';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Dataset } from '../dataset.entity';\nimport { CreateDatasetDto } from '../dto/create-dataset.dto';\nimport { UpdateDatasetDto } from '../dto/update-dataset.dto';\nimport { DatasetService } from './dataset.service';\n\n@Injectable()\nexport class DatasetManageService {\n  constructor(\n    @InjectRepository(Dataset)\n    private datasetRepository: Repository,\n    private fileService: FileService,\n    private datasetService: DatasetService,\n  ) {}\n\n  async datasetsListGet(\n    page: number,\n    pageSize: number,\n    userId: number,\n    filters?: {\n      name?: string;\n      createdStart?: string;\n      createdEnd?: string;\n      updatedStart?: string;\n      updatedEnd?: string;\n    },\n  ) {\n    const queryBuilder = this.datasetRepository.createQueryBuilder('dataset');\n\n    queryBuilder.where('dataset.createdBy = :userId', { userId });\n\n    // 添加过滤条件\n    if (filters?.name) {\n      queryBuilder.andWhere('dataset.name LIKE :name', {\n        name: `%${filters.name}%`,\n      });\n    }\n    if (filters?.createdStart) {\n      queryBuilder.andWhere('dataset.createdAt >= :createdStart', {\n        createdStart: filters.createdStart,\n      });\n    }\n    if (filters?.createdEnd) {\n      queryBuilder.andWhere('dataset.createdAt = :updatedStart', {\n        updatedStart: filters.updatedStart,\n      });\n    }\n    if (filters?.updatedEnd) {\n      queryBuilder.andWhere('dataset.updatedAt  {\n      const fileCount = dataset.files.length; // 文件的数量\n      // 计算 datasetSize\n      const datasetSize = dataset.files.reduce((totalSize, file) => {\n        const size = file.fileSize ? Number(file.fileSize) : 0;\n        return totalSize + size;\n      }, 0);\n\n      return {\n        ...dataset,\n        fileCount,\n        datasetSize,\n        files: undefined, // 不返回 files 字段\n      };\n    });\n\n    return formatResponse(\n      200,\n      {\n        list: result,\n        total,\n        page,\n        pageSize,\n      },\n      '获取数据集列表成功',\n    );\n  }\n\n  async createDataset(userId: number, dto: CreateDatasetDto) {\n    const { fileIds, ...datasetData } = dto;\n    const dataset = this.datasetRepository.create({\n      ...datasetData,\n      createdBy: userId,\n      updatedBy: userId,\n    });\n    if (fileIds && fileIds?.length > 0) {\n      dataset.files = await this.fileService.findByIds(fileIds);\n    }\n    await this.datasetRepository.save(dataset);\n    return formatResponse(200, dataset, '创建数据集成功');\n  }\n\n  async getDatasetDetail(datasetId: number) {\n    const dataset = await this.datasetService.findById(datasetId);\n    const result = {\n      ...dataset,\n      fileIds: dataset.files.map((file) => file.id),\n      files: undefined, // 不返回 files 字段\n    };\n    return formatResponse(200, result, '获取数据集详情成功');\n  }\n\n  async updateDataset(\n    datasetId: number,\n    userId: number,\n    dto: UpdateDatasetDto,\n  ) {\n    const dataset = await this.datasetService.findById(datasetId);\n    const { fileIds, ...datasetData } = dto;\n    dataset.name = datasetData.name || dataset.name;\n    dataset.description = datasetData.description || dataset.description;\n    dataset.updatedBy = userId;\n    if (fileIds && fileIds?.length > 0) {\n      dataset.files = await this.fileService.findByIds(fileIds);\n    }\n    await this.datasetRepository.save(dataset);\n    return formatResponse(200, dataset, '更新数据集成功');\n  }\n\n  async deleteDataset(datasetId: number, userId: number): Promise {\n    const dataset = await this.datasetService.findById(datasetId);\n    if (dataset.createdBy !== userId) {\n      throw new Error('无权限删除该数据集');\n    }\n    await this.datasetRepository.remove(dataset);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatasetModule.html":{"url":"modules/DatasetModule.html","title":"module - DatasetModule","body":"\n                   \n\n\n\n\n    Modules\n    DatasetModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatasetModule\n\n\n\ncluster_DatasetModule_imports\n\n\n\ncluster_DatasetModule_providers\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nDatasetModule\n\nDatasetModule\n\nDatasetModule -->\n\nFileModule->DatasetModule\n\n\n\n\n\nDatasetManageService\n\nDatasetManageService\n\nDatasetModule -->\n\nDatasetManageService->DatasetModule\n\n\n\n\n\nDatasetService\n\nDatasetService\n\nDatasetModule -->\n\nDatasetService->DatasetModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/dataset/dataset.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatasetManageService\n                        \n                        \n                            DatasetService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatasetController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatasetService } from './service/dataset.service';\nimport { DatasetController } from './dataset.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Dataset } from './dataset.entity';\nimport { FileModule } from '../file/file.module';\nimport { DatasetManageService } from './service/dataset-manage.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Dataset]), FileModule],\n  providers: [DatasetService, DatasetManageService],\n  controllers: [DatasetController],\n})\nexport class DatasetModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetService.html":{"url":"injectables/DatasetService.html","title":"injectable - DatasetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dataset/service/dataset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datasetRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/dataset/service/dataset.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/dataset/service/dataset.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Dataset } from '../dataset.entity';\n\n@Injectable()\nexport class DatasetService {\n  constructor(\n    @InjectRepository(Dataset)\n    private datasetRepository: Repository,\n  ) {}\n\n  async findById(id: number) {\n    const dataset = await this.datasetRepository.findOne({\n      where: { id },\n      relations: ['files'],\n    });\n    if (!dataset) {\n      throw new NotFoundException('未发现该数据集');\n    }\n    return dataset;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DiagnosisController.html":{"url":"controllers/DiagnosisController.html","title":"controller - DiagnosisController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DiagnosisController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/diagnosis/diagnosis.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                diagnosis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                diagnosisHistoryGet\n                            \n                            \n                                    \n                                    Async\n                                diagnosisHistoryListGet\n                            \n                            \n                                    \n                                    Async\n                                getDiagnosisStatus\n                            \n                            \n                                    \n                                    Async\n                                startDiagnosis\n                            \n                            \n                                    \n                                    \n                                    Async\n                                uploadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisHistoryGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryGet(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('history')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisHistoryListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryListGet(req: Request, page?: number, pageSize?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('history/list')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.controller.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDiagnosisStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDiagnosisStatus(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/status')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        startDiagnosis\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDiagnosis(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/start')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        uploadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadData(req: Request, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Query,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\n\nimport { MIME_TYPE } from '@/common/enum/mime.enum';\nimport { AuthGuard } from '@/common/guards/auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Request } from 'express';\nimport { existsSync, mkdirSync } from 'fs';\nimport { diskStorage } from 'multer';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FileSizeValidationPipe } from '../file/pipe/file-size.pipe';\nimport { FileTypeValidationPipe } from '../file/pipe/file-type.pipe';\nimport { FileOperationService } from '../file/services/file-operation.service';\nimport { DiagnosisService } from './diagnosis.service';\n\n@Controller('diagnosis')\n@UseGuards(AuthGuard)\nexport class DiagnosisController {\n  constructor(\n    private readonly diagnosisService: DiagnosisService,\n    private readonly fileOperationService: FileOperationService,\n  ) {}\n\n  // 上传待诊断数据接口\n  @Post('upload')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          let folder = 'uploads/other';\n          const mimeType = file.mimetype;\n          // 按 MIME 类型分文件夹存储\n          if (mimeType.startsWith('image')) {\n            folder = 'uploads/images';\n          } else if (mimeType.startsWith('video')) {\n            folder = 'uploads/videos';\n          } else if (mimeType.startsWith('application')) {\n            folder = 'uploads/documents';\n          } else if (mimeType.startsWith('audio')) {\n            folder = 'uploads/audio';\n          }\n          if (!existsSync(folder)) {\n            mkdirSync(folder, { recursive: true });\n          }\n          cb(null, folder);\n        },\n        filename: (req, file, cb) => {\n          const uniqueName = Date.now() + '-' + uuidv4();\n          file.originalname = Buffer.from(file.originalname, 'latin1').toString(\n            'utf-8',\n          );\n          cb(null, uniqueName);\n        },\n      }),\n    }),\n  )\n  async uploadData(\n    @Req() req: Request,\n    @UploadedFile(\n      new FileTypeValidationPipe([MIME_TYPE.PNG, MIME_TYPE.JPEG]),\n      new FileSizeValidationPipe('10MB'),\n    )\n    file: Express.Multer.File,\n  ) {\n    try {\n      return this.diagnosisService.uploadData(req.user.userId, file);\n    } catch (error) {\n      await this.fileOperationService.deleteFile(file.path);\n      throw error;\n    }\n  }\n\n  // TODO: 开始诊断数据接口\n  @Post(':id/start')\n  async startDiagnosis(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return await this.diagnosisService.startDiagnosis(id);\n  }\n\n  // 获取诊断服务状态接口\n  @Get(':id/status')\n  async getDiagnosisStatus(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return await this.diagnosisService.getDiagnosisStatus(id);\n  }\n\n  // 获取诊断历史记录接口\n  @Get('history')\n  async diagnosisHistoryGet(@Req() req: Request) {\n    return await this.diagnosisService.diagnosisHistoryGet(req.user.userId);\n  }\n\n  // 获取诊断历史记录接口\n  @Get('history/list')\n  async diagnosisHistoryListGet(\n    @Req() req: Request,\n    @Query('page', ParseIntPipe) page?: number,\n    @Query('pageSize', ParseIntPipe) pageSize?: number,\n  ) {\n    return await this.diagnosisService.diagnosisHistoryListGet(\n      page,\n      pageSize,\n      req.user.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiagnosisHistory.html":{"url":"entities/DiagnosisHistory.html","title":"entity - DiagnosisHistory","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiagnosisHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/diagnosis/models/diagnosis-history.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                diagnosisConfidence\n                            \n                            \n                                    \n                                diagnosisResult\n                            \n                            \n                                    \n                                    \n                                file\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true, default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diagnosisConfidence\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'float', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diagnosisResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {nullable: true, onDelete: 'SET NULL'})@JoinColumn({name: 'fileId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 25, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true, default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/diagnosis/models/diagnosis-history.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { File as FileEntity } from '@/modules/file/models/file.entity';\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity('diagnosis_history')\n@Index('diagnosis_history_created_by_idx', ['createdBy']) // 为 createdBy 字段添加索引\nexport class DiagnosisHistory {\n  @PrimaryGeneratedColumn('increment')\n  id: number; // 主键ID\n\n  @ManyToOne(() => FileEntity, { nullable: true, onDelete: 'SET NULL' })\n  @JoinColumn({ name: 'fileId' }) // 关联的文件外键名\n  file: FileEntity | null; // 上传的数据文件，允许为空（0..0关系）\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  diagnosisResult: string | null; // 诊断结果\n\n  @Column({ type: 'float', nullable: true })\n  diagnosisConfidence: number | null; // 诊断置信度\n\n  @Column({\n    type: 'varchar',\n    length: 25,\n    default: 'pending',\n  })\n  status: string; // 状态（默认值为 'pending'）\n\n  @Column({ type: 'int' })\n  createdBy: number; // 创建者\n\n  @Column({ type: 'int' })\n  updatedBy: number; // 更新者\n\n  @Column({\n    type: 'datetime',\n    nullable: true,\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'datetime',\n    nullable: true,\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiagnosisModule.html":{"url":"modules/DiagnosisModule.html","title":"module - DiagnosisModule","body":"\n                   \n\n\n\n\n    Modules\n    DiagnosisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiagnosisModule\n\n\n\ncluster_DiagnosisModule_providers\n\n\n\ncluster_DiagnosisModule_imports\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nDiagnosisModule\n\nDiagnosisModule\n\nDiagnosisModule -->\n\nFileModule->DiagnosisModule\n\n\n\n\n\nDiagnosisService\n\nDiagnosisService\n\nDiagnosisModule -->\n\nDiagnosisService->DiagnosisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/diagnosis/diagnosis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiagnosisService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiagnosisController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FileModule } from '../file/file.module';\nimport { DiagnosisController } from './diagnosis.controller';\nimport { DiagnosisHistory } from './models/diagnosis-history.entity';\nimport { DiagnosisService } from './diagnosis.service';\n\n@Module({\n  imports: [FileModule, TypeOrmModule.forFeature([DiagnosisHistory])],\n  providers: [DiagnosisService],\n  controllers: [DiagnosisController],\n})\nexport class DiagnosisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiagnosisService.html":{"url":"injectables/DiagnosisService.html","title":"injectable - DiagnosisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiagnosisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/diagnosis/diagnosis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                diagnosisHistoryGet\n                            \n                            \n                                    Async\n                                diagnosisHistoryListGet\n                            \n                            \n                                    Async\n                                getDiagnosisStatus\n                            \n                            \n                                    Async\n                                startDiagnosis\n                            \n                            \n                                    Async\n                                uploadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(diagnosisRepository: Repository, fileManageService: FileManageService, fileOperationService: FileOperationService, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/modules/diagnosis/diagnosis.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        diagnosisRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileManageService\n                                                  \n                                                        \n                                                                        FileManageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileOperationService\n                                                  \n                                                        \n                                                                        FileOperationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisHistoryGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryGet(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisHistoryListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryListGet(page: number, pageSize: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDiagnosisStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDiagnosisStatus(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startDiagnosis\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDiagnosis(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadData(userId: number, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/diagnosis/diagnosis.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Status } from '@/common/enum/status.enum';\nimport { formatResponse } from '@/common/helpers/response.helper';\nimport { FileManageService } from '@/modules/file/services/file-manage.service';\nimport { FileOperationService } from '@/modules/file/services/file-operation.service';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DataSource, Repository } from 'typeorm';\nimport { DiagnosisHistory } from './models/diagnosis-history.entity';\n\n@Injectable()\nexport class DiagnosisService {\n  constructor(\n    @InjectRepository(DiagnosisHistory)\n    private readonly diagnosisRepository: Repository,\n    private readonly fileManageService: FileManageService,\n    private readonly fileOperationService: FileOperationService,\n    private readonly dataSource: DataSource,\n  ) {}\n\n  // 上传待诊断数据\n  async uploadData(userId: number, file: Express.Multer.File) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const diagnosisHistory = queryRunner.manager.create(DiagnosisHistory, {\n        createdBy: userId,\n        updatedBy: userId,\n        status: Status.PENDING,\n      });\n      const fileMd5 = await this.fileOperationService.calculateFileMd5(\n        file.path,\n      );\n      const fileEntity = await this.fileManageService.createFileInTransaction(\n        userId,\n        {\n          originalFileName: file.originalname,\n          storageFileName: file.filename,\n          fileSize: file.size,\n          fileType: file.mimetype,\n          filePath: file.path,\n          fileMd5,\n        },\n        queryRunner,\n      );\n      diagnosisHistory.file = fileEntity;\n      await queryRunner.manager.save(diagnosisHistory);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '上传成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new error();\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 开始诊断数据\n  async startDiagnosis(id: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const diagnosis = await queryRunner.manager.findOne(DiagnosisHistory, {\n        where: { id },\n        lock: { mode: 'pessimistic_write' },\n      });\n      if (!diagnosis) {\n        throw new NotFoundException('未找到诊断记录');\n      }\n      diagnosis.status = Status.IN_PROGRESS;\n      await this.diagnosisRepository.save(diagnosis);\n      return formatResponse(200, null, '开始诊断成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new error();\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 获取诊断服务状态\n  async getDiagnosisStatus(id: number) {\n    const diagnosis = await this.diagnosisRepository.findOne({\n      where: { id },\n    });\n    if (!diagnosis) {\n      throw new NotFoundException('未找到诊断记录');\n    }\n    return formatResponse(200, diagnosis, '开始诊断成功');\n  }\n\n  async diagnosisHistoryGet(userId: number) {\n    const diagnosisHistory = await this.diagnosisRepository.find({\n      where: { createdBy: userId },\n      order: { createdAt: 'DESC' },\n    });\n    return formatResponse(200, diagnosisHistory, '获取诊断历史记录成功');\n  }\n\n  // 获取诊断历史记录\n  async diagnosisHistoryListGet(\n    page: number = 1,\n    pageSize: number = 10,\n    userId: number,\n  ) {\n    const [list, total] = await this.diagnosisRepository.findAndCount({\n      where: { createdBy: userId },\n      order: { createdAt: 'DESC' },\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n    });\n    return formatResponse(\n      200,\n      { list, total, page, pageSize },\n      '获取诊断历史记录成功',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadFilesDto.html":{"url":"classes/DownloadFilesDto.html","title":"class - DownloadFilesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadFilesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/download-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                fileIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'fileIds 参数不能为空！'})@IsArray({message: 'fileIds 参数必须是数组！'})@ArrayMinSize(1, {message: 'fileIds 参数必须存在！'})@Transform( => , {toClassOnly: true})@IsInt({each: true})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/download-file.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsNotEmpty, IsInt } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class DownloadFilesDto {\n  @IsNotEmpty({ message: 'fileIds 参数不能为空！' })\n  @IsArray({ message: 'fileIds 参数必须是数组！' })\n  @ArrayMinSize(1, { message: 'fileIds 参数必须存在！' })\n  @Transform(({ value }) => value.map((v: string) => Number(v)), {\n    toClassOnly: true,\n  })\n  @IsInt({ each: true })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/File.html":{"url":"entities/File.html","title":"entity - File","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/models/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                datasets\n                            \n                            \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                filePath\n                            \n                            \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                fileType\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                originalFileName\n                            \n                            \n                                    \n                                storageFileName\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 30, default: 'private'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        datasets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dataset[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, dataset => dataset.files)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'char', length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        originalFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/file.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { Dataset } from '../../dataset/dataset.entity';\n\n@Entity('file')\n@Index('file_user_id_fk', ['createdBy'])\n@Index('file_user_id_fk_2', ['updatedBy'])\nexport class File {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  originalFileName: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  storageFileName: string;\n\n  @Column({ type: 'text' })\n  filePath: string;\n\n  @Column({ type: 'bigint' })\n  fileSize: number;\n\n  @Column({ type: 'varchar', length: 100 })\n  fileType: string;\n\n  @Column({ type: 'char', length: 32 })\n  fileMd5: string;\n\n  @Column({ type: 'varchar', length: 30, default: 'private' })\n  access: string;\n\n  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({\n    type: 'datetime',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date;\n\n  @Column({ type: 'int' })\n  createdBy: number;\n\n  @Column({ type: 'int' })\n  updatedBy: number;\n\n  @Column({ type: 'int', default: 1 })\n  version: number;\n\n  // 多对多关系：一个 File 可能属于多个 Dataset\n  @ManyToMany(() => Dataset, (dataset) => dataset.files)\n  datasets: Dataset[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileDownloadService.html":{"url":"injectables/FileDownloadService.html","title":"injectable - FileDownloadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileDownloadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/services/file-download.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadFile\n                            \n                            \n                                    Async\n                                downloadFilesAsZip\n                            \n                            \n                                    Async\n                                generateAccessLink\n                            \n                            \n                                verifyAccessLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/services/file-download.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(fileMeta: FileEntity, req: Request, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-download.service.ts:27\n                        \n                    \n\n\n            \n                \n                        单个文件下载\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileMeta\n                                            \n                                                            FileEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文件元数据\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    请求对象\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    响应对象\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFilesAsZip\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFilesAsZip(filesMeta: FileEntity[], res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-download.service.ts:74\n                        \n                    \n\n\n            \n                \n                        批量文件下载并压缩为 zip 文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filesMeta\n                                            \n                                                            FileEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文件元数据数组\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    响应对象\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAccessLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessLink(fileId: number, request: Request, dto: CreateTempLinkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-download.service.ts:107\n                        \n                    \n\n\n            \n                \n                        生成临时访问链接\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateTempLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyAccessLink\n                        \n                    \n                \n            \n            \n                \nverifyAccessLink(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-download.service.ts:133\n                        \n                    \n\n\n            \n                \n                        验证访问链接\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport { BadRequestException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as archiver from 'archiver';\nimport { Request, Response } from 'express';\nimport { createReadStream } from 'fs';\nimport { join } from 'path';\nimport { CreateTempLinkDto } from '../dto/create-link.dto';\nimport { File as FileEntity } from '../models/file.entity';\nimport { FileService } from './file.service';\n\n@Injectable()\nexport class FileDownloadService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileService: FileService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   * 单个文件下载\n   * @param fileMeta 文件元数据\n   * @param req 请求对象\n   * @param res 响应对象\n   */\n  async downloadFile(fileMeta: FileEntity, req: Request, res: Response) {\n    const filePath = join(process.cwd(), fileMeta.filePath);\n    const range = req.headers.range;\n\n    if (!range) {\n      // 普通下载\n      res\n        .status(HttpStatus.OK)\n        .set({\n          'Content-Length': fileMeta.fileSize,\n          'Content-Type': fileMeta.fileType,\n        })\n        .sendFile(filePath);\n      return;\n    }\n\n    // 断点续传\n    const parts = range.replace(/bytes=/, '').split('-');\n    const start = parseInt(parts[0], 10);\n    const end = parts[1] ? parseInt(parts[1], 10) : fileMeta.fileSize - 1;\n\n    if (start >= fileMeta.fileSize || end >= fileMeta.fileSize) {\n      return res\n        .status(HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE)\n        .send('Requested range not satisfiable');\n    }\n\n    res\n      .status(HttpStatus.PARTIAL_CONTENT)\n      .set({\n        'Content-Range': `bytes ${start}-${end}/${fileMeta.fileSize}`,\n        'Accept-Ranges': 'bytes',\n        'Content-Length': end - start + 1,\n        'Content-Type': fileMeta.fileType,\n      })\n      .sendFile(filePath, {\n        headers: { Range: `bytes=${start}-${end}` },\n        start, // 设置文件读取的起始位置\n        end, // 设置文件读取的结束位置\n      });\n  }\n\n  /**\n   * 批量文件下载并压缩为 zip 文件\n   * @param filesMeta 文件元数据数组\n   * @param res 响应对象\n   */\n  async downloadFilesAsZip(filesMeta: FileEntity[], res: Response) {\n    const zipFileName = 'files.zip';\n    const zip = archiver('zip', { zlib: { level: 9 } });\n\n    res.attachment(zipFileName);\n    zip.pipe(res);\n\n    // 将每个文件添加到 zip\n    for (const fileMeta of filesMeta) {\n      const filePath = join(process.cwd(), fileMeta.filePath);\n      zip.append(createReadStream(filePath), {\n        name: fileMeta.originalFileName,\n      });\n    }\n\n    // 完成压缩包创建\n    zip.finalize();\n\n    // 错误处理\n    zip.on('error', (err) => {\n      res\n        .status(HttpStatus.INTERNAL_SERVER_ERROR)\n        .send(`Error creating zip file: ${err.message}`);\n    });\n  }\n\n  /**\n   * 生成临时访问链接\n   * @param fileId\n   * @param request\n   * @param dto\n   * @returns\n   */\n  async generateAccessLink(\n    fileId: number,\n    request: Request,\n    dto: CreateTempLinkDto,\n  ) {\n    const file = await this.fileService.findById(fileId);\n    if (file.createdBy !== request.user.userId) {\n      throw new BadRequestException('无权操作他人文件');\n    }\n    const payload = {\n      fileId: file.id,\n    };\n    const token = this.jwtService.sign(payload, {\n      expiresIn: dto.expiresIn || '1h',\n    });\n    const tempLink = `${request.protocol}://${request.get(\n      'host',\n    )}/api/file/access-link/${token}`;\n    return formatResponse(200, { link: tempLink }, '临时链接生成成功');\n  }\n\n  /**\n   * 验证访问链接\n   * @param token\n   * @returns\n   */\n  verifyAccessLink(token: string) {\n    try {\n      const payload: { fileId: number } = this.jwtService.verify(token);\n      return payload.fileId;\n    } catch (error) {\n      throw new BadRequestException('链接验证失败');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FileGuard.html":{"url":"guards/FileGuard.html","title":"guard - FileGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/file/guards/file.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/guards/file.guard.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/guards/file.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { FileService } from '@/modules/file/services/file.service';\nimport { File as FileEntity } from '@/modules/file/models/file.entity';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      fileMeta: FileEntity;\n      filesMeta: FileEntity[];\n    }\n  }\n}\n\n@Injectable()\nexport class FileGuard implements CanActivate {\n  constructor(private readonly fileService: FileService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileId = request.params.fileId;\n    const userId = request.user?.userId;\n\n    // 查询文件信息并将其存储到 request.file 中\n    const file = await this.fileService.findById(fileId);\n\n    // 处理权限验证\n    if (\n      file.access === 'public' ||\n      (file.access === 'private' && userId === file.createdBy)\n    ) {\n      request.fileMeta = file; // 将文件信息存储到请求中\n      return true;\n    }\n\n    throw new ForbiddenException('当前文件无权限访问.');\n  }\n}\n\n@Injectable()\nexport class FilesGuard implements CanActivate {\n  constructor(private readonly fileService: FileService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileIds = request.body.fileIds;\n    const userId = request.user?.userId;\n\n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      throw new BadRequestException('非法参数');\n    }\n\n    // 查询多个文件信息并将其存储到请求中\n    const files = await this.fileService.findByIds(fileIds);\n\n    const filesWithAccess: FileEntity[] = [];\n\n    for (const file of files) {\n      if (\n        file.access === 'public' ||\n        (file.access === 'private' && userId === file.createdBy)\n      ) {\n        filesWithAccess.push(file); // 只有有权限的文件才会被加入\n      } else {\n        throw new ForbiddenException('您无权操作.');\n      }\n    }\n\n    request.filesMeta = filesWithAccess; // 将文件信息存储到请求中\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileManageService.html":{"url":"injectables/FileManageService.html","title":"injectable - FileManageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileManageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/services/file-manage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFile\n                            \n                            \n                                    Async\n                                createFileInTransaction\n                            \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                deleteFiles\n                            \n                            \n                                    Async\n                                updateFile\n                            \n                            \n                                    Async\n                                updateFileInTransaction\n                            \n                            \n                                    Async\n                                updateFilesAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, fileOperationService: FileOperationService, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/services/file-manage.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileOperationService\n                                                  \n                                                        \n                                                                        FileOperationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFile(userId: number, fileData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:29\n                        \n                    \n\n\n            \n                \n                        创建文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    用户ID\n\n                                            \n                                        \n                                        \n                                                fileData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    文件上传信息\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                创建的文件实体\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileInTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileInTransaction(userId: number, fileData: Partial, queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:52\n                        \n                    \n\n\n            \n                \n                        创建文件并开启事务\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileId: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:184\n                        \n                    \n\n\n            \n                \n                        删除文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFiles(fileIds: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:226\n                        \n                    \n\n\n            \n                \n                        批量删除文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFile(userId: number, dto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:78\n                        \n                    \n\n\n            \n                \n                        更新文件信息\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFileInTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFileInTransaction(userId: number, dto: UpdateFileDto, queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:115\n                        \n                    \n\n\n            \n                \n                        更新文件信息并开启事务\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                文件实体\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFilesAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFilesAccess(userId: number, dto: UpdateFilesAccessDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-manage.service.ts:147\n                        \n                    \n\n\n            \n                \n                        批量更新文件权限\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFilesAccessDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DataSource, In, QueryRunner, Repository } from 'typeorm';\nimport { UpdateFileDto, UpdateFilesAccessDto } from '../dto/update-file.dto';\nimport { File as FileEntity } from '../models/file.entity';\nimport { Task as TaskEntity } from '../models/task.entity';\nimport { FileOperationService } from './file-operation.service';\n\n@Injectable()\nexport class FileManageService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n    private readonly fileOperationService: FileOperationService,\n    private readonly dataSource: DataSource,\n  ) {}\n\n  /**\n   * 创建文件\n   * @param userId 用户ID\n   * @param fileData 文件上传信息\n   * @returns 创建的文件实体\n   */\n  async createFile(userId: number, fileData: Partial) {\n    try {\n      // 校验字段，根据不同实体类型处理\n      const fileMeta = this.fileRepository.create({\n        ...fileData,\n        createdBy: userId,\n        updatedBy: userId,\n      });\n      return await this.fileRepository.save(fileMeta);\n    } catch (error) {\n      throw new BadRequestException(\n        '创建实体失败：' + (error?.message || error),\n      );\n    }\n  }\n\n  /**\n   * 创建文件并开启事务\n   * @param userId\n   * @param fileData\n   * @param queryRunner\n   * @returns\n   */\n  async createFileInTransaction(\n    userId: number,\n    fileData: Partial,\n    queryRunner: QueryRunner,\n  ) {\n    try {\n      // 校验字段，根据不同实体类型处理\n      const fileMeta = this.fileRepository.create({\n        ...fileData,\n        createdBy: userId,\n        updatedBy: userId,\n      });\n      return await queryRunner.manager.save(fileMeta);\n    } catch (error) {\n      throw new BadRequestException(\n        '创建实体失败：' + (error?.message || error),\n      );\n    }\n  }\n\n  /**\n   * 更新文件信息\n   * @param userId\n   * @param dto\n   * @returns\n   */\n  async updateFile(userId: number, dto: UpdateFileDto) {\n    const { fileId, ...fileMeta } = dto;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const file = await queryRunner.manager.findOne(FileEntity, {\n        where: { id: fileId },\n        lock: { mode: 'pessimistic_write' },\n      });\n      if (!file) {\n        throw new NotFoundException('未找到文件');\n      }\n      if (file.createdBy !== userId) {\n        throw new BadRequestException('无权修改他人文件');\n      }\n      Object.assign(file, fileMeta);\n      file.updatedBy = userId;\n      file.version += 1;\n      await queryRunner.manager.save(file);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '文件信息修改成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 更新文件信息并开启事务\n   * @param userId\n   * @param dto\n   * @param queryRunner\n   * @returns 文件实体\n   */\n  async updateFileInTransaction(\n    userId: number,\n    dto: UpdateFileDto,\n    queryRunner: QueryRunner,\n  ) {\n    const { fileId, ...fileMeta } = dto;\n    try {\n      const file = await queryRunner.manager.findOne(FileEntity, {\n        where: { id: fileId },\n        lock: { mode: 'pessimistic_write' },\n      });\n      if (!file) {\n        throw new NotFoundException('未找到文件');\n      }\n      if (file.createdBy !== userId) {\n        throw new BadRequestException('无权修改他人文件');\n      }\n      Object.assign(file, fileMeta);\n      file.updatedBy = userId;\n      file.version += 1;\n      return await queryRunner.manager.save(file);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * 批量更新文件权限\n   * @param userId\n   * @param dto\n   * @returns\n   */\n  async updateFilesAccess(userId: number, dto: UpdateFilesAccessDto) {\n    const { fileIds, access } = dto;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const files = await queryRunner.manager.find(FileEntity, {\n        where: { id: In(fileIds) },\n      });\n      if (files.length === 0) {\n        throw new NotFoundException('未找到文件');\n      }\n      for (const file of files) {\n        if (file.createdBy !== userId) {\n          throw new BadRequestException('无权修改他人文件');\n        }\n        file.access = access;\n        file.updatedBy = userId;\n        file.version += 1;\n      }\n      await queryRunner.manager.save(files);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '文件权限修改成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 删除文件\n   * @param fileId\n   * @param userId\n   * @returns\n   */\n  async deleteFile(fileId: number, userId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const file = await queryRunner.manager.findOne(FileEntity, {\n        where: { id: fileId },\n        lock: { mode: 'pessimistic_write' },\n      });\n      if (!file) {\n        throw new NotFoundException('未找到文件');\n      }\n      if (file.createdBy !== userId) {\n        throw new BadRequestException('无权删除他人文件');\n      }\n      // 检查文件是否被引用\n      const referenceCount = await queryRunner.manager.count(TaskEntity, {\n        where: { fileMd5: file.fileMd5 },\n      });\n      // 如果文件没有被引用，删除文件元数据及文件\n      if (referenceCount === 0) {\n        await queryRunner.manager.delete(FileEntity, fileId);\n        await queryRunner.commitTransaction();\n        await this.fileOperationService.deleteFile(file.filePath);\n      } else {\n        // 如果文件被引用，直接删除文件元数据，不删除实际文件\n        await queryRunner.manager.delete(FileEntity, fileId);\n        await queryRunner.commitTransaction();\n      }\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 批量删除文件\n   * @param fileIds\n   * @returns\n   */\n  async deleteFiles(fileIds: number[]) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const files = await queryRunner.manager.find(FileEntity, {\n        where: { id: In(fileIds) },\n      });\n      if (files.length === 0) {\n        throw new NotFoundException('未找到文件');\n      }\n      // 检查是否有引用该文件\n      const fileMd5s = files.map((file) => file.fileMd5);\n      const referenceCount = await queryRunner.manager.count(TaskEntity, {\n        where: { fileMd5: In(fileMd5s) },\n      });\n      const filesToDelete = files.filter((file) => {\n        const count = referenceCount[file.fileMd5];\n        return count === 0;\n      });\n      // 删除文件\n      const deletionPromises = filesToDelete.map((file) =>\n        this.fileOperationService.deleteFile(file.filePath),\n      );\n      await Promise.all(deletionPromises);\n      // 删除文件元数据\n      await queryRunner.manager.delete(FileEntity, fileIds);\n      await queryRunner.commitTransaction();\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_FileModule_exports\n\n\n\n\nFileManageService \n\nFileManageService \n\n\n\nFileOperationService \n\nFileOperationService \n\n\n\nFileService \n\nFileService \n\n\n\nFileModule\n\nFileModule\n\nFileManageService  -->\n\nFileModule->FileManageService \n\n\n\nFileOperationService  -->\n\nFileModule->FileOperationService \n\n\n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileDownloadService\n\nFileDownloadService\n\nFileModule -->\n\nFileDownloadService->FileModule\n\n\n\n\n\nFileManageService\n\nFileManageService\n\nFileModule -->\n\nFileManageService->FileModule\n\n\n\n\n\nFileOperationService\n\nFileOperationService\n\nFileModule -->\n\nFileOperationService->FileModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nFileStorageService\n\nFileStorageService\n\nFileModule -->\n\nFileStorageService->FileModule\n\n\n\n\n\nFileUploadService\n\nFileUploadService\n\nFileModule -->\n\nFileUploadService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileDownloadService\n                        \n                        \n                            FileManageService\n                        \n                        \n                            FileOperationService\n                        \n                        \n                            FileService\n                        \n                        \n                            FileStorageService\n                        \n                        \n                            FileUploadService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileManageService\n                        \n                        \n                            FileOperationService\n                        \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FileController } from './file.controller';\nimport { FileService } from './services/file.service';\nimport { File } from './models/file.entity';\nimport { Task } from './models/task.entity';\nimport { FileOperationService } from './services/file-operation.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ConfigEnum } from '@/common/enum/config.enum';\nimport { FileDownloadService } from './services/file-download.service';\nimport { FileUploadService } from './services/file-upload.service';\nimport { FileManageService } from './services/file-manage.service';\nimport { FileStorageService } from './services/file-storage.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([File, Task]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(ConfigEnum.SECRET),\n          signOptions: {\n            expiresIn: '1h', // 默认一小时\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    FileService,\n    FileOperationService,\n    FileDownloadService,\n    FileUploadService,\n    FileManageService,\n    FileStorageService,\n  ],\n  controllers: [FileController],\n  exports: [FileService, FileManageService, FileOperationService],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileOperationService.html":{"url":"injectables/FileOperationService.html","title":"injectable - FileOperationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileOperationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/services/file-operation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateFileMd5\n                            \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                mergeFile\n                            \n                            \n                                    Async\n                                readFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateFileMd5\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateFileMd5(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-operation.service.ts:61\n                        \n                    \n\n\n            \n                \n                        计算文件 MD5\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                MD5 值\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-operation.service.ts:26\n                        \n                    \n\n\n            \n                \n                        删除文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeFile\n                        \n                    \n                \n            \n            \n                \nmergeFile(chunkPath: string, finalPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-operation.service.ts:44\n                        \n                    \n\n\n            \n                \n                        合并文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chunkPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finalPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-operation.service.ts:13\n                        \n                    \n\n\n            \n                \n                        读取文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport { createReadStream, createWriteStream, existsSync } from 'fs';\nimport { readFile, unlink } from 'fs/promises';\n\n@Injectable()\nexport class FileOperationService {\n  /**\n   * 读取文件\n   * @param filePath\n   * @returns\n   */\n  async readFile(filePath: string): Promise {\n    try {\n      return await readFile(filePath);\n    } catch (error) {\n      throw new InternalServerErrorException('读取文件失败', error);\n    }\n  }\n\n  /**\n   * 删除文件\n   * @param filePath\n   * @returns\n   */\n  async deleteFile(filePath: string) {\n    try {\n      if (existsSync(filePath)) {\n        await unlink(filePath);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      throw new InternalServerErrorException('删除文件失败', error);\n    }\n  }\n\n  /**\n   * 合并文件\n   * @param chunkPath\n   * @param finalPath\n   * @returns\n   */\n  mergeFile(chunkPath: string, finalPath: string) {\n    return new Promise((resolve, reject) => {\n      const chunkStream = createReadStream(chunkPath);\n      const writeStream = createWriteStream(finalPath, { flags: 'a' }); // 追加模式\n      chunkStream.pipe(writeStream, { end: false }); // 不结束流\n      chunkStream.on('end', resolve);\n      chunkStream.on('error', reject);\n      writeStream.on('finish', resolve);\n      writeStream.on('error', reject);\n    });\n  }\n\n  /**\n   * 计算文件 MD5\n   * @param filePath\n   * @returns MD5 值\n   */\n  async calculateFileMd5(filePath: string): Promise {\n    try {\n      const hash = crypto.createHash('md5');\n      const stream = createReadStream(filePath);\n      return await new Promise((resolve, reject) => {\n        stream.on('data', (data) => hash.update(data));\n        stream.on('end', () => resolve(hash.digest('hex')));\n        stream.on('error', (error) =>\n          reject(new InternalServerErrorException('读取文件时出错', error)),\n        );\n      });\n    } catch (error) {\n      throw new InternalServerErrorException('无法读取文件', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/services/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                filesGet\n                            \n                            \n                                    Async\n                                filesListGet\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                findByMd5\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/services/file.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        filesGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    filesGet(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file.service.ts:52\n                        \n                    \n\n\n            \n                \n                        获取文件列表\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        filesListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    filesListGet(page: number, pageSize: number, filters: literal type, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file.service.ts:67\n                        \n                    \n\n\n            \n                \n                        获取文件列表分页\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(fileId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(fileIds: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByMd5\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByMd5(fileMd5: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileMd5\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In, Repository } from 'typeorm';\nimport { File as FileEntity } from '../models/file.entity';\nimport { formatResponse } from '@/common/helpers/response.helper';\n\n@Injectable()\nexport class FileService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n  ) {}\n\n  async findById(fileId: number) {\n    const file = await this.fileRepository.findOne({\n      where: { id: fileId },\n    });\n    if (!file) {\n      throw new NotFoundException('没有找到文件.');\n    }\n    return file;\n  }\n\n  async findByMd5(fileMd5: string) {\n    const file = await this.fileRepository.findOne({\n      where: { fileMd5 },\n    });\n    if (!file) {\n      throw new NotFoundException('没有找到文件.');\n    }\n    return file;\n  }\n\n  async findByIds(fileIds: number[]) {\n    const files = await this.fileRepository.find({\n      where: { id: In(fileIds) },\n    });\n    if (!files.length) {\n      throw new NotFoundException('没有找到文件.');\n    }\n    return files;\n  }\n\n  /**\n   * 获取文件列表\n   * @param page\n   * @param pageSize\n   * @param filters\n   * @param userId\n   * @returns\n   */\n  async filesGet(userId: number) {\n    const files = await this.fileRepository.find({\n      where: { createdBy: userId },\n    });\n    return formatResponse(200, files, '文件获取成功');\n  }\n\n  /**\n   * 获取文件列表分页\n   * @param page\n   * @param pageSize\n   * @param filters\n   * @param userId\n   * @returns\n   */\n  async filesListGet(\n    page: number = 1,\n    pageSize: number = 10,\n    filters: {\n      fileType?: string[];\n      originalFileName?: string;\n      createdStart?: string;\n      createdEnd?: string;\n      updatedStart?: string;\n      updatedEnd?: string;\n    },\n    userId: number, // 添加用户ID\n  ) {\n    const queryBuilder = this.fileRepository.createQueryBuilder('file');\n\n    // 过滤当前用户的文件\n    queryBuilder.andWhere('file.createdBy = :userId', { userId });\n\n    // 过滤文件类型\n    if (filters.fileType) {\n      queryBuilder.andWhere('file.fileType IN (:...fileType)', {\n        fileType: filters.fileType,\n      });\n    }\n\n    // 模糊匹配文件名\n    if (filters.originalFileName) {\n      queryBuilder.andWhere('file.originalFileName LIKE :originalFileName', {\n        originalFileName: `%${filters.originalFileName}%`,\n      });\n    }\n\n    // 创建时间范围\n    if (filters.createdStart && filters.createdEnd) {\n      queryBuilder.andWhere(\n        'file.createdAt BETWEEN :createdStart AND :createdEnd',\n        {\n          createdStart: new Date(filters.createdStart),\n          createdEnd: new Date(filters.createdEnd),\n        },\n      );\n    }\n\n    // 更新时间范围\n    if (filters.updatedStart && filters.updatedEnd) {\n      queryBuilder.andWhere(\n        'file.updatedAt BETWEEN :updatedStart AND :updatedEnd',\n        {\n          updatedStart: new Date(filters.updatedStart),\n          updatedEnd: new Date(filters.updatedEnd),\n        },\n      );\n    }\n\n    // 获取文件列表及总数\n    const [list, total] = await queryBuilder\n      .orderBy('file.id', 'DESC')\n      .skip((page - 1) * pageSize)\n      .take(pageSize)\n      .getManyAndCount();\n\n    return formatResponse(\n      200,\n      {\n        list,\n        total,\n        page,\n        pageSize,\n      },\n      '文件列表获取成功',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSizeValidationPipe.html":{"url":"injectables/FileSizeValidationPipe.html","title":"injectable - FileSizeValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSizeValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/pipe/file-size.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxSize: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/pipe/file-size.pipe.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxSize\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/pipe/file-size.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Express.Multer.File\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { parseSize } from '@/common/utils';\nimport { BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { unlinkSync } from 'fs';\n\n@Injectable()\nexport class FileSizeValidationPipe implements PipeTransform {\n  constructor(private readonly maxSize: string) {}\n\n  transform(file: Express.Multer.File) {\n    // 解析传入的 maxSize 字符串，转换为字节数\n    let parsedSize: number;\n    try {\n      parsedSize = parseSize(this.maxSize);\n    } catch (error) {\n      throw new BadRequestException(`无效的文件大小限制: ${this.maxSize}`);\n    }\n\n    // 判断文件大小是否超出限制\n    if (file?.size > parsedSize) {\n      // 删除文件\n      if (file.path) {\n        try {\n          unlinkSync(file.path); // 立即删除文件\n        } catch (error) {\n          console.error('文件删除失败:', error);\n        }\n      }\n\n      throw new BadRequestException(`单次上传数据大小不能超过 ${this.maxSize}`);\n    }\n\n    return file;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageService.html":{"url":"injectables/FileStorageService.html","title":"injectable - FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/services/file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                computeFileSizeByType\n                            \n                            \n                                    Async\n                                diskUsageGet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/services/file-storage.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        computeFileSizeByType\n                        \n                    \n                \n            \n            \n                \n                        \n                    computeFileSizeByType(createdBy: number, fileTypes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createdBy\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diskUsageGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diskUsageGet(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-storage.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport { getFileType } from '@/common/utils';\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { File as FileEntity } from '../models/file.entity';\n\n@Injectable()\nexport class FileStorageService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n  ) {}\n\n  private async computeFileSizeByType(createdBy: number, fileTypes: string[]) {\n    const queryBuilder = this.fileRepository\n      .createQueryBuilder('file')\n      .select([\n        'SUM(file.fileSize) AS used',\n        'MAX(file.updatedAt) AS last_updated',\n      ])\n      .where('file.createdBy = :createdBy', { createdBy });\n\n    if (fileTypes.length > 0) {\n      queryBuilder.andWhere('file.fileType IN (:...fileTypes)', { fileTypes });\n    }\n\n    return queryBuilder.getRawOne();\n  }\n\n  async diskUsageGet(userId: number) {\n    if (!userId) {\n      throw new InternalServerErrorException('用户信息错误');\n    }\n\n    const imageTypes = getFileType('image');\n    const videoTypes = getFileType('video');\n    const appTypes = getFileType('app');\n    const audioTypes = getFileType('audio');\n    const docTypes = getFileType('application');\n    const otherTypes = getFileType('other');\n\n    try {\n      const [total, image, video, app, audio, docs, other] = await Promise.all([\n        this.computeFileSizeByType(userId, []),\n        this.computeFileSizeByType(userId, imageTypes),\n        this.computeFileSizeByType(userId, videoTypes),\n        this.computeFileSizeByType(userId, appTypes),\n        this.computeFileSizeByType(userId, audioTypes),\n        this.computeFileSizeByType(userId, docTypes),\n        this.computeFileSizeByType(userId, otherTypes),\n      ]);\n\n      return formatResponse(\n        200,\n        {\n          total: total || { used: 0, last_updated: null },\n          image: image || { used: 0, last_updated: null },\n          video: video || { used: 0, last_updated: null },\n          app: app || { used: 0, last_updated: null },\n          audio: audio || { used: 0, last_updated: null },\n          docs: docs || { used: 0, last_updated: null },\n          other: other || { used: 0, last_updated: null },\n        },\n        '空间信息获取成功',\n      );\n    } catch (error) {\n      throw new InternalServerErrorException('获取文件空间信息失败: ' + error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileTypeValidationPipe.html":{"url":"injectables/FileTypeValidationPipe.html","title":"injectable - FileTypeValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileTypeValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/pipe/file-type.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allowedTypes: MIME_TYPE[])\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/pipe/file-type.pipe.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowedTypes\n                                                  \n                                                        \n                                                                        MIME_TYPE[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/pipe/file-type.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Express.Multer.File\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MIME_TYPE } from '@/common/enum/mime.enum';\nimport { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class FileTypeValidationPipe implements PipeTransform {\n  constructor(private readonly allowedTypes: MIME_TYPE[]) {}\n\n  transform(file: Express.Multer.File) {\n    // 检查文件的 MIME 类型是否在允许的类型中\n    if (!this.allowedTypes.includes(file.mimetype as any)) {\n      throw new BadRequestException(\n        `仅支持以下格式的图片: ${this.allowedTypes.join(', ')}`,\n      );\n    }\n    return file;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileUploadService.html":{"url":"injectables/FileUploadService.html","title":"injectable - FileUploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileUploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/services/file-upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkFileType\n                            \n                            \n                                    Private\n                                    Async\n                                checkRepeated\n                            \n                            \n                                    Async\n                                completeUpload\n                            \n                            \n                                    Private\n                                    Async\n                                createFile\n                            \n                            \n                                    Async\n                                createUploadTask\n                            \n                            \n                                    Async\n                                getUploadTaskStatus\n                            \n                            \n                                    Async\n                                updateFile\n                            \n                            \n                                    Async\n                                updateFilesAccess\n                            \n                            \n                                    Async\n                                uploadChunk\n                            \n                            \n                                    Async\n                                uploadSingle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, taskRepository: Repository, fileService: FileService, fileOperationService: FileOperationService, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/services/file-upload.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileOperationService\n                                                  \n                                                        \n                                                                        FileOperationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkFileType(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkRepeated\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkRepeated(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeUpload(userId: number, taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:299\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFile(user_id: number, fileData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUploadTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUploadTask(userId: number, taskMeta: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                taskMeta\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUploadTaskStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUploadTaskStatus(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:396\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFile(userId: number, dto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFilesAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFilesAccess(userId: number, dto: UpdateFilesAccessDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFilesAccessDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadChunk\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadChunk(taskId: number, chunkIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                chunkIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSingle(userId: number, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/services/file-upload.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport { getModelMimeType } from '@/common/utils';\nimport {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { DataSource, In, Repository } from 'typeorm';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CreateTaskDto } from '../dto/create-task.dto';\nimport { UpdateFileDto, UpdateFilesAccessDto } from '../dto/update-file.dto';\nimport { File as FileEntity } from '../models/file.entity';\nimport { Task as TaskEntity } from '../models/task.entity';\nimport { FileOperationService } from './file-operation.service';\nimport { FileService } from './file.service';\n\n@Injectable()\nexport class FileUploadService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n    @InjectRepository(TaskEntity)\n    private readonly taskRepository: Repository,\n    private readonly fileService: FileService,\n    private readonly fileOperationService: FileOperationService,\n    private readonly dataSource: DataSource,\n  ) {}\n\n  // 计算文件 MD5 并查找重复文件\n  private async checkRepeated(file: Express.Multer.File) {\n    const fileBuffer = await this.fileOperationService.readFile(file.path);\n    const fileMd5 = crypto.createHash('md5').update(fileBuffer).digest('hex');\n    const result = await this.fileRepository.findOne({\n      where: { fileMd5 },\n    });\n    return { result, fileMd5 };\n  }\n\n  // 获取文件类型\n  private checkFileType(file: Express.Multer.File): string {\n    return file.mimetype\n      ? file.mimetype\n      : getModelMimeType(path.extname(file.originalname));\n  }\n\n  // 创建文件元数据\n  private async createFile(\n    user_id: number,\n    fileData: any,\n  ): Promise {\n    const fileMeta = this.fileRepository.create({\n      originalFileName: fileData?.originalname || fileData.originalFileName,\n      storageFileName: fileData?.filename || fileData.storageFileName,\n      filePath: fileData?.path || fileData.filePath,\n      fileSize: fileData?.size || fileData.fileSize,\n      fileType: fileData.fileType,\n      fileMd5: fileData.fileMd5,\n      createdBy: user_id,\n      updatedBy: user_id,\n      version: 1,\n    });\n\n    return await this.fileRepository.save(fileMeta);\n  }\n\n  async updateFile(userId: number, dto: UpdateFileDto) {\n    const { fileId, ...fileMeta } = dto;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const file = await this.fileService.findById(fileId);\n      if (file.createdBy !== userId) {\n        throw new BadRequestException('无权修改他人文件');\n      }\n      Object.assign(file, fileMeta);\n      file.updatedBy = userId;\n      file.version += 1;\n      await queryRunner.manager.save(file);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '文件信息修改成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  async updateFilesAccess(userId: number, dto: UpdateFilesAccessDto) {\n    const { fileIds, access } = dto;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const files = await queryRunner.manager.find(FileEntity, {\n        where: { id: In(fileIds) },\n      });\n      if (files.length === 0) {\n        throw new NotFoundException('未找到文件');\n      }\n      for (const file of files) {\n        if (file.createdBy !== userId) {\n          throw new BadRequestException('无权修改他人文件');\n        }\n        file.access = access;\n        file.updatedBy = userId;\n        file.version += 1;\n      }\n      await queryRunner.manager.save(files);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '文件权限修改成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 上传文件\n  async uploadSingle(userId: number, file: Express.Multer.File) {\n    if (!file) {\n      throw new BadRequestException('请上传文件');\n    }\n    try {\n      const { result: foundFile, fileMd5 } = await this.checkRepeated(file);\n      const fileType = this.checkFileType(file);\n      let fileMeta: FileEntity;\n      if (foundFile) {\n        await this.fileOperationService.deleteFile(file.path);\n        fileMeta = await this.createFile(userId, {\n          ...foundFile,\n          originalFileName:\n            file.originalname || file.filename || foundFile.originalFileName,\n        });\n      } else {\n        fileMeta = await this.createFile(userId, {\n          ...file,\n          fileMd5,\n          fileType,\n        });\n      }\n      return formatResponse(\n        200,\n        {\n          fileId: fileMeta.id,\n        },\n        '文件上传成功',\n      );\n    } catch (error) {\n      await fs.promises.unlink(file.path);\n      throw error;\n    }\n  }\n\n  // 分片上传：更新任务中已上传分片数和 chunk_status 状态\n  async uploadChunk(taskId: number, chunkIndex: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    let task: TaskEntity | null = null;\n    try {\n      // 使用悲观锁，防止并发修改\n      task = await queryRunner.manager.findOne(TaskEntity, {\n        where: { id: taskId },\n        lock: { mode: 'pessimistic_write' }, // 悲观锁定该任务行\n      });\n      if (!task) {\n        throw new NotFoundException('Task not found');\n      }\n      if (task.status === 'completed') {\n        throw new BadRequestException('Task already completed');\n      }\n      // 确保 chunkStatus 存在并初始化\n      task.chunkStatus = task.chunkStatus || {};\n\n      // 检查是否已经上传该分片\n      if (task.chunkStatus[chunkIndex] === true) {\n        throw new BadRequestException(`Chunk ${chunkIndex} already uploaded`);\n      }\n\n      // 更新已上传分片数\n      task.uploadedChunks = (task.uploadedChunks || 0) + 1;\n\n      // 更新分片状态\n      task.chunkStatus[chunkIndex] = true;\n\n      await queryRunner.manager.save(TaskEntity, task);\n      await queryRunner.commitTransaction();\n      return formatResponse(\n        200,\n        {\n          taskId: task.id,\n          chunkIndex,\n        },\n        `Chunk ${chunkIndex} uploaded successfully`,\n      );\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      if (task) {\n        task.chunkStatus = task.chunkStatus || {};\n        task.chunkStatus[chunkIndex] = false;\n        await queryRunner.manager.save(task);\n      }\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  async createUploadTask(userId: number, taskMeta: CreateTaskDto) {\n    const { fileName, fileSize, fileType, fileMd5, totalChunks } = taskMeta;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n\n    try {\n      // 查找已有文件\n      const file = await queryRunner.manager.findOne(FileEntity, {\n        where: { fileMd5 },\n      });\n\n      if (file) {\n        // 若找到重复文件，创建文件记录和任务记录，任务状态为 completed\n        const newFile = this.fileRepository.create({\n          originalFileName: fileName,\n          storageFileName: file.storageFileName,\n          filePath: file.filePath,\n          fileSize: file.fileSize,\n          fileType: file.fileType,\n          fileMd5: file.fileMd5,\n          createdBy: userId,\n          updatedBy: userId,\n          version: 1,\n        });\n\n        await queryRunner.manager.save(FileEntity, newFile);\n\n        // 创建任务记录，状态为 completed\n        const task = queryRunner.manager.create(TaskEntity, {\n          fileName: fileName,\n          fileSize: file.fileSize, // 复制已有文件的大小\n          fileType: file.fileType, // 使用已上传文件的类型\n          fileMd5: fileMd5,\n          totalChunks: totalChunks,\n          uploadedChunks: totalChunks,\n          status: 'completed',\n          createdBy: userId,\n          updatedBy: userId,\n          version: 1,\n        });\n        await queryRunner.manager.save(task);\n\n        await queryRunner.commitTransaction();\n\n        return formatResponse(\n          200,\n          { file_id: file.id, status: 'completed' },\n          '上传完毕',\n        );\n      }\n\n      // 文件不存在，创建任务并设置状态为 uploading\n      const task = queryRunner.manager.create(TaskEntity, {\n        fileName: fileName,\n        fileSize: fileSize,\n        fileType: fileType,\n        fileMd5: fileMd5,\n        totalChunks: totalChunks,\n        uploadedChunks: 0,\n        status: 'uploading',\n        createdBy: userId,\n        updatedBy: userId,\n        version: 1,\n      });\n      await queryRunner.manager.save(task);\n\n      await queryRunner.commitTransaction();\n\n      return formatResponse(\n        201,\n        { taskId: task.id, status: 'uploading' },\n        '任务创建成功',\n      );\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  async completeUpload(userId: number, taskId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    let task: TaskEntity | null = null;\n    try {\n      task = await queryRunner.manager.findOne(TaskEntity, {\n        where: { id: taskId },\n      });\n      if (!task) {\n        throw new NotFoundException('未找到上传任务');\n      }\n      if (task.status === 'completed') {\n        return formatResponse(200, null, '当前任务已完成');\n      }\n      if (task.status === 'failed') {\n        throw new InternalServerErrorException('当前任务失败，请重新上传');\n      }\n      if (task.uploadedChunks !== task.totalChunks) {\n        return formatResponse(202, null, '当前任务还未完成');\n      }\n\n      // 确保文件夹存在\n      let folder = 'uploads/other'; // 默认存储\n      if (task.fileType.startsWith('image')) folder = 'uploads/images';\n      else if (task.fileType.startsWith('video')) folder = 'uploads/videos';\n      else if (task.fileType.startsWith('application'))\n        folder = 'uploads/documents';\n      else if (task.fileType.startsWith('audio')) folder = 'uploads/audio';\n\n      // 使用异步文件夹创建\n      await fs.promises.mkdir(folder, { recursive: true });\n\n      const fileExtension = path.extname(task.fileName);\n      const storageFileName = `${uuidv4()}${fileExtension}`;\n      const finalPath = path.join(folder, storageFileName);\n\n      // 合并文件分片，按顺序进行处理\n      const chunkPaths: string[] = [];\n      for (let i = 1; i \n          this.fileOperationService.mergeFile(chunkPath, finalPath),\n        ),\n      );\n\n      // 删除分片文件\n      const chunkDeletionPromises = chunkPaths.map((chunkPath) =>\n        fs.promises.unlink(chunkPath),\n      );\n      await Promise.all(chunkDeletionPromises);\n\n      // 更新任务状态\n      task.status = 'completed';\n      task.fileSize = fs.statSync(finalPath).size;\n      await queryRunner.manager.save(task);\n\n      const newFile = this.fileRepository.create({\n        originalFileName: task.fileName,\n        storageFileName: storageFileName,\n        filePath: finalPath,\n        fileSize: task.fileSize,\n        fileType: task.fileType,\n        fileMd5: task.fileMd5,\n        createdBy: userId,\n        updatedBy: userId,\n      });\n      await queryRunner.manager.save(newFile);\n\n      await queryRunner.commitTransaction();\n      return formatResponse(201, null, 'File uploaded and merged successfully');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      if (task) {\n        // 清理文件\n        const chunkDeletionPromises: Promise[] = [];\n        for (let i = 1; i  {\n              console.error(`Failed to delete chunk ${i}: ${err.message}`);\n            }),\n          );\n        }\n        await Promise.all(chunkDeletionPromises);\n      }\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  async getUploadTaskStatus(taskId: number) {\n    const task = await this.taskRepository.findOne({\n      where: { id: taskId },\n    });\n    if (!task) {\n      throw new NotFoundException('未找到上传任务');\n    }\n    return formatResponse(200, {\n      taskId: task.id,\n      status: task.status,\n      chunkStatus: task.chunkStatus,\n      totalChunks: task.totalChunks,\n      uploadedChunks: task.uploadedChunks,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FilesGuard.html":{"url":"guards/FilesGuard.html","title":"guard - FilesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FilesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/file/guards/file.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/file/guards/file.guard.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/guards/file.guard.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { FileService } from '@/modules/file/services/file.service';\nimport { File as FileEntity } from '@/modules/file/models/file.entity';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      fileMeta: FileEntity;\n      filesMeta: FileEntity[];\n    }\n  }\n}\n\n@Injectable()\nexport class FileGuard implements CanActivate {\n  constructor(private readonly fileService: FileService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileId = request.params.fileId;\n    const userId = request.user?.userId;\n\n    // 查询文件信息并将其存储到 request.file 中\n    const file = await this.fileService.findById(fileId);\n\n    // 处理权限验证\n    if (\n      file.access === 'public' ||\n      (file.access === 'private' && userId === file.createdBy)\n    ) {\n      request.fileMeta = file; // 将文件信息存储到请求中\n      return true;\n    }\n\n    throw new ForbiddenException('当前文件无权限访问.');\n  }\n}\n\n@Injectable()\nexport class FilesGuard implements CanActivate {\n  constructor(private readonly fileService: FileService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileIds = request.body.fileIds;\n    const userId = request.user?.userId;\n\n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      throw new BadRequestException('非法参数');\n    }\n\n    // 查询多个文件信息并将其存储到请求中\n    const files = await this.fileService.findByIds(fileIds);\n\n    const filesWithAccess: FileEntity[] = [];\n\n    for (const file of files) {\n      if (\n        file.access === 'public' ||\n        (file.access === 'private' && userId === file.createdBy)\n      ) {\n        filesWithAccess.push(file); // 只有有权限的文件才会被加入\n      } else {\n        throw new ForbiddenException('您无权操作.');\n      }\n    }\n\n    request.filesMeta = filesWithAccess; // 将文件信息存储到请求中\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/http-exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n    const responseBody = exception.getResponse() as any;\n\n    // 可以通过传递的错误对象设置不同的 code 和 message\n    const code = responseBody.code || status; // 如果没有自定义 code，就使用 HTTP 状态码\n    const message = responseBody.message || 'An error occurred';\n\n    response.status(status).json({\n      code, // 错误代码（可以根据需要自定义）\n      data: null, // 错误时数据为 null\n      message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: UserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserPayload } from '@/common/guards/auth.guard';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigEnum } from 'src/common/enum/config.enum';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(protected configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(ConfigEnum.SECRET),\n    });\n  }\n\n  async validate(payload: UserPayload) {\n    return {\n      userId: payload.userId,\n      username: payload.username,\n      roles: payload.roles,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KnowledgeController.html":{"url":"controllers/KnowledgeController.html","title":"controller - KnowledgeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KnowledgeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/knowledge/knowledge.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                knowledge\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                knowledgeCreate\n                            \n                            \n                                    \n                                    \n                                knowledgeDelete\n                            \n                            \n                                    \n                                knowledgeDetailGet\n                            \n                            \n                                    \n                                knowledgeGet\n                            \n                            \n                                    \n                                knowledgeListGet\n                            \n                            \n                                    \n                                knowledgeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        knowledgeCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeCreate(dto: CreatePlantDiseaseKnowledgeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/knowledge/knowledge.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        knowledgeDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeDelete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/knowledge/knowledge.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        knowledgeDetailGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeDetailGet(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/knowledge/knowledge.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        knowledgeGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/knowledge/knowledge.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        knowledgeListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeListGet(page: number, pageSize: number, category?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/knowledge/knowledge.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        knowledgeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeUpdate(id: number, dto: UpdatePlantDiseaseKnowledgeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/knowledge/knowledge.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@/common/decorator/roles.decorator';\nimport { Role } from '@/common/enum/role.enum';\nimport { AuthGuard } from '@/common/guards/auth.guard';\nimport { RolesGuard } from '@/common/guards/roles.guard';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreatePlantDiseaseKnowledgeDto } from './dto/create-knowledge.dto';\nimport { UpdatePlantDiseaseKnowledgeDto } from './dto/update-knowledge.dto';\nimport { KnowledgeManageService } from './services/knowledge-manage.service';\n\n@Controller('knowledge')\n@Roles(Role.Admin, Role.Expert)\n@UseGuards(AuthGuard, RolesGuard)\nexport class KnowledgeController {\n  constructor(private readonly manageService: KnowledgeManageService) {}\n\n  // 创建病害知识记录\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  knowledgeCreate(@Body() dto: CreatePlantDiseaseKnowledgeDto) {\n    this.manageService.knowledgeCreate(dto);\n  }\n\n  // 获取所有病害知识记录\n  @Get()\n  knowledgeGet() {\n    return this.manageService.knowledgeGet();\n  }\n\n  // 获取所有病害知识记录分页\n  @Get('list')\n  knowledgeListGet(\n    @Query('page', ParseIntPipe) page: number = 1,\n    @Query('pageSize', ParseIntPipe) pageSize: number = 10,\n    @Query('category') category?: string,\n  ) {\n    return this.manageService.knowledgeListGet(page, pageSize, { category });\n  }\n\n  // 获取单个病害知识记录\n  @Get(':id')\n  knowledgeDetailGet(@Param('id') id: number) {\n    return this.manageService.knowledgeDetailGet(id);\n  }\n\n  // 更新病害知识记录\n  @Put(':id')\n  knowledgeUpdate(\n    @Param('id') id: number,\n    @Body() dto: UpdatePlantDiseaseKnowledgeDto,\n  ) {\n    return this.manageService.knowledgeUpdate(id, dto);\n  }\n\n  // 删除病害知识记录\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  knowledgeDelete(@Param('id') id: number) {\n    return this.manageService.knowledgeDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KnowledgeManageService.html":{"url":"injectables/KnowledgeManageService.html","title":"injectable - KnowledgeManageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KnowledgeManageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/knowledge/services/knowledge-manage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                knowledgeCreate\n                            \n                            \n                                    Async\n                                knowledgeDelete\n                            \n                            \n                                    Async\n                                knowledgeDetailGet\n                            \n                            \n                                    Async\n                                knowledgeGet\n                            \n                            \n                                    Async\n                                knowledgeListGet\n                            \n                            \n                                    Async\n                                knowledgeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(knowledgeRepository: Repository, knowledgeService: KnowledgeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/knowledge/services/knowledge-manage.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        knowledgeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        knowledgeService\n                                                  \n                                                        \n                                                                        KnowledgeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeCreate(dto: CreatePlantDiseaseKnowledgeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge-manage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge-manage.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeDetailGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeDetailGet(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge-manage.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeGet()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge-manage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeListGet(page: number, pageSize: number, filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge-manage.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeUpdate(id: number, updateDto: UpdatePlantDiseaseKnowledgeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge-manage.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { formatResponse } from '@/common/helpers/response.helper';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreatePlantDiseaseKnowledgeDto } from '../dto/create-knowledge.dto';\nimport { UpdatePlantDiseaseKnowledgeDto } from '../dto/update-knowledge.dto';\nimport { PlantDiseaseKnowledge } from '../knowledge.entity';\nimport { KnowledgeService } from './knowledge.service';\n\n@Injectable()\nexport class KnowledgeManageService {\n  constructor(\n    @InjectRepository(PlantDiseaseKnowledge)\n    private readonly knowledgeRepository: Repository,\n    private readonly knowledgeService: KnowledgeService,\n  ) {}\n\n  // 创建病害知识记录\n  async knowledgeCreate(dto: CreatePlantDiseaseKnowledgeDto) {\n    await this.knowledgeService.create(dto);\n    return formatResponse(201, null, '病害知识创建成功');\n  }\n\n  async knowledgeGet() {\n    return await this.knowledgeRepository.find();\n  }\n\n  // 获取所有病害知识记录\n  async knowledgeListGet(\n    page: number = 1,\n    pageSize: number = 10,\n    filters: {\n      category?: string;\n    },\n  ) {\n    const queryBuilder = this.knowledgeRepository.createQueryBuilder(\n      'plant_disease_knowledge',\n    );\n    if (filters.category) {\n      queryBuilder.where('knowledge.category = :category', {\n        category: filters.category,\n      });\n    }\n    const [list, total] = await queryBuilder\n      .skip((page - 1) * pageSize)\n      .take(pageSize)\n      .getManyAndCount();\n\n    return formatResponse(\n      200,\n      {\n        list,\n        page,\n        pageSize,\n        total,\n      },\n      '病害知识列表获取成功',\n    );\n  }\n\n  // 获取单个病害知识记录\n  async knowledgeDetailGet(id: number) {\n    const knowledge = await this.knowledgeService.findById(id);\n    return formatResponse(200, knowledge, '病害知识获取成功');\n  }\n\n  // 更新病害知识记录\n  async knowledgeUpdate(id: number, updateDto: UpdatePlantDiseaseKnowledgeDto) {\n    const knowledge = await this.knowledgeService.findById(id);\n    Object.assign(knowledge, updateDto);\n    await this.knowledgeRepository.save(knowledge);\n    return formatResponse(200, null, '病害知识更新成功');\n  }\n\n  // 删除病害知识记录\n  async knowledgeDelete(id: number) {\n    await this.knowledgeRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KnowledgeModule.html":{"url":"modules/KnowledgeModule.html","title":"module - KnowledgeModule","body":"\n                   \n\n\n\n\n    Modules\n    KnowledgeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KnowledgeModule\n\n\n\ncluster_KnowledgeModule_providers\n\n\n\n\nKnowledgeManageService\n\nKnowledgeManageService\n\n\n\nKnowledgeModule\n\nKnowledgeModule\n\nKnowledgeModule -->\n\nKnowledgeManageService->KnowledgeModule\n\n\n\n\n\nKnowledgeService\n\nKnowledgeService\n\nKnowledgeModule -->\n\nKnowledgeService->KnowledgeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/knowledge/knowledge.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KnowledgeManageService\n                        \n                        \n                            KnowledgeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KnowledgeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { KnowledgeController } from './knowledge.controller';\nimport { PlantDiseaseKnowledge } from './knowledge.entity';\nimport { KnowledgeManageService } from './services/knowledge-manage.service';\nimport { KnowledgeService } from './services/knowledge.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([PlantDiseaseKnowledge])],\n  controllers: [KnowledgeController],\n  providers: [KnowledgeService, KnowledgeManageService],\n})\nexport class KnowledgeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KnowledgeService.html":{"url":"injectables/KnowledgeService.html","title":"injectable - KnowledgeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KnowledgeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/knowledge/services/knowledge.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(knowledgeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/knowledge/services/knowledge.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        knowledgeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreatePlantDiseaseKnowledgeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdatePlantDiseaseKnowledgeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/knowledge/services/knowledge.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreatePlantDiseaseKnowledgeDto } from '../dto/create-knowledge.dto';\nimport { UpdatePlantDiseaseKnowledgeDto } from '../dto/update-knowledge.dto';\nimport { PlantDiseaseKnowledge } from '../knowledge.entity';\n\n@Injectable()\nexport class KnowledgeService {\n  constructor(\n    @InjectRepository(PlantDiseaseKnowledge)\n    private readonly knowledgeRepository: Repository,\n  ) {}\n\n  // 创建病害知识记录\n  create(dto: CreatePlantDiseaseKnowledgeDto) {\n    const knowledge = this.knowledgeRepository.create(dto);\n    return this.knowledgeRepository.save(knowledge);\n  }\n\n  // 获取所有病害知识记录\n  findAll() {\n    return this.knowledgeRepository.find();\n  }\n\n  // 获取单个病害知识记录\n  async findById(id: number) {\n    const knowledge = await this.knowledgeRepository.findOne({ where: { id } });\n    if (!knowledge) {\n      throw new NotFoundException('病害知识记录不存在');\n    }\n    return knowledge;\n  }\n\n  // 更新病害知识记录\n  async update(id: number, dto: UpdatePlantDiseaseKnowledgeDto) {\n    const knowledge = await this.knowledgeRepository.findOne({ where: { id } });\n    if (!knowledge) {\n      return null;\n    }\n    const updatedKnowledge = this.knowledgeRepository.merge(knowledge, dto);\n    return this.knowledgeRepository.save(updatedKnowledge);\n  }\n\n  // 删除病害知识记录\n  remove(id: number) {\n    return this.knowledgeRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '登陆必须为字符串类型！'})@IsNotEmpty({message: '登陆输入不能为空！'})@ValidateIf(o => )@IsEmail({}, {message: '请输入有效的邮箱地址！'})@ValidateIf(o => )@Matches(/^[a-zA-Z0-9_-]{3,16}$/, {message: '用户名必须由3-16个字母、数字、下划线或破折号组成！'})@ApiProperty({description: '用户名/邮箱', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '密码必须为字符串类型！'})@IsNotEmpty({message: '密码输入不能为空！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  ValidateIf,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsString({ message: '登陆必须为字符串类型！' })\n  @IsNotEmpty({ message: '登陆输入不能为空！' })\n  @ValidateIf((o) => /^\\S+@\\S+\\.\\S+$/.test(o.login)) // 如果是邮箱格式，执行邮箱验证\n  @IsEmail({}, { message: '请输入有效的邮箱地址！' }) // 邮箱格式验证\n  @ValidateIf((o) => !/^\\S+@\\S+\\.\\S+$/.test(o.login)) // 如果不是邮箱格式，认为它是用户名\n  @Matches(/^[a-zA-Z0-9_-]{3,16}$/, {\n    message: '用户名必须由3-16个字母、数字、下划线或破折号组成！',\n  })\n  @ApiProperty({\n    description: '用户名/邮箱',\n    example: 'admin',\n  })\n  login: string;\n\n  @IsString({ message: '密码必须为字符串类型！' })\n  @IsNotEmpty({ message: '密码输入不能为空！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Menu.html":{"url":"entities/Menu.html","title":"entity - Menu","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu/menu.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isLink\n                            \n                            \n                                    \n                                    \n                                parent\n                            \n                            \n                                    \n                                parentId\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, menu => menu.parent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, menu => menu.children)@JoinColumn({name: 'parentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/menu/menu.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\n@Entity('menu')\nexport class Menu {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  icon: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  title: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  path: string;\n\n  @Column({ nullable: true })\n  parentId: number | null;\n\n  @Column({ type: 'varchar', nullable: true })\n  isLink: string | null;\n\n  // 定义父级菜单（OneToMany）\n  @ManyToOne(() => Menu, (menu) => menu.children)\n  @JoinColumn({ name: 'parentId' })\n  parent: Menu;\n\n  // 定义子级菜单（OneToMany）\n  @OneToMany(() => Menu, (menu) => menu.parent)\n  children: Menu[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController.html":{"url":"controllers/MenuController.html","title":"controller - MenuController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu/menu.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                menu\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getRoutes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(menuData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/menu/menu.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/menu/menu.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/menu/menu.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoutes(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('routes')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/menu/menu.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/menu/menu.controller.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, menuData: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/menu/menu.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                menuData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthGuard } from '@/common/guards/auth.guard';\nimport { formatResponse } from '@/common/helpers/response.helper';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Req,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { Menu } from './menu.entity';\nimport { MenuService } from './menu.service';\nimport { Roles } from '@/common/decorator/roles.decorator';\nimport { Role } from '@/common/enum/role.enum';\nimport { RolesGuard } from '@/common/guards/roles.guard';\nimport { TypeormFilter } from '@/common/filters/typeorm.filter';\n\n@Controller('menu')\n@UseGuards(AuthGuard)\n@UseFilters(TypeormFilter)\nexport class MenuController {\n  constructor(private readonly menuService: MenuService) {}\n\n  // 获取个人路由权限\n  @Get('routes')\n  async getRoutes(@Req() req) {\n    try {\n      const user = req.user;\n      const routes = await this.menuService.findAuthRoutes(user.id);\n      return formatResponse(200, routes, 'Routes fetched successfully');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 获取所有菜单\n  @Get()\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findAll() {\n    try {\n      const menus = await this.menuService.findAll();\n      return formatResponse(200, menus, 'Menus fetched successfully');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 获取单个菜单\n  @Get(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findOne(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    try {\n      const menu = await this.menuService.findOne(id);\n      if (!menu) {\n        throw new NotFoundException('Menu not found');\n      }\n      return formatResponse(200, menu, 'Menu fetched successfully');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 创建新菜单\n  @Post()\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.CREATED)\n  async create(@Body() menuData: Partial) {\n    try {\n      const newMenu = await this.menuService.create(menuData);\n      return formatResponse(201, newMenu, 'Menu created successfully');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 更新菜单\n  @Put(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async update(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() menuData: Partial,\n  ) {\n    try {\n      const updatedMenu = await this.menuService.update(id, menuData);\n      if (!updatedMenu) {\n        throw new NotFoundException('Menu not found');\n      }\n      return formatResponse(200, updatedMenu, 'Menu updated successfully');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 删除菜单\n  @Delete(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async remove(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    try {\n      await this.menuService.remove(id);\n      return formatResponse(200, null, 'Menu deleted successfully');\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuModule.html":{"url":"modules/MenuModule.html","title":"module - MenuModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\n\nMenuService\n\nMenuService\n\n\n\nMenuModule\n\nMenuModule\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/menu/menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MenuService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MenuController } from './menu.controller';\nimport { MenuService } from './menu.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Menu } from './menu.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Menu])],\n  controllers: [MenuController],\n  providers: [MenuService],\n})\nexport class MenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/menu/menu.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAuthRoutes\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/menu/menu.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(menuData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/menu/menu.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/menu/menu.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAuthRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAuthRoutes(roleId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/menu/menu.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/menu/menu.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/menu/menu.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, menuData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/menu/menu.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                menuData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Menu } from './menu.entity';\n\n@Injectable()\nexport class MenuService {\n  constructor(\n    @InjectRepository(Menu)\n    private readonly menuRepository: Repository,\n  ) {}\n\n  // 获取个人路由权限\n  async findAuthRoutes(roleId: number) {\n    const menus = await this.menuRepository.find({\n      relations: ['parent', 'children'],\n      // where: {\n      //   // TODO: 根据角色ID过滤菜单\n      //   // 假设角色与菜单的关系表存在，这里根据 roleId 过滤相关菜单\n      //   // 请根据实际表结构和关系来修改查询条件\n      //   // roleId: roleId, // 角色ID\n      // },\n      order: { id: 'ASC' }, // 按照ID升序排列\n    });\n\n    // 构建菜单树\n    const buildMenuTree = (parentId: number | null): any[] => {\n      return menus\n        .filter((menu) => menu.parentId === parentId)\n        .map((menu) => ({\n          icon: menu.icon,\n          title: menu.title,\n          path: menu.path,\n          isLink: menu.isLink,\n          children: buildMenuTree(menu.id), // 递归构建子菜单\n        }));\n    };\n\n    // 返回顶层菜单\n    return buildMenuTree(null);\n  }\n\n  // 获取所有菜单\n  async findAll(): Promise {\n    return this.menuRepository.find({\n      relations: ['parent', 'children'],\n    });\n  }\n\n  // 根据ID获取单个菜单\n  async findOne(id: number): Promise {\n    return this.menuRepository.findOne({\n      where: { id },\n      relations: ['parent', 'children'],\n    });\n  }\n\n  // 创建新菜单\n  async create(menuData: Partial): Promise {\n    const menu = this.menuRepository.create(menuData);\n    return this.menuRepository.save(menu);\n  }\n\n  // 更新菜单\n  async update(id: number, menuData: Partial) {\n    await this.menuRepository.update(id, menuData);\n    return this.findOne(id);\n  }\n\n  // 删除菜单\n  async remove(id: number): Promise {\n    await this.menuRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseFileIdsPipe.html":{"url":"injectables/ParseFileIdsPipe.html","title":"injectable - ParseFileIdsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseFileIdsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/pipe/delete.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/pipe/delete.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  PipeTransform,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\n\n@Injectable()\nexport class ParseFileIdsPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    // 如果没有传递参数，抛出异常\n    if (!value) {\n      throw new BadRequestException('文件 ID 不能为空');\n    }\n\n    // 如果值是字符串，尝试分割并转换为数字数组\n    if (typeof value === 'string') {\n      const fileIds = value.split(',').map((id) => {\n        const numberId = Number(id);\n        if (isNaN(numberId)) {\n          throw new BadRequestException(`无效的文件 ID: ${id}`);\n        }\n        return numberId;\n      });\n\n      return fileIds;\n    }\n\n    // 如果值已经是数组，直接返回数组\n    if (Array.isArray(value)) {\n      const fileIds = value.map((id) => {\n        const numberId = Number(id);\n        if (isNaN(numberId)) {\n          throw new BadRequestException(`无效的文件 ID: ${id}`);\n        }\n        return numberId;\n      });\n\n      return fileIds;\n    }\n\n    // 如果值既不是字符串也不是数组，抛出异常\n    throw new BadRequestException('文件 ID 参数格式错误');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseFileTypePipe.html":{"url":"injectables/ParseFileTypePipe.html","title":"injectable - ParseFileTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseFileTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/pipe/type.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/file/pipe/type.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\n\n@Injectable()\nexport class ParseFileTypePipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    // 如果值是 undefined 或 null，直接返回\n    if (value === undefined || value === null || value === '') {\n      return value;\n    }\n\n    // 如果值是字符串并且包含逗号，尝试将其分割为字符串数组\n    if (typeof value === 'string') {\n      // 去除多余的空格后再拆分\n      const result = value\n        .split(',')\n        .map((item) => item.trim())\n        .filter((item) => item);\n\n      // 如果分割后的结果为空，抛出错误\n      if (result.length === 0) {\n        throw new BadRequestException('文件类型不能为空');\n      }\n\n      return result;\n    }\n\n    // 如果值已经是数组，确保数组元素是字符串类型\n    if (Array.isArray(value)) {\n      // 确保数组中的每个元素都是字符串\n      const result = value.map((item) => {\n        if (typeof item !== 'string') {\n          throw new BadRequestException('文件类型数组中的每个元素必须是字符串');\n        }\n        return item.trim();\n      });\n\n      return result;\n    }\n\n    // 如果值既不是字符串也不是数组，抛出错误\n    throw new BadRequestException('文件类型参数格式不正确');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseStringDatePipe.html":{"url":"injectables/ParseStringDatePipe.html","title":"injectable - ParseStringDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseStringDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipe/string-date.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pipe/string-date.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { isDate } from 'class-validator'; // 可使用 class-validator 库检查日期格式\n\n@Injectable()\nexport class ParseStringDatePipe implements PipeTransform {\n  transform(value: string) {\n    if (value && !isDate(new Date(value))) {\n      throw new BadRequestException('非法日期格式');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlantDiseaseKnowledge.html":{"url":"entities/PlantDiseaseKnowledge.html","title":"entity - PlantDiseaseKnowledge","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlantDiseaseKnowledge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/knowledge/knowledge.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affectedPart\n                            \n                            \n                                    \n                                affectedPlant\n                            \n                            \n                                    \n                                biologicalControl\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                cause\n                            \n                            \n                                    \n                                chemicalControl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                culturalPractices\n                            \n                            \n                                    \n                                diseaseCode\n                            \n                            \n                                    \n                                diseaseCycle\n                            \n                            \n                                    \n                                diseaseName\n                            \n                            \n                                    \n                                diseaseType\n                            \n                            \n                                    \n                                documentUrl\n                            \n                            \n                                    \n                                firstReported\n                            \n                            \n                                    \n                                geographicalArea\n                            \n                            \n                                    \n                                historicalCases\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imageUrl\n                            \n                            \n                                    \n                                preventiveMeasures\n                            \n                            \n                                    \n                                researchSources\n                            \n                            \n                                    \n                                resistantVarieties\n                            \n                            \n                                    \n                                scientificName\n                            \n                            \n                                    \n                                severity\n                            \n                            \n                                    \n                                spreadMethod\n                            \n                            \n                                    \n                                symptoms\n                            \n                            \n                                    \n                                synonyms\n                            \n                            \n                                    \n                                tags\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                videoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affectedPart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '受影响的植物部位'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affectedPlant\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '受影响的植物种类'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        biologicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '生物防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害分类'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cause\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病因'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chemicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '化学防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, comment: '记录创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        culturalPractices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '文化控制措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true, comment: '病害唯一编码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseCycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害生命周期'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, comment: '病害名称'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true, comment: '病害类型'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        documentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '相关文档的 URL 地址'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstReported\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: true, comment: '首次报告时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geographicalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害地理分布'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historicalCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '历史病例'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害图片的 URL 地址'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preventiveMeasures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '防治措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        researchSources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '研究来源'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resistantVarieties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '抗病品种'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害的学名（如果有）'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true, comment: '病害严重程度'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        spreadMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害传播方式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symptoms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害症状描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        synonyms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害的同义词'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害标签'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP', comment: '记录更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        videoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '相关视频的 URL 地址'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/knowledge.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('plant_disease_knowledge')\n@Index('diseaseCode', ['diseaseCode'], { unique: true })\nexport class PlantDiseaseKnowledge {\n  @PrimaryGeneratedColumn()\n  id: number; // 唯一标识每条病害记录\n\n  @Column({ type: 'varchar', length: 255, comment: '病害名称' })\n  diseaseName: string; // 病害名称\n\n  @Column({\n    type: 'varchar',\n    length: 100,\n    nullable: true,\n    comment: '病害唯一编码',\n  })\n  diseaseCode: string | null; // 病害唯一编码\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '病害的学名（如果有）',\n  })\n  scientificName: string | null; // 病害的学名（如果有）\n\n  @Column({ type: 'text', nullable: true, comment: '病害的同义词' })\n  synonyms: string | null; // 病害的同义词\n\n  @Column({ type: 'text', nullable: true, comment: '病害症状描述' })\n  symptoms: string | null; // 病害症状描述\n\n  @Column({ type: 'varchar', length: 255, nullable: true, comment: '病因' })\n  cause: string | null; // 病因\n\n  @Column({ type: 'varchar', length: 100, nullable: true, comment: '病害类型' })\n  diseaseType: string | null; // 病害类型\n\n  @Column({ type: 'text', nullable: true, comment: '受影响的植物种类' })\n  affectedPlant: string | null; // 受影响的植物种类\n\n  @Column({ type: 'text', nullable: true, comment: '受影响的植物部位' })\n  affectedPart: string | null; // 受影响的植物部位\n\n  @Column({ type: 'text', nullable: true, comment: '病害生命周期' })\n  diseaseCycle: string | null; // 病害生命周期\n\n  @Column({ type: 'text', nullable: true, comment: '病害传播方式' })\n  spreadMethod: string | null; // 病害传播方式\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '病害地理分布',\n  })\n  geographicalArea: string | null; // 病害地理分布\n\n  @Column({ type: 'date', nullable: true, comment: '首次报告时间' })\n  firstReported: string | null; // 首次报告时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    comment: '记录创建时间',\n  })\n  createdAt: Date; // 记录创建时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n    comment: '记录更新时间',\n  })\n  updatedAt: Date; // 记录更新时间\n\n  @Column({ type: 'text', nullable: true, comment: '防治措施' })\n  preventiveMeasures: string | null; // 防治措施\n\n  @Column({ type: 'text', nullable: true, comment: '化学防治方法' })\n  chemicalControl: string | null; // 化学防治方法\n\n  @Column({ type: 'text', nullable: true, comment: '生物防治方法' })\n  biologicalControl: string | null; // 生物防治方法\n\n  @Column({ type: 'text', nullable: true, comment: '文化控制措施' })\n  culturalPractices: string | null; // 文化控制措施\n\n  @Column({ type: 'text', nullable: true, comment: '抗病品种' })\n  resistantVarieties: string | null; // 抗病品种\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '病害图片的 URL 地址',\n  })\n  imageUrl: string | null; // 病害图片的 URL 地址\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '相关文档的 URL 地址',\n  })\n  documentUrl: string | null; // 相关文档的 URL 地址\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '相关视频的 URL 地址',\n  })\n  videoUrl: string | null; // 相关视频的 URL 地址\n\n  @Column({ type: 'varchar', length: 255, nullable: true, comment: '病害分类' })\n  category: string | null; // 病害分类\n\n  @Column({\n    type: 'varchar',\n    length: 100,\n    nullable: true,\n    comment: '病害严重程度',\n  })\n  severity: string | null; // 病害严重程度\n\n  @Column({ type: 'text', nullable: true, comment: '病害标签' })\n  tags: string | null; // 病害标签\n\n  @Column({ type: 'text', nullable: true, comment: '历史病例' })\n  historicalCases: string | null; // 历史病例\n\n  @Column({ type: 'text', nullable: true, comment: '研究来源' })\n  researchSources: string | null; // 研究来源\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Profile.html":{"url":"entities/Profile.html","title":"entity - Profile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity('profile')\nexport class Profile {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'tinyint', default: 0 })\n  gender: number;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  avatar: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  name: string | null;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  phone: string | null;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  address: string | null;\n\n  // 个人信息和用户是一对一关系\n  @OneToOne(() => User)\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: '邮箱格式不正确！'})@IsNotEmpty({message: '邮箱不能为空！'})@ApiProperty({description: '邮箱', example: 'haojingxin0121@qq.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '用户名必须为字符串类型！'})@IsNotEmpty({message: '用户名不能为空！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegisterDto {\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @IsNotEmpty({ message: '邮箱不能为空！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: 'haojingxin0121@qq.com',\n  })\n  email: string;\n\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @IsNotEmpty({ message: '用户名不能为空！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/auth.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport interface UserPayload {\n  userId: number;\n  roles: string[];\n  username?: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserPayload;\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request-1.html":{"url":"interfaces/Request-1.html","title":"interface - Request-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/guards/file.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileMeta\n                                        \n                                \n                                \n                                        \n                                            filesMeta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileMeta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileMeta:         FileEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filesMeta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filesMeta:         FileEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FileService } from '@/modules/file/services/file.service';\nimport { File as FileEntity } from '@/modules/file/models/file.entity';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      fileMeta: FileEntity;\n      filesMeta: FileEntity[];\n    }\n  }\n}\n\n@Injectable()\nexport class FileGuard implements CanActivate {\n  constructor(private readonly fileService: FileService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileId = request.params.fileId;\n    const userId = request.user?.userId;\n\n    // 查询文件信息并将其存储到 request.file 中\n    const file = await this.fileService.findById(fileId);\n\n    // 处理权限验证\n    if (\n      file.access === 'public' ||\n      (file.access === 'private' && userId === file.createdBy)\n    ) {\n      request.fileMeta = file; // 将文件信息存储到请求中\n      return true;\n    }\n\n    throw new ForbiddenException('当前文件无权限访问.');\n  }\n}\n\n@Injectable()\nexport class FilesGuard implements CanActivate {\n  constructor(private readonly fileService: FileService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileIds = request.body.fileIds;\n    const userId = request.user?.userId;\n\n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      throw new BadRequestException('非法参数');\n    }\n\n    // 查询多个文件信息并将其存储到请求中\n    const files = await this.fileService.findByIds(fileIds);\n\n    const filesWithAccess: FileEntity[] = [];\n\n    for (const file of files) {\n      if (\n        file.access === 'public' ||\n        (file.access === 'private' && userId === file.createdBy)\n      ) {\n        filesWithAccess.push(file); // 只有有权限的文件才会被加入\n      } else {\n        throw new ForbiddenException('您无权操作.');\n      }\n    }\n\n    request.filesMeta = filesWithAccess; // 将文件信息存储到请求中\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/reset-pass.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/reset-pass.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, Length } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                alias\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.roles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from '../user/models/user.entity';\n\n@Entity('role')\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255, unique: true })\n  name: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  alias: string | null;\n\n  @ManyToMany(() => User, (user) => user.roles)\n  users: User[];\n\n  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({\n    type: 'datetime',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                dict\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.Admin)@HttpCode(HttpStatus.CREATED)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        dict\n                        \n                    \n                \n            \n            \n                \n                        \n                    dict()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dict')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/role/role.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@/common/decorator/roles.decorator';\nimport { Role } from '@/common/enum/role.enum';\nimport { TypeormFilter } from '@/common/filters/typeorm.filter';\nimport { AuthGuard } from '@/common/guards/auth.guard';\nimport { RolesGuard } from '@/common/guards/roles.guard';\nimport { formatResponse } from '@/common/helpers/response.helper';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { RoleService } from './role.service';\n\n@Controller('role')\n@UseGuards(AuthGuard)\n@UseFilters(TypeormFilter)\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @Get('dict')\n  async dict() {\n    const dict = await this.roleService.findDict();\n    return formatResponse(200, dict, '角色字典获取成功');\n  }\n\n  @Get()\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findAll() {\n    const roles = await this.roleService.findAll();\n    return formatResponse(200, roles, '获取角色列表成功');\n  }\n\n  @Get(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findOne(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    const role = await this.roleService.findOne(id);\n    return formatResponse(200, role, '获取角色成功');\n  }\n\n  @Post()\n  @Roles(Role.Admin)\n  @HttpCode(HttpStatus.CREATED)\n  @UseGuards(RolesGuard)\n  async create(@Body() dto: CreateRoleDto) {\n    await this.roleService.create(dto);\n    return formatResponse(201, null, '角色创建成功');\n  }\n\n  @Put(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async update(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() dto: UpdateRoleDto,\n  ) {\n    const updatedRole = await this.roleService.update(id, dto);\n    return formatResponse(200, updatedRole, '角色更新成功');\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async remove(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return await this.roleService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role.entity';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  providers: [RoleService],\n  controllers: [RoleController],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findDict\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/role/role.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDict\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDict()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/role/role.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { Role } from './role.entity';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(Role)\n    private roleRepository: Repository,\n  ) {}\n\n  // 获取所有角色\n  async findAll() {\n    return await this.roleRepository.find();\n  }\n\n  // 获取单个角色\n  async findOne(id: number) {\n    const role = await this.roleRepository.findOne({\n      where: { id },\n      relations: ['users'],\n    });\n    if (!role) {\n      throw new NotFoundException('角色不存在');\n    }\n    return role;\n  }\n\n  // 创建角色\n  async create(dto: CreateRoleDto) {\n    if (await this.roleRepository.findOne({ where: { name: dto.name } })) {\n      throw new BadRequestException('角色已存在');\n    }\n    const role = this.roleRepository.create(dto);\n    return await this.roleRepository.save(role);\n  }\n\n  // 更新角色\n  async update(id: number, dto: UpdateRoleDto) {\n    const role = await this.findOne(id);\n    Object.assign(role, dto);\n    return await this.roleRepository.save(role);\n  }\n\n  // 删除角色\n  async remove(id: number) {\n    const role = await this.findOne(id);\n    await this.roleRepository.remove(role);\n  }\n\n  // 角色字典\n  async findDict() {\n    const roles = await this.findAll();\n    return roles.map((role) => ({\n      key: role.id,\n      value: role.alias || role.name,\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '../enum/role.enum';\nimport { ROLES_KEY } from '../decorator/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Task.html":{"url":"entities/Task.html","title":"entity - Task","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/models/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                chunkStatus\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                fileMd5\n                            \n                            \n                                    \n                                fileName\n                            \n                            \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                fileType\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                totalChunks\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                updatedBy\n                            \n                            \n                                    \n                                uploadedChunks\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        chunkStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment', {type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, default: 'pending', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uploadedChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 0, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @VersionColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/models/task.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, VersionColumn } from 'typeorm';\n\n@Entity('task')\nexport class Task {\n  @PrimaryGeneratedColumn('increment', { type: 'bigint' })\n  id: number;\n\n  @Column({ type: 'varchar', length: 255, nullable: false })\n  fileName: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: false })\n  fileType: string;\n\n  @Column({ type: 'int', nullable: false })\n  fileSize: number;\n\n  @Column({ type: 'varchar', length: 32, nullable: true })\n  fileMd5?: string;\n\n  @Column({ type: 'int', nullable: false })\n  totalChunks: number;\n\n  @Column({ type: 'int', default: 0, nullable: false })\n  uploadedChunks: number;\n\n  @Column({ type: 'varchar', length: 50, default: 'pending', nullable: true })\n  status: string;\n\n  @Column({ type: 'json', nullable: true })\n  chunkStatus?: any;\n\n  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({\n    type: 'datetime',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date;\n\n  @Column({ type: 'int', nullable: true })\n  createdBy?: number;\n\n  @Column({ type: 'int', nullable: true })\n  updatedBy?: number;\n\n  @VersionColumn()\n  version: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeormFilter.html":{"url":"classes/TypeormFilter.html","title":"class - TypeormFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeormFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/typeorm.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: TypeORMError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/typeorm.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        TypeORMError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { QueryFailedError, TypeORMError } from 'typeorm';\n\n@Catch(TypeORMError)\nexport class TypeormFilter implements ExceptionFilter {\n  catch(exception: TypeORMError, host: ArgumentsHost) {\n    // 获取请求对象\n    const request = host.switchToHttp().getRequest();\n    const ctx = host.switchToHttp();\n    let code = 500;\n    if (exception instanceof QueryFailedError) {\n      code = exception.driverError.errno;\n    }\n    // 响应 请求对象\n    const response = ctx.getResponse();\n    response.status(500).json({\n      code: code,\n      data: {\n        timestamp: new Date().toISOString(),\n        path: request.url,\n        method: request.method,\n      },\n      message: exception.message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAiServiceDto.html":{"url":"classes/UpdateAiServiceDto.html","title":"class - UpdateAiServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAiServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/ai-service/dto/update-ai-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                endpointUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务描述', example: '用于病害智能诊断的服务'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/update-ai-service.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务的访问URL', example: 'http://localhost:5001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/update-ai-service.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        serviceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: '服务名称', example: '病害智能诊断服务'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/update-ai-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        serviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务类型', example: 'diagnosis'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/update-ai-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"active\" | \"inactive\" | \"under_maintenance\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['active', 'inactive', 'under_maintenance'])@IsOptional()@ApiProperty({description: '服务状态', example: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/ai-service/dto/update-ai-service.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsOptional, IsEnum } from 'class-validator';\n\nexport class UpdateAiServiceDto {\n  @IsString()\n  @ApiProperty({\n    description: '服务名称',\n    example: '病害智能诊断服务',\n  })\n  @IsOptional()\n  serviceName?: string; // 服务名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务类型',\n    example: 'diagnosis',\n  })\n  serviceType?: string; // 服务类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务描述',\n    example: '用于病害智能诊断的服务',\n  })\n  description?: string; // 服务描述\n\n  @IsEnum(['active', 'inactive', 'under_maintenance'])\n  @IsOptional()\n  @ApiProperty({\n    description: '服务状态',\n    example: 'active',\n  })\n  status?: 'active' | 'inactive' | 'under_maintenance'; // 服务状态\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务的访问URL',\n    example: 'http://localhost:5001',\n  })\n  endpointUrl?: string; // 服务的访问URL\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatasetDto.html":{"url":"classes/UpdateDatasetDto.html","title":"class - UpdateDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/dataset/dto/update-dataset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                fileIds\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '数据集description必须是字符串！'})@ApiProperty({description: '数据集描述', example: '这是一个数据集'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dto/update-dataset.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: 'fileIds 必须是数组'})@Transform( => )@IsInt({each: true, message: 'fileIds 必须是数字'})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dto/update-dataset.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '数据集name必须是字符串！'})@IsOptional({message: '数据集name不能为空！'})@ApiProperty({description: '数据集名称', example: '数据集1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/dataset/dto/update-dataset.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateDatasetDto {\n  @IsString({ message: '数据集name必须是字符串！' })\n  @IsOptional({ message: '数据集name不能为空！' })\n  @ApiProperty({\n    description: '数据集名称',\n    example: '数据集1',\n  })\n  name: string;\n\n  @IsOptional()\n  @IsString({ message: '数据集description必须是字符串！' })\n  @ApiProperty({\n    description: '数据集描述',\n    example: '这是一个数据集',\n  })\n  description?: string;\n\n  @IsOptional()\n  @IsArray({\n    message: 'fileIds 必须是数组',\n  })\n  @Transform(({ value }) => {\n    if (typeof value === 'string' && value.includes(',')) {\n      return value.split(',').map((item) => parseInt(item, 10));\n    } else {\n      return value.map((item) => parseInt(item, 10));\n    }\n  })\n  @IsInt({ each: true, message: 'fileIds 必须是数字' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                access\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fileId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                originalFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '文件路径必须为字符串类型！'})@IsIn(['public', 'private'], {message: '请使用 \"public\" 或者 \"private\" 来设置权限'})@ApiProperty({description: '权限', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/update-file.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件ID不能为空！'})@IsInt({message: '文件ID必须为数字类型！'})@Type(undefined)@ApiProperty({description: '文件ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/update-file.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        originalFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '文件名称必须为字符串类型！'})@Length(5, 255, {message: '文件名称应该过短或者过长'})@ApiProperty({description: '文件名称', example: '文件1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/update-file.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform, Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsIn,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateFileDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsInt({ message: '文件ID必须为数字类型！' })\n  @Type(() => Number)\n  @ApiProperty({\n    description: '文件ID',\n    example: 1,\n  })\n  fileId: number;\n\n  @IsOptional()\n  @IsString({ message: '文件名称必须为字符串类型！' })\n  @Length(5, 255, {\n    message: '文件名称应该过短或者过长',\n  })\n  @ApiProperty({\n    description: '文件名称',\n    example: '文件1',\n  })\n  originalFileName?: string;\n\n  @IsOptional()\n  @IsString({ message: '文件路径必须为字符串类型！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access?: string;\n}\n\nexport class UpdateFilesAccessDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsArray({ message: '文件ID必须为数组类型！' })\n  @ArrayMinSize(1, { message: '文件ID数组长度至少为1！' })\n  @Transform(({ value }) => value.map((v: string) => Number(v)), {\n    toClassOnly: true,\n  })\n  @IsInt({ each: true, message: '文件ID必须为数字类型！' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds: number[];\n\n  @IsNotEmpty({ message: '权限不能为空！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFilesAccessDto.html":{"url":"classes/UpdateFilesAccessDto.html","title":"class - UpdateFilesAccessDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFilesAccessDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                access\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                fileIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '权限不能为空！'})@IsIn(['public', 'private'], {message: '请使用 \"public\" 或者 \"private\" 来设置权限'})@ApiProperty({description: '权限', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/update-file.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件ID不能为空！'})@IsArray({message: '文件ID必须为数组类型！'})@ArrayMinSize(1, {message: '文件ID数组长度至少为1！'})@Transform( => , {toClassOnly: true})@IsInt({each: true, message: '文件ID必须为数字类型！'})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/update-file.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform, Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsIn,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateFileDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsInt({ message: '文件ID必须为数字类型！' })\n  @Type(() => Number)\n  @ApiProperty({\n    description: '文件ID',\n    example: 1,\n  })\n  fileId: number;\n\n  @IsOptional()\n  @IsString({ message: '文件名称必须为字符串类型！' })\n  @Length(5, 255, {\n    message: '文件名称应该过短或者过长',\n  })\n  @ApiProperty({\n    description: '文件名称',\n    example: '文件1',\n  })\n  originalFileName?: string;\n\n  @IsOptional()\n  @IsString({ message: '文件路径必须为字符串类型！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access?: string;\n}\n\nexport class UpdateFilesAccessDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsArray({ message: '文件ID必须为数组类型！' })\n  @ArrayMinSize(1, { message: '文件ID数组长度至少为1！' })\n  @Transform(({ value }) => value.map((v: string) => Number(v)), {\n    toClassOnly: true,\n  })\n  @IsInt({ each: true, message: '文件ID必须为数字类型！' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds: number[];\n\n  @IsNotEmpty({ message: '权限不能为空！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/change-pass.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '新密码必顼为字符串类型'})@IsNotEmpty({message: '新密码不能为空'})@Length(6, 20, {message: '密码长度必须为6-20位'})@ApiProperty({description: '新密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/change-pass.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, Length } from 'class-validator';\n\nexport class UpdatePasswordDto {\n  @IsString({ message: '新密码必顼为字符串类型' })\n  @IsNotEmpty({ message: '新密码不能为空' })\n  @Length(6, 20, { message: '密码长度必须为6-20位' })\n  @ApiProperty({\n    description: '新密码',\n    example: '123456',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlantDiseaseKnowledgeDto.html":{"url":"classes/UpdatePlantDiseaseKnowledgeDto.html","title":"class - UpdatePlantDiseaseKnowledgeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlantDiseaseKnowledgeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/knowledge/dto/update-knowledge.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPart\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPlant\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                biologicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cause\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                chemicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                culturalPractices\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                documentUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstReported\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                geographicalArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                historicalCases\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preventiveMeasures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                researchSources\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                resistantVarieties\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                scientificName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                severity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                spreadMethod\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                symptoms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                synonyms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                videoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物部位', example: '叶片'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPlant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物种类', example: '草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        biologicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '生物防治方法', example: '生物防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害分类', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害病因', example: '病害病因'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        chemicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '化学防治方法', example: '化学防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        culturalPractices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '文化控制措施', example: '文化控制措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害唯一编码', example: '01110'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害生命周期', example: '病害生命周期'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害名称', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害类型', example: '真菌性病害'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        documentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关文档的 URL 地址', example: 'https://example.com/document.pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstReported\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()@ApiProperty({description: '首次报告时间', example: '2021-06-01'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        geographicalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害地理分布', example: '病害地理分布'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        historicalCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '历史病例', example: '历史病例'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '病害图片的 URL 地址', example: 'https://example.com/image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preventiveMeasures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '防治措施', example: '防治措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        researchSources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '研究来源', example: '研究来源'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        resistantVarieties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '抗病品种', example: '抗病品种'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害学名', example: 'Colletotrichum gloeosporioides'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害严重程度', example: '轻度'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        spreadMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害传播方式', example: '病害传播方式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        symptoms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害症状描述', example: '病害症状描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        synonyms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害别名', example: '草莓炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害标签', example: '炭疽病, 草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        videoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关视频的 URL 地址', example: 'https://example.com/video.mp4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/knowledge/dto/update-knowledge.dto.ts:174\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsDateString, IsUrl } from 'class-validator';\n\nexport class UpdatePlantDiseaseKnowledgeDto {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害名称',\n    example: '炭疽病',\n  })\n  diseaseName?: string; // 病害名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害唯一编码',\n    example: '01110',\n  })\n  diseaseCode?: string; // 病害唯一编码\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害学名',\n    example: 'Colletotrichum gloeosporioides',\n  })\n  scientificName?: string; // 病害的学名（如果有）\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害别名',\n    example: '草莓炭疽病',\n  })\n  synonyms?: string; // 病害的同义词\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害症状描述',\n    example: '病害症状描述',\n  })\n  symptoms?: string; // 病害症状描述\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害病因',\n    example: '病害病因',\n  })\n  cause?: string; // 病因\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害类型',\n    example: '真菌性病害',\n  })\n  diseaseType?: string; // 病害类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物种类',\n    example: '草莓',\n  })\n  affectedPlant?: string; // 受影响的植物种类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物部位',\n    example: '叶片',\n  })\n  affectedPart?: string; // 受影响的植物部位\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害生命周期',\n    example: '病害生命周期',\n  })\n  diseaseCycle?: string; // 病害生命周期\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害传播方式',\n    example: '病害传播方式',\n  })\n  spreadMethod?: string; // 病害传播方式\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害地理分布',\n    example: '病害地理分布',\n  })\n  geographicalArea?: string; // 病害地理分布\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({\n    description: '首次报告时间',\n    example: '2021-06-01',\n  })\n  firstReported?: string; // 首次报告时间\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '防治措施',\n    example: '防治措施',\n  })\n  preventiveMeasures?: string; // 防治措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '化学防治方法',\n    example: '化学防治方法',\n  })\n  chemicalControl?: string; // 化学防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '生物防治方法',\n    example: '生物防治方法',\n  })\n  biologicalControl?: string; // 生物防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '文化控制措施',\n    example: '文化控制措施',\n  })\n  culturalPractices?: string; // 文化控制措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '抗病品种',\n    example: '抗病品种',\n  })\n  resistantVarieties?: string; // 抗病品种\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '病害图片的 URL 地址',\n    example: 'https://example.com/image.jpg',\n  })\n  imageUrl?: string; // 病害图片的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关文档的 URL 地址',\n    example: 'https://example.com/document.pdf',\n  })\n  documentUrl?: string; // 相关文档的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关视频的 URL 地址',\n    example: 'https://example.com/video.mp4',\n  })\n  videoUrl?: string; // 相关视频的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害分类',\n    example: '炭疽病',\n  })\n  category?: string; // 病害分类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害严重程度',\n    example: '轻度',\n  })\n  severity?: string; // 病害严重程度\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害标签',\n    example: '炭疽病, 草莓',\n  })\n  tags?: string; // 病害标签\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '历史病例',\n    example: '历史病例',\n  })\n  historicalCases?: string; // 历史病例\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '研究来源',\n    example: '研究来源',\n  })\n  researchSources?: string; // 研究来源\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '地址必须为字符串类型！'})@IsOptional()@ApiProperty({description: '地址', example: '北京市朝阳区'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: '性别必须为数字类型！'})@IsOptional()@ApiProperty({description: '性别', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-profile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '昵称必须为字符串类型！'})@IsOptional()@ApiProperty({description: '姓名', example: '张三'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('CN')@IsOptional()@ApiProperty({description: '手机号', example: '18888888888'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsPhoneNumber, IsString } from 'class-validator';\n\nexport class UpdateProfileDto {\n  @IsNumber({}, { message: '性别必须为数字类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '性别',\n    example: 1,\n  })\n  gender?: number;\n\n  @IsString({ message: '昵称必须为字符串类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '姓名',\n    example: '张三',\n  })\n  name?: string;\n\n  @IsPhoneNumber('CN')\n  @IsOptional()\n  @ApiProperty({\n    description: '手机号',\n    example: '18888888888',\n  })\n  phone?: string;\n\n  @IsString({ message: '地址必须为字符串类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '地址',\n    example: '北京市朝阳区',\n  })\n  address?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                alias\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色别名', example: '管理员'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/update-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色描述', example: '管理员角色'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/update-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色名称', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/update-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateRoleDto {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色名称',\n    example: 'admin',\n  })\n  name?: string; // 角色名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色别名',\n    example: '管理员',\n  })\n  alias?: string; // 角色别名\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色描述',\n    example: '管理员角色',\n  })\n  description?: string; // 角色描述\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail({}, {message: '邮箱格式不正确！'})@ApiProperty({description: '邮箱', example: '5165133@asdf.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度必须为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject({message: 'Profile 必须为一个对象！'})@IsOptional()@ApiProperty({description: 'Profile', type: Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色必须是数组！'})@ArrayMinSize(1, {message: '请至少选择一个角色！'})@ApiProperty({description: '角色', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus, {message: '状态值只能是 0 或 1'})@ApiProperty({description: '状态', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '用户名必须为字符串类型！'})@Length(5, 20, {message: '用户名长度必须为5-20位！'})@ApiProperty({description: '用户名', example: 'sdfgsafgasgsad'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsObject,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\nimport { Profile } from '../models/profile.entity';\nimport { UserStatus } from '@/common/enum/user.enum';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: '5165133@asdf.com',\n  })\n  email?: string;\n\n  @IsOptional()\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @Length(5, 20, { message: '用户名长度必须为5-20位！' })\n  @ApiProperty({\n    description: '用户名',\n    example: 'sdfgsafgasgsad',\n  })\n  username?: string;\n\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度必须为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus, { message: '状态值只能是 0 或 1' })\n  @ApiProperty({\n    description: '状态',\n    example: 1,\n  })\n  status?: UserStatus; // 使用枚举来限制状态值\n\n  @IsOptional()\n  @IsArray({ message: '角色必须是数组！' })\n  @ArrayMinSize(1, { message: '请至少选择一个角色！' })\n  @ApiProperty({\n    description: '角色',\n    example: [1, 2],\n  })\n  roles?: number[];\n\n  @IsOptional()\n  @IsObject({ message: 'Profile 必须为一个对象！' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Profile',\n    type: Profile,\n  })\n  profile?: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadChunkDto.html":{"url":"classes/UploadChunkDto.html","title":"class - UploadChunkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadChunkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/file/dto/upload-chunk.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                chunkIndex\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                taskId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        chunkIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件块不能为空！'})@IsInt({message: '文件块必须为数字类型！'})@Type(undefined)@ApiProperty({description: '文件块', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/upload-chunk.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件MD5不能为空！'})@IsString({message: '文件MD5必须为字符串类型！'})@Type(undefined)@ApiProperty({description: '文件MD5', example: 'd41d8cd98f00b204e9800998ecf8427e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/upload-chunk.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '任务ID不能为空！'})@IsInt({message: '任务ID必须为数字类型！'})@Type(undefined)@ApiProperty({description: '任务ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/file/dto/upload-chunk.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UploadChunkDto {\n  @IsNotEmpty({ message: '任务ID不能为空！' })\n  @IsInt({ message: '任务ID必须为数字类型！' })\n  @Type(() => Number) // 自动转换为 number\n  @ApiProperty({\n    description: '任务ID',\n    example: 1,\n  })\n  taskId: number;\n\n  @IsNotEmpty({ message: '文件MD5不能为空！' })\n  @IsString({ message: '文件MD5必须为字符串类型！' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '文件MD5',\n    example: 'd41d8cd98f00b204e9800998ecf8427e',\n  })\n  fileMd5: string;\n\n  @IsNotEmpty({ message: '文件块不能为空！' })\n  @IsInt({ message: '文件块必须为数字类型！' })\n  @Type(() => Number) // 自动转换为 number\n  @ApiProperty({\n    description: '文件块',\n    example: 1,\n  })\n  chunkIndex: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/models/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                profile\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profile => profile.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, role => role.users)@JoinTable({name: 'users_roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"0\" | \"1\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/models/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { Role } from '../../role/role.entity';\nimport { Profile } from './profile.entity';\n\n@Entity('user')\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255, unique: true, nullable: true })\n  email: string | null;\n\n  @Column({ type: 'varchar', length: 255, unique: true, nullable: true })\n  username: string | null;\n\n  @Column({ type: 'varchar', length: 255 })\n  password: string;\n\n  @Column({ type: 'tinyint', default: 0 })\n  status: 0 | 1;\n\n  // 用户和角色是多对多关系\n  @ManyToMany(() => Role, (role) => role.users)\n  @JoinTable({ name: 'users_roles' })\n  roles: Role[];\n\n  // 用户和个人信息是一对一关系\n  @OneToOne(() => Profile, (profile) => profile.user, { cascade: true })\n  profile: Profile;\n\n  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({\n    type: 'datetime',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n            \n                Description\n            \n            \n                用户模块控制器\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAvatar\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Async\n                                profileGet\n                            \n                            \n                                    \n                                    Async\n                                profileUpdate\n                            \n                            \n                                    \n                                    Async\n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                uploadAvatar\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                userCreate\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                userDelete\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userGet\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userListGet\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userReset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvatar(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        profileGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileGet(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        profileUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileUpdate(req: Request, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfileDto\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(req: Request, updatePasswordDto: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('reset/password')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePasswordDto\n                                            \n                                                            UpdatePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('avatar')@HttpCode(HttpStatus.OK)@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        userCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userCreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        userDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    userDelete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    userGet(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    userListGet(page?: number, pageSize?: number, username?: string, name?: string, phone?: string, address?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                phone\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    userReset(id: number, resetPasswordDto: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/reset/password')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resetPasswordDto\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userUpdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@/common/decorator/roles.decorator';\nimport { MIME_TYPE } from '@/common/enum/mime.enum';\nimport { Role } from '@/common/enum/role.enum';\nimport { TypeormFilter } from '@/common/filters/typeorm.filter';\nimport { AuthGuard } from '@/common/guards/auth.guard';\nimport { RolesGuard } from '@/common/guards/roles.guard';\nimport { formatResponse } from '@/common/helpers/response.helper';\nimport {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  Req,\n  Res,\n  UploadedFile,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Request, Response } from 'express';\nimport { existsSync, mkdirSync } from 'fs';\nimport { diskStorage } from 'multer';\nimport { extname, join } from 'path';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FileSizeValidationPipe } from '../file/pipe/file-size.pipe';\nimport { FileTypeValidationPipe } from '../file/pipe/file-type.pipe';\nimport { UpdatePasswordDto } from './dto/change-pass.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ResetPasswordDto } from './dto/reset-pass.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UserService } from './user.service';\n\n/**\n * 用户模块控制器\n */\n@Controller('user')\n@UseGuards(AuthGuard)\n@UseFilters(TypeormFilter)\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n  // 获取个人信息\n  @Get('profile')\n  async profileGet(@Req() req: Request) {\n    return this.userService.profileGet(req.user.userId);\n  }\n\n  // 更新个人信息\n  @Put('profile')\n  async profileUpdate(\n    @Req() req: Request,\n    @Body() updateProfileDto: UpdateProfileDto,\n  ) {\n    return this.userService.profileUpdate(req.user.userId, updateProfileDto);\n  }\n\n  // 上传个人头像\n  @Post('avatar')\n  @HttpCode(HttpStatus.OK)\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          if (!existsSync('uploads/avatar')) {\n            mkdirSync('uploads/avatar', { recursive: true });\n          }\n          cb(null, 'uploads/avatar');\n        },\n        filename: (req, file, cb) => {\n          const uniquePrefix = uuidv4();\n          const fileExtension = extname(file.originalname);\n          cb(null, `${uniquePrefix}${fileExtension}`);\n        },\n      }),\n    }),\n  )\n  async uploadAvatar(\n    @Req() req,\n    @UploadedFile(\n      new FileSizeValidationPipe('10MB'),\n      new FileTypeValidationPipe([MIME_TYPE.PNG, MIME_TYPE.JPEG]),\n    )\n    file: Express.Multer.File,\n  ) {\n    return this.userService.updateAvatar(req.user.userId, file);\n  }\n\n  // 获取个人头像\n  @Get('avatar')\n  async getAvatar(@Req() req: Request, @Res() res: Response) {\n    const avatarPath = await this.userService.getAvatar(req.user.userId);\n    if (avatarPath) {\n      const filePath = join(process.cwd(), avatarPath);\n      if (!existsSync(filePath)) {\n        throw new BadRequestException('头像文件不存在');\n      }\n      // 以文件流方式返回头像\n      return res.sendFile(filePath);\n    } else {\n      return formatResponse(404, null, '头像不存在');\n    }\n  }\n\n  // 修改密码\n  @Put('reset/password')\n  async updatePassword(\n    @Req() req: Request,\n    @Body() updatePasswordDto: UpdatePasswordDto,\n  ) {\n    return this.userService.updatePassword(\n      req.user.userId,\n      updatePasswordDto.confirmPassword,\n    );\n  }\n\n  // 退出登陆\n  @Post('logout')\n  async logout() {\n    return formatResponse(200, null, '退出登录成功');\n  }\n\n  // 获取用户列表 (需要管理员权限)\n  @Get('list')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userListGet(\n    @Query('page') page?: number,\n    @Query('pageSize') pageSize?: number,\n    @Query('username') username?: string,\n    @Query('name') name?: string,\n    @Query('phone') phone?: string,\n    @Query('address') address?: string,\n  ) {\n    return this.userService.userListGet(page, pageSize, {\n      username,\n      name,\n      phone,\n      address,\n    });\n  }\n\n  // 创建单个用户 (需要管理员权限)\n  @Post('create')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.CREATED)\n  async userCreate(@Body() createUserDto: CreateUserDto) {\n    const { profile, ...user } = createUserDto;\n    await this.userService.setRoles(user as any);\n    await this.userService.userCreate(user as any, profile);\n    return formatResponse(201, null, '用户创建成功');\n  }\n\n  // 获取单个用户信息 (需要管理员权限)\n  @Get(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userGet(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return this.userService.userGet(id);\n  }\n\n  // 删除单个用户信息 (需要管理员权限)\n  @Delete(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async userDelete(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return this.userService.userDelete(id);\n  }\n\n  // 更新单个用户 (需要管理员权限)\n  @Put(':id')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userUpdate(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    return this.userService.userUpdate(id, updateUserDto);\n  }\n\n  // 重置用户密码 (需要管理员权限)\n  @Put(':id/reset/password')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userReset(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() resetPasswordDto: ResetPasswordDto,\n  ) {\n    return this.userService.userReset(id, resetPasswordDto.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            用户模块\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from '../role/role.entity';\nimport { UserController } from './user.controller';\nimport { User } from './models/user.entity';\nimport { UserService } from './user.service';\nimport { Profile } from './models/profile.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ConfigEnum } from '@/common/enum/config.enum';\n\n/**\n * 用户模块\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Role, Profile]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(ConfigEnum.SECRET),\n          signOptions: {\n            expiresIn: '1d',\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/auth.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport interface UserPayload {\n  userId: number;\n  roles: string[];\n  username?: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserPayload;\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserQuery.html":{"url":"interfaces/UserQuery.html","title":"interface - UserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/get-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface UserQuery {\n  page: number;\n  pageSize?: number;\n  username?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            variable\n            MIME_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            ApplicationTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            AppTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            AudioTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            FontTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            ImageTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            MIMETypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            OtherTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/mime.ts\n            \n            type alias\n            VideoTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorator/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorator/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filters/typeorm.filter.ts\n            \n            class\n            TypeormFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/auth.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/auth.guard.ts\n            \n            interface\n            UserPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/response.helper.ts\n            \n            interface\n            ApiResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/common/helpers/response.helper.ts\n            \n            variable\n            formatResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/pipe/string-date.pipe.ts\n            \n            injectable\n            ParseStringDatePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/utils/mime.ts\n            \n            variable\n            getFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/utils/mime.ts\n            \n            variable\n            getModelMimeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/utils/parse.ts\n            \n            variable\n            parseSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/ai-service/ai-service.controller.ts\n            \n            controller\n            AiServiceController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/ai-service/dto/create-ai-service.dto.ts\n            \n            class\n            CreateAiServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/ai-service/dto/update-ai-service.dto.ts\n            \n            class\n            UpdateAiServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/ai-service/models/ai-service-access-log.ts\n            \n            entity\n            AiServiceAccessLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/ai-service/models/ai-service-config.ts\n            \n            entity\n            AiServiceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/ai-service/models/ai-service-log.ts\n            \n            entity\n            AiServiceLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/ai-service/models/ai-service.entity.ts\n            \n            entity\n            AiService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/ai-service/models/ai-service.entity.ts\n            \n            class\n            AiService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/ai-service/services/ai-service.service.ts\n            \n            injectable\n            AiServiceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/dataset/dataset.controller.ts\n            \n            controller\n            DatasetController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/dataset/dataset.entity.ts\n            \n            entity\n            Dataset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/dataset/dataset.entity.ts\n            \n            class\n            Dataset\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/dataset/dto/create-dataset.dto.ts\n            \n            class\n            CreateDatasetDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/dataset/dto/update-dataset.dto.ts\n            \n            class\n            UpdateDatasetDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/dataset/service/dataset-manage.service.ts\n            \n            injectable\n            DatasetManageService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/dataset/service/dataset.service.ts\n            \n            injectable\n            DatasetService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/diagnosis/diagnosis.controller.ts\n            \n            controller\n            DiagnosisController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/diagnosis/diagnosis.service.ts\n            \n            injectable\n            DiagnosisService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/diagnosis/models/diagnosis-history.entity.ts\n            \n            entity\n            DiagnosisHistory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/diagnosis/models/diagnosis-history.entity.ts\n            \n            class\n            DiagnosisHistory\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/file/dto/complete-chunk.dto.ts\n            \n            class\n            CompleteChunkDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/file/dto/create-link.dto.ts\n            \n            class\n            CreateTempLinkDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/file/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/file/dto/download-file.dto.ts\n            \n            class\n            DownloadFilesDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/file/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/file/dto/update-file.dto.ts\n            \n            class\n            UpdateFilesAccessDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/file/dto/upload-chunk.dto.ts\n            \n            class\n            UploadChunkDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/modules/file/guards/file.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/file/guards/file.guard.ts\n            \n            guard\n            FileGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/file/guards/file.guard.ts\n            \n            guard\n            FilesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/file/guards/file.guard.ts\n            \n            type alias\n            DownloadRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/file/models/file.entity.ts\n            \n            entity\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/file/models/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/file/models/task.entity.ts\n            \n            entity\n            Task\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/file/pipe/delete.pipe.ts\n            \n            injectable\n            ParseFileIdsPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/file/pipe/file-size.pipe.ts\n            \n            injectable\n            FileSizeValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/file/pipe/file-type.pipe.ts\n            \n            injectable\n            FileTypeValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/file/pipe/type.pipe.ts\n            \n            injectable\n            ParseFileTypePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/file/services/file-download.service.ts\n            \n            injectable\n            FileDownloadService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/modules/file/services/file-manage.service.ts\n            \n            injectable\n            FileManageService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/modules/file/services/file-operation.service.ts\n            \n            injectable\n            FileOperationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/modules/file/services/file-storage.service.ts\n            \n            injectable\n            FileStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/file/services/file-upload.service.ts\n            \n            injectable\n            FileUploadService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/file/services/file.service.ts\n            \n            injectable\n            FileService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/modules/knowledge/dto/create-knowledge.dto.ts\n            \n            class\n            CreatePlantDiseaseKnowledgeDto\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/modules/knowledge/dto/update-knowledge.dto.ts\n            \n            class\n            UpdatePlantDiseaseKnowledgeDto\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/modules/knowledge/knowledge.controller.ts\n            \n            controller\n            KnowledgeController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/knowledge/knowledge.entity.ts\n            \n            entity\n            PlantDiseaseKnowledge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/knowledge/knowledge.entity.ts\n            \n            class\n            PlantDiseaseKnowledge\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/modules/knowledge/services/knowledge-manage.service.ts\n            \n            injectable\n            KnowledgeManageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/knowledge/services/knowledge.service.ts\n            \n            injectable\n            KnowledgeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/menu/menu.entity.ts\n            \n            entity\n            Menu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/menu/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/role/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/dto/change-pass.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/dto/get-user.dto.ts\n            \n            interface\n            UserQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/reset-pass.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/models/profile.entity.ts\n            \n            entity\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/models/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                4 %\n                (1/21)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            archiver : ^7.0.1\n        \n            bcryptjs : ^3.0.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            multer : 1.4.5-lts.1\n        \n            mysql2 : ^3.12.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Application   (src/.../mime.enum.ts)\n                        \n                        \n                            Audio   (src/.../mime.enum.ts)\n                        \n                        \n                            Compression   (src/.../mime.enum.ts)\n                        \n                        \n                            ConfigEnum   (src/.../config.enum.ts)\n                        \n                        \n                            Document   (src/.../mime.enum.ts)\n                        \n                        \n                            Font   (src/.../mime.enum.ts)\n                        \n                        \n                            Image   (src/.../mime.enum.ts)\n                        \n                        \n                            LogEnum   (src/.../config.enum.ts)\n                        \n                        \n                            MIME_TYPE   (src/.../mime.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                        \n                            UserStatus   (src/.../user.enum.ts)\n                        \n                        \n                            Video   (src/.../mime.enum.ts)\n                        \n                        \n                            Web   (src/.../mime.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enum/mime.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Application\n                    \n                \n                        \n                            \n                                 EXE\n                            \n                        \n                        \n                            \n                                Value : application/x-msdownload\n                            \n                        \n                        \n                            \n                                 MSI\n                            \n                        \n                        \n                            \n                                Value : application/x-msi\n                            \n                        \n                        \n                            \n                                 APK\n                            \n                        \n                        \n                            \n                                Value : application/vnd.android.package-archive\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Audio\n                    \n                \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : audio/mpeg\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : audio/wav\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : audio/ogg\n                            \n                        \n                        \n                            \n                                 AAC\n                            \n                        \n                        \n                            \n                                Value : audio/aac\n                            \n                        \n                        \n                            \n                                 FLAC\n                            \n                        \n                        \n                            \n                                Value : audio/flac\n                            \n                        \n                        \n                            \n                                 M4A\n                            \n                        \n                        \n                            \n                                Value : audio/mp4\n                            \n                        \n                        \n                            \n                                 WMA\n                            \n                        \n                        \n                            \n                                Value : audio/x-ms-wma\n                            \n                        \n                        \n                            \n                                 AMR\n                            \n                        \n                        \n                            \n                                Value : audio/amr\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Compression\n                    \n                \n                        \n                            \n                                 ZIP\n                            \n                        \n                        \n                            \n                                Value : application/zip\n                            \n                        \n                        \n                            \n                                 GZ\n                            \n                        \n                        \n                            \n                                Value : application/gzip\n                            \n                        \n                        \n                            \n                                 TAR\n                            \n                        \n                        \n                            \n                                Value : application/x-tar\n                            \n                        \n                        \n                            \n                                 RAR\n                            \n                        \n                        \n                            \n                                Value : application/x-rar-compressed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Document\n                    \n                \n                        \n                            \n                                 PDF\n                            \n                        \n                        \n                            \n                                Value : application/pdf\n                            \n                        \n                        \n                            \n                                 DOC\n                            \n                        \n                        \n                            \n                                Value : application/msword\n                            \n                        \n                        \n                            \n                                 DOCX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.wordprocessingml.document\n                            \n                        \n                        \n                            \n                                 XLS\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-excel\n                            \n                        \n                        \n                            \n                                 XLSX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n                            \n                        \n                        \n                            \n                                 PPT\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-powerpoint\n                            \n                        \n                        \n                            \n                                 PPTX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.presentationml.presentation\n                            \n                        \n                        \n                            \n                                 RTF\n                            \n                        \n                        \n                            \n                                Value : application/rtf\n                            \n                        \n                        \n                            \n                                 TXT\n                            \n                        \n                        \n                            \n                                Value : text/plain\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : text/csv\n                            \n                        \n                        \n                            \n                                 ZIP\n                            \n                        \n                        \n                            \n                                Value : application/zip\n                            \n                        \n                        \n                            \n                                 TAR\n                            \n                        \n                        \n                            \n                                Value : application/x-tar\n                            \n                        \n                        \n                            \n                                 GZ\n                            \n                        \n                        \n                            \n                                Value : application/gzip\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : application/json\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : application/xml\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Font\n                    \n                \n                        \n                            \n                                 TTF\n                            \n                        \n                        \n                            \n                                Value : font/ttf\n                            \n                        \n                        \n                            \n                                 OTF\n                            \n                        \n                        \n                            \n                                Value : font/otf\n                            \n                        \n                        \n                            \n                                 WOFF\n                            \n                        \n                        \n                            \n                                Value : font/woff\n                            \n                        \n                        \n                            \n                                 WOFF2\n                            \n                        \n                        \n                            \n                                Value : font/woff2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n                        \n                            \n                                 JPEG\n                            \n                        \n                        \n                            \n                                Value : image/jpeg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : image/png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : image/gif\n                            \n                        \n                        \n                            \n                                 BMP\n                            \n                        \n                        \n                            \n                                Value : image/bmp\n                            \n                        \n                        \n                            \n                                 TIFF\n                            \n                        \n                        \n                            \n                                Value : image/tiff\n                            \n                        \n                        \n                            \n                                 WEBP\n                            \n                        \n                        \n                            \n                                Value : image/webp\n                            \n                        \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                Value : image/svg+xml\n                            \n                        \n                        \n                            \n                                 HEIF\n                            \n                        \n                        \n                            \n                                Value : image/heif\n                            \n                        \n                        \n                            \n                                 HEIC\n                            \n                        \n                        \n                            \n                                Value : image/heic\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MIME_TYPE\n                    \n                \n                        \n                            \n                                 JPEG\n                            \n                        \n                        \n                            \n                                Value : image/jpeg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : image/png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : image/gif\n                            \n                        \n                        \n                            \n                                 BMP\n                            \n                        \n                        \n                            \n                                Value : image/bmp\n                            \n                        \n                        \n                            \n                                 TIFF\n                            \n                        \n                        \n                            \n                                Value : image/tiff\n                            \n                        \n                        \n                            \n                                 WEBP\n                            \n                        \n                        \n                            \n                                Value : image/webp\n                            \n                        \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                Value : image/svg+xml\n                            \n                        \n                        \n                            \n                                 HEIF\n                            \n                        \n                        \n                            \n                                Value : image/heif\n                            \n                        \n                        \n                            \n                                 HEIC\n                            \n                        \n                        \n                            \n                                Value : image/heic\n                            \n                        \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : video/mp4\n                            \n                        \n                        \n                            \n                                 AVI\n                            \n                        \n                        \n                            \n                                Value : video/x-msvideo\n                            \n                        \n                        \n                            \n                                 MOV\n                            \n                        \n                        \n                            \n                                Value : video/quicktime\n                            \n                        \n                        \n                            \n                                 WMV\n                            \n                        \n                        \n                            \n                                Value : video/x-ms-wmv\n                            \n                        \n                        \n                            \n                                 MKV\n                            \n                        \n                        \n                            \n                                Value : video/x-matroska\n                            \n                        \n                        \n                            \n                                 FLV\n                            \n                        \n                        \n                            \n                                Value : video/x-flv\n                            \n                        \n                        \n                            \n                                 WEBM\n                            \n                        \n                        \n                            \n                                Value : video/webm\n                            \n                        \n                        \n                            \n                                 OGG_VIDEO\n                            \n                        \n                        \n                            \n                                Value : video/ogg\n                            \n                        \n                        \n                            \n                                 MPEG\n                            \n                        \n                        \n                            \n                                Value : video/mpeg\n                            \n                        \n                        \n                            \n                                 THREE_GP\n                            \n                        \n                        \n                            \n                                Value : video/3gpp\n                            \n                        \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : audio/mpeg\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : audio/wav\n                            \n                        \n                        \n                            \n                                 OGG_AUDIO\n                            \n                        \n                        \n                            \n                                Value : audio/ogg\n                            \n                        \n                        \n                            \n                                 AAC\n                            \n                        \n                        \n                            \n                                Value : audio/aac\n                            \n                        \n                        \n                            \n                                 FLAC\n                            \n                        \n                        \n                            \n                                Value : audio/flac\n                            \n                        \n                        \n                            \n                                 M4A\n                            \n                        \n                        \n                            \n                                Value : audio/mp4\n                            \n                        \n                        \n                            \n                                 WMA\n                            \n                        \n                        \n                            \n                                Value : audio/x-ms-wma\n                            \n                        \n                        \n                            \n                                 AMR\n                            \n                        \n                        \n                            \n                                Value : audio/amr\n                            \n                        \n                        \n                            \n                                 PDF\n                            \n                        \n                        \n                            \n                                Value : application/pdf\n                            \n                        \n                        \n                            \n                                 DOC\n                            \n                        \n                        \n                            \n                                Value : application/msword\n                            \n                        \n                        \n                            \n                                 DOCX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.wordprocessingml.document\n                            \n                        \n                        \n                            \n                                 XLS\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-excel\n                            \n                        \n                        \n                            \n                                 XLSX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n                            \n                        \n                        \n                            \n                                 PPT\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-powerpoint\n                            \n                        \n                        \n                            \n                                 PPTX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.presentationml.presentation\n                            \n                        \n                        \n                            \n                                 RTF\n                            \n                        \n                        \n                            \n                                Value : application/rtf\n                            \n                        \n                        \n                            \n                                 TXT\n                            \n                        \n                        \n                            \n                                Value : text/plain\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : text/csv\n                            \n                        \n                        \n                            \n                                 ZIP\n                            \n                        \n                        \n                            \n                                Value : application/zip\n                            \n                        \n                        \n                            \n                                 TAR\n                            \n                        \n                        \n                            \n                                Value : application/x-tar\n                            \n                        \n                        \n                            \n                                 GZ\n                            \n                        \n                        \n                            \n                                Value : application/gzip\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : application/json\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : application/xml\n                            \n                        \n                        \n                            \n                                 HTML\n                            \n                        \n                        \n                            \n                                Value : text/html\n                            \n                        \n                        \n                            \n                                 CSS\n                            \n                        \n                        \n                            \n                                Value : text/css\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : application/javascript\n                            \n                        \n                        \n                            \n                                 RAR\n                            \n                        \n                        \n                            \n                                Value : application/x-rar-compressed\n                            \n                        \n                        \n                            \n                                 EXE\n                            \n                        \n                        \n                            \n                                Value : application/x-msdownload\n                            \n                        \n                        \n                            \n                                 MSI\n                            \n                        \n                        \n                            \n                                Value : application/x-msi\n                            \n                        \n                        \n                            \n                                 APK\n                            \n                        \n                        \n                            \n                                Value : application/vnd.android.package-archive\n                            \n                        \n                        \n                            \n                                 TTF\n                            \n                        \n                        \n                            \n                                Value : font/ttf\n                            \n                        \n                        \n                            \n                                 OTF\n                            \n                        \n                        \n                            \n                                Value : font/otf\n                            \n                        \n                        \n                            \n                                 WOFF\n                            \n                        \n                        \n                            \n                                Value : font/woff\n                            \n                        \n                        \n                            \n                                 WOFF2\n                            \n                        \n                        \n                            \n                                Value : font/woff2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Video\n                    \n                \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : video/mp4\n                            \n                        \n                        \n                            \n                                 AVI\n                            \n                        \n                        \n                            \n                                Value : video/x-msvideo\n                            \n                        \n                        \n                            \n                                 MOV\n                            \n                        \n                        \n                            \n                                Value : video/quicktime\n                            \n                        \n                        \n                            \n                                 WMV\n                            \n                        \n                        \n                            \n                                Value : video/x-ms-wmv\n                            \n                        \n                        \n                            \n                                 MKV\n                            \n                        \n                        \n                            \n                                Value : video/x-matroska\n                            \n                        \n                        \n                            \n                                 FLV\n                            \n                        \n                        \n                            \n                                Value : video/x-flv\n                            \n                        \n                        \n                            \n                                 WEBM\n                            \n                        \n                        \n                            \n                                Value : video/webm\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : video/ogg\n                            \n                        \n                        \n                            \n                                 MPEG\n                            \n                        \n                        \n                            \n                                Value : video/mpeg\n                            \n                        \n                        \n                            \n                                 THREE_GP\n                            \n                        \n                        \n                            \n                                Value : video/3gpp\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Web\n                    \n                \n                        \n                            \n                                 HTML\n                            \n                        \n                        \n                            \n                                Value : text/html\n                            \n                        \n                        \n                            \n                                 CSS\n                            \n                        \n                        \n                            \n                                Value : text/css\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : application/javascript\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : application/json\n                            \n                        \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                Value : image/svg+xml\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : application/xml\n                            \n                        \n            \n        \n\n    src/common/enum/config.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigEnum\n                    \n                \n                        \n                            \n                                 DB_TYPE\n                            \n                        \n                        \n                            \n                                Value : DB_TYPE\n                            \n                        \n                        \n                            \n                                 DB_HOST\n                            \n                        \n                        \n                            \n                                Value : DB_HOST\n                            \n                        \n                        \n                            \n                                 DB_PORT\n                            \n                        \n                        \n                            \n                                Value : DB_PORT\n                            \n                        \n                        \n                            \n                                 DB_DATABASE\n                            \n                        \n                        \n                            \n                                Value : DB_DATABASE\n                            \n                        \n                        \n                            \n                                 DB_USERNAME\n                            \n                        \n                        \n                            \n                                Value : DB_USERNAME\n                            \n                        \n                        \n                            \n                                 DB_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : DB_PASSWORD\n                            \n                        \n                        \n                            \n                                 DB_SYNC\n                            \n                        \n                        \n                            \n                                Value : DB_SYNC\n                            \n                        \n                        \n                            \n                                 SECRET\n                            \n                        \n                        \n                            \n                                Value : SECRET\n                            \n                        \n                        \n                            \n                                 REDIS_HOST\n                            \n                        \n                        \n                            \n                                Value : REDIS_HOST\n                            \n                        \n                        \n                            \n                                 REDIS_PORT\n                            \n                        \n                        \n                            \n                                Value : REDIS_PORT\n                            \n                        \n                        \n                            \n                                 REDIS_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : REDIS_PASSWORD\n                            \n                        \n                        \n                            \n                                 REDIS_RECONNECT\n                            \n                        \n                        \n                            \n                                Value : REDIS_RECONNECT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogEnum\n                    \n                \n                        \n                            \n                                 LOG_LEVEL\n                            \n                        \n                        \n                            \n                                Value : LOG_LEVEL\n                            \n                        \n                        \n                            \n                                 LOG_ON\n                            \n                        \n                        \n                            \n                                Value : LOG_ON\n                            \n                        \n                        \n                            \n                                 TIMESTAMP\n                            \n                        \n                        \n                            \n                                Value : TIMESTAMP\n                            \n                        \n            \n        \n\n    src/common/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Expert\n                            \n                        \n                        \n                            \n                                Value : expert\n                            \n                        \n            \n        \n\n    src/common/enum/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : in_progress\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n\n    src/common/enum/user.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AiServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatasetModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiagnosisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KnowledgeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiServiceModule\n\n\n\ncluster_AiServiceModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DatasetModule\n\n\n\ncluster_DatasetModule_providers\n\n\n\ncluster_DiagnosisModule\n\n\n\ncluster_DiagnosisModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_KnowledgeModule\n\n\n\ncluster_KnowledgeModule_providers\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAiServiceService\n\nAiServiceService\n\n\n\nAiServiceModule\n\nAiServiceModule\n\nAiServiceModule -->\n\nAiServiceService->AiServiceModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiServiceModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatasetModule\n\nDatasetModule\n\nAppModule -->\n\nDatasetModule->AppModule\n\n\n\n\n\nDiagnosisModule\n\nDiagnosisModule\n\nAppModule -->\n\nDiagnosisModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nDatasetModule -->\n\nFileModule->DatasetModule\n\n\n\nDiagnosisModule -->\n\nFileModule->DiagnosisModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileManageService \n\nFileManageService \n\nFileManageService  -->\n\nFileModule->FileManageService \n\n\n\n\n\nFileOperationService \n\nFileOperationService \n\nFileOperationService  -->\n\nFileModule->FileOperationService \n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nKnowledgeModule\n\nKnowledgeModule\n\nAppModule -->\n\nKnowledgeModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nDatasetManageService\n\nDatasetManageService\n\nDatasetModule -->\n\nDatasetManageService->DatasetModule\n\n\n\n\n\nDatasetService\n\nDatasetService\n\nDatasetModule -->\n\nDatasetService->DatasetModule\n\n\n\n\n\nDiagnosisService\n\nDiagnosisService\n\nDiagnosisModule -->\n\nDiagnosisService->DiagnosisModule\n\n\n\n\n\nFileDownloadService\n\nFileDownloadService\n\nFileModule -->\n\nFileDownloadService->FileModule\n\n\n\n\n\nFileManageService\n\nFileManageService\n\nFileModule -->\n\nFileManageService->FileModule\n\n\n\n\n\nFileOperationService\n\nFileOperationService\n\nFileModule -->\n\nFileOperationService->FileModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nFileStorageService\n\nFileStorageService\n\nFileModule -->\n\nFileStorageService->FileModule\n\n\n\n\n\nFileUploadService\n\nFileUploadService\n\nFileModule -->\n\nFileUploadService->FileModule\n\n\n\n\n\nKnowledgeManageService\n\nKnowledgeManageService\n\nKnowledgeModule -->\n\nKnowledgeManageService->KnowledgeModule\n\n\n\n\n\nKnowledgeService\n\nKnowledgeService\n\nKnowledgeModule -->\n\nKnowledgeService->KnowledgeModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    24 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationTypeValue   (src/.../mime.ts)\n                        \n                        \n                            AppTypeValue   (src/.../mime.ts)\n                        \n                        \n                            AudioTypeValue   (src/.../mime.ts)\n                        \n                        \n                            DownloadRequest   (src/.../file.guard.ts)\n                        \n                        \n                            FontTypeValue   (src/.../mime.ts)\n                        \n                        \n                            ImageTypeValue   (src/.../mime.ts)\n                        \n                        \n                            MIMETypeValue   (src/.../mime.ts)\n                        \n                        \n                            OtherTypeValue   (src/.../mime.ts)\n                        \n                        \n                            VideoTypeValue   (src/.../mime.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/mime.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AppTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AudioTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FontTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MIMETypeValue\n                \n            \n            \n                \n                        VideoTypeValue | AudioTypeValue | ImageTypeValue | ApplicationTypeValue | FontTypeValue | OtherTypeValue | AppTypeValue\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OtherTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VideoTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/file/guards/file.guard.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadRequest\n                \n            \n            \n                \n                        Request\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            formatResponse   (src/.../response.helper.ts)\n                        \n                        \n                            getFileType   (src/.../mime.ts)\n                        \n                        \n                            getModelMimeType   (src/.../mime.ts)\n                        \n                        \n                            MIME_TYPE   (src/.../mime.ts)\n                        \n                        \n                            parseSize   (src/.../parse.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/response.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  code: number = 200,\n  data: T | null = null,\n  message: string = 'Success',\n): ApiResponse => {\n  return { code, data, message };\n}\n                    \n                \n\n\n        \n    \n\n    src/common/utils/mime.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFileType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (type: string): MIMETypeValue[] => {\n  switch (type) {\n    case 'image':\n      return Object.values(MIME_TYPE.Image);\n    case 'video':\n      return [...Object.values(MIME_TYPE.Video)];\n    case 'application':\n      return [...Object.values(MIME_TYPE.Application)];\n    case 'audio':\n      return [...Object.values(MIME_TYPE.Audio)];\n    case 'other':\n      return [\n        ...Object.values(MIME_TYPE.Other),\n        ...Object.values(MIME_TYPE.Font),\n      ];\n    default:\n      return [];\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelMimeType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (extension: string): string => {\n  const modelMimeTypes: { [key: string]: string } = {\n    pth: 'application/pytorch-model',\n    pt: 'application/pytorch-model',\n    h5: 'application/tensorflow-model',\n    pb: 'application/tensorflow-model',\n    onnx: 'application/onnx-model',\n    caffemodel: 'application/caffe-model',\n    weights: 'application/darknet-weights',\n    params: 'application/mxnet-model',\n    bin: 'application/huggingface-model',\n  };\n\n  return modelMimeTypes[extension.toLowerCase()] || 'application/octet-stream';\n}\n                    \n                \n\n\n        \n    \n\n    src/common/constants/mime.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MIME_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    // 视频文件类型\n    Video: {\n        MP4: \"video/mp4\",\n        AVI: \"video/avi\",\n        MPEG: \"video/mpeg\",\n        OGG: \"video/ogg\",\n        WebM: \"video/webm\",\n        \"3GPP\": \"video/3gpp\",\n        QuickTime: \"video/quicktime\",\n        XMSVideo: \"video/x-msvideo\",\n    },\n\n    // 音频文件类型\n    Audio: {\n        MP3: \"audio/mpeg\",\n        WAV: \"audio/wav\",\n        OGG: \"audio/ogg\",\n        AAC: \"audio/aac\",\n        FLAC: \"audio/flac\",\n        WebM: \"audio/webm\",\n        Opus: \"audio/opus\",\n    },\n\n    // 图像文件类型\n    Image: {\n        JPEG: \"image/jpeg\",\n        PNG: \"image/png\",\n        GIF: \"image/gif\",\n        WebP: \"image/webp\",\n        BMP: \"image/bmp\",\n        SVG: \"image/svg+xml\",\n        TIFF: \"image/tiff\",\n    },\n\n    // 文档文件类型\n    Application: {\n        PDF: \"application/pdf\",\n        Word: \"application/msword\",\n        Excel: \"application/vnd.ms-excel\",\n        PowerPoint: \"application/vnd.ms-powerpoint\",\n        WordOpenXML:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        ExcelOpenXML:\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        PPTXOpenXML:\n            \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n        JSON: \"application/json\",\n        XML: \"application/xml\",\n\n        // 深度学习模型文件类型\n        PyTorch: \"application/pytorch-model\",\n        TensorFlow: \"application/tensorflow-model\",\n        ONNX: \"application/onnx-model\",\n        Caffe: \"application/caffe-model\",\n        Darknet: \"application/darknet-weights\",\n        MXNet: \"application/mxnet-model\",\n        HuggingFace: \"application/huggingface-model\",\n    },\n\n    // 应用程序文件类型\n    App: {\n        Zip: \"application/zip\",\n        XZip: \"application/x-zip-compressed\",\n        RAR: \"application/x-rar-compressed\",\n        TAR: \"application/x-tar\",\n        \"7z\": \"application/x-7z-compressed\",\n        SH: \"application/x-sh\",\n        JAR: \"application/java-archive\",\n    },\n\n    // 字体文件类型\n    Font: {\n        WOFF: \"font/woff\",\n        WOFF2: \"font/woff2\",\n        FontWOFF: \"application/font-woff\",\n        FontTTF: \"application/font-ttf\",\n        FontOTF: \"application/font-otf\",\n    },\n\n    // 其他类型\n    Other: {\n        CSV: \"text/csv\",\n        PHP: \"application/x-httpd-php\",\n        OctetStream: \"application/octet-stream\",\n    },\n} as const\n                    \n                \n\n\n        \n    \n\n    src/common/utils/parse.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (size: string): number => {\n  const regex = /^(\\d+)(kb|mb|gb|tb)$/i;\n  const match = size.match(regex);\n\n  if (!match) {\n    throw new Error(`无效的大小格式: ${size}`);\n  }\n\n  const value = parseInt(match[1], 10);\n  const unit = match[2].toLowerCase();\n\n  switch (unit) {\n    case 'kb':\n      return value * 1024; // KB -> 字节\n    case 'mb':\n      return value * 1024 * 1024; // MB -> 字节\n    case 'gb':\n      return value * 1024 * 1024 * 1024; // GB -> 字节\n    case 'tb':\n      return value * 1024 * 1024 * 1024 * 1024; // TB -> 字节\n    default:\n      throw new Error(`不支持的单位: ${unit}`);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorator/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
