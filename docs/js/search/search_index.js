var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.9',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/entities/AIModel.html', [0, 1.551, 1, 3.106]],
      [
        'body/entities/AIModel.html',
        [
          0, 1.272, 1, 3.673, 2, 1.779, 3, 0.062, 4, 0.056, 5, 0.05, 6, 5.509,
          7, 3.485, 8, 0.174, 9, 0.885, 10, 3.966, 11, 3.691, 12, 1.678, 13,
          2.251, 14, 1.199, 15, 6.626, 16, 6.626, 17, 4.513, 18, 3.822, 19,
          5.043, 20, 0.444, 21, 0.007, 22, 4.516, 23, 1.317, 24, 3.95, 25,
          6.446, 26, 4.315, 27, 2.351, 28, 2.847, 29, 5.205, 30, 0.551, 31,
          3.92, 32, 1.405, 33, 4.516, 34, 3.92, 35, 0.849, 36, 4.057, 37, 3.144,
          38, 4.057, 39, 3.92, 40, 5.023, 41, 3.92, 42, 3.92, 43, 5.205, 44,
          2.45, 45, 3.673, 46, 3.92, 47, 5.651, 48, 4.341, 49, 3.569, 50, 6.446,
          51, 3.92, 52, 4.183, 53, 2.863, 54, 5.651, 55, 3.485, 56, 5.651, 57,
          3.92, 58, 4.054, 59, 3.92, 60, 3.92, 61, 3.92, 62, 0.191, 63, 4.043,
          64, 5.405, 65, 4.307, 66, 2.047, 67, 1.381, 68, 3.92, 69, 1.612, 70,
          2.67, 71, 3.92, 72, 0.075, 73, 0.156, 74, 3.92, 75, 4.61, 76, 6.446,
          77, 3.198, 78, 3.519, 79, 0.004, 80, 0.004,
        ],
      ],
      ['title/injectables/AiConfigsService.html', [81, 0.903, 82, 3.255]],
      [
        'body/injectables/AiConfigsService.html',
        [
          3, 0.059, 4, 0.053, 5, 0.047, 8, 0.165, 14, 1.095, 20, 0.377, 21,
          0.007, 30, 0.495, 32, 1.592, 52, 2.142, 53, 4.597, 62, 0.234, 67,
          1.308, 69, 3.337, 72, 0.071, 73, 0.148, 78, 4.894, 79, 0.004, 80,
          0.004, 81, 1.026, 82, 3.7, 83, 1.335, 84, 1.398, 85, 3.884, 86, 6.621,
          87, 3.3, 88, 1.21, 89, 2.57, 90, 4.829, 91, 4.829, 92, 4.829, 93,
          4.829, 94, 4.829, 95, 1.874, 96, 3.3, 97, 4.521, 98, 5.71, 99, 3.713,
          100, 1.782, 101, 1.073, 102, 4.829, 103, 4.829, 104, 3.867, 105,
          5.071, 106, 3.713, 107, 1.675, 108, 4.829, 109, 4.815, 110, 3.713,
          111, 4.829, 112, 3.713, 113, 1.181, 114, 5.432, 115, 3.713, 116,
          5.766, 117, 5.432, 118, 5.38, 119, 3.713, 120, 2.413, 121, 1.684, 122,
          2.664, 123, 0.549, 124, 2.142, 125, 1.827, 126, 2.752, 127, 4.829,
          128, 3.3, 129, 1.881, 130, 3.3, 131, 1.836, 132, 3.3, 133, 2.313, 134,
          2.928, 135, 5.71, 136, 4.175, 137, 5.24, 138, 2.764, 139, 2.441, 140,
          7.522, 141, 0.755, 142, 3.713, 143, 3.713, 144, 5.432, 145, 3.713,
          146, 3.713, 147, 3.713, 148, 7.522, 149, 3.713, 150, 4.375, 151,
          4.375, 152, 5.432, 153, 3.713, 154, 3.713, 155, 3.713, 156, 3.713,
        ],
      ],
      ['title/controllers/AiModelController.html', [157, 1.328, 158, 3.637]],
      [
        'body/controllers/AiModelController.html',
        [
          3, 0.077, 4, 0.07, 5, 0.062, 8, 0.216, 13, 2.34, 14, 1.111, 20, 0.382,
          21, 0.007, 23, 1.255, 30, 0.525, 35, 0.958, 62, 0.24, 69, 3.277, 72,
          0.093, 73, 0.194, 79, 0.005, 80, 0.005, 84, 1.477, 85, 4.104, 88,
          1.465, 100, 1.808, 101, 1.089, 107, 1.854, 123, 0.72, 126, 2.468, 129,
          2.468, 141, 1.692, 157, 1.354, 158, 5.004, 159, 1.613, 160, 6.528,
          161, 4.329, 162, 2.713, 163, 5.004, 164, 3.236, 165, 4.162, 166,
          3.544, 167, 3.433, 168, 3.433, 169, 4.329, 170, 5.842, 171, 4.294,
          172, 4.87, 173, 4.87, 174, 3.033, 175, 4.479, 176, 4.87, 177, 2.915,
          178, 4.479, 179, 4.87, 180, 2.915, 181, 6.397, 182, 5.845, 183, 4.87,
          184, 3.793, 185, 2.809, 186, 2.468, 187, 4.329, 188, 3.793, 189,
          1.189, 190, 5.07, 191, 4.329, 192, 5.364, 193, 4.329, 194, 2.101, 195,
          1.581, 196, 3.494, 197, 4.87, 198, 4.87, 199, 3.973, 200, 4.87, 201,
          3.973, 202, 4.87, 203, 3.973, 204, 4.87,
        ],
      ],
      ['title/modules/AiModelModule.html', [205, 1.551, 206, 3.637]],
      [
        'body/modules/AiModelModule.html',
        [
          3, 0.104, 4, 0.094, 5, 0.083, 21, 0.007, 62, 0.247, 69, 3.265, 72,
          0.125, 73, 0.26, 79, 0.006, 80, 0.006, 84, 1.125, 85, 3.128, 123,
          0.966, 158, 6.511, 159, 2.63, 160, 4.974, 190, 6.314, 191, 5.809, 205,
          2.776, 206, 7.055, 207, 2.89, 208, 3.311, 209, 3.522, 210, 3.522, 211,
          3.311, 212, 4.61, 213, 3.413, 214, 5.809, 215, 5.809, 216, 4.28, 217,
          3.522, 218, 3.413, 219, 6.535, 220, 6.535,
        ],
      ],
      ['title/injectables/AiModelService.html', [81, 0.903, 190, 3.255]],
      [
        'body/injectables/AiModelService.html',
        [
          1, 5.514, 3, 0.082, 4, 0.074, 5, 0.066, 8, 0.229, 13, 2.378, 14,
          1.136, 20, 0.391, 21, 0.007, 30, 0.535, 32, 1.603, 35, 0.9, 62, 0.221,
          69, 2.808, 72, 0.098, 73, 0.205, 79, 0.005, 80, 0.005, 81, 1.29, 83,
          1.854, 84, 1.501, 85, 4.172, 88, 1.521, 100, 1.85, 101, 1.114, 107,
          1.981, 123, 0.762, 126, 2.612, 129, 2.612, 139, 1.673, 141, 1.725,
          160, 6.635, 164, 3.361, 165, 4.258, 166, 3.681, 167, 3.566, 168,
          3.566, 169, 6.071, 170, 5.778, 174, 4.254, 177, 4.088, 180, 4.088,
          181, 6.381, 190, 4.652, 192, 5.571, 221, 4.582, 222, 5.155, 223,
          5.155, 224, 5.155, 225, 5.155, 226, 5.155, 227, 7.541, 228, 4.582,
          229, 4.205, 230, 4.582,
        ],
      ],
      ['title/entities/AiService.html', [0, 1.551, 52, 2.756]],
      [
        'body/entities/AiService.html',
        [
          0, 1.184, 1, 4.556, 2, 1.655, 3, 0.058, 4, 0.052, 5, 0.047, 6, 5.544,
          8, 0.238, 9, 0.84, 10, 3.806, 12, 1.61, 13, 0.995, 17, 4.331, 20,
          0.444, 21, 0.007, 22, 4.366, 23, 1.329, 24, 3.863, 26, 4.463, 27,
          2.585, 28, 3.066, 29, 5.076, 30, 0.556, 32, 0.941, 35, 0.878, 36,
          3.956, 37, 3.066, 38, 3.551, 44, 1.812, 45, 2.371, 49, 1.795, 52,
          3.093, 53, 3.222, 58, 3.847, 62, 0.215, 63, 3.963, 65, 3.486, 66,
          3.32, 67, 1.285, 69, 2.882, 72, 0.07, 73, 0.145, 78, 3.96, 79, 0.004,
          80, 0.004, 120, 5.076, 137, 5.187, 163, 4.082, 231, 3.243, 232, 5.652,
          233, 5.652, 234, 5.187, 235, 6.092, 236, 5.187, 237, 3.043, 238,
          5.652, 239, 5.319, 240, 5.652, 241, 5.363, 242, 3.648, 243, 5.363,
          244, 3.648, 245, 5.319, 246, 5.363, 247, 3.648, 248, 4.366, 249,
          3.648, 250, 3.34, 251, 3.648, 252, 3.648, 253, 3.648, 254, 3.648, 255,
          4.082, 256, 3.648, 257, 5.684, 258, 4.84, 259, 5.187, 260, 6.231, 261,
          3.648, 262, 5.363, 263, 3.648, 264, 3.648, 265, 6.231, 266, 2.032,
          267, 4.375, 268, 2.976, 269, 3.243, 270, 3.648, 271, 3.648, 272,
          2.777, 273, 2.485,
        ],
      ],
      ['title/entities/AiServiceAccessLog.html', [0, 1.551, 239, 3.255]],
      [
        'body/entities/AiServiceAccessLog.html',
        [
          0, 1.654, 2, 2.313, 3, 0.081, 4, 0.073, 5, 0.065, 6, 5.524, 8, 0.226,
          9, 1.062, 13, 1.849, 14, 0.945, 20, 0.438, 21, 0.007, 22, 4.222, 23,
          1.31, 24, 3.645, 28, 2.661, 29, 4.406, 30, 0.548, 32, 1.58, 33, 5.056,
          48, 4.058, 52, 5.013, 53, 4.666, 62, 0.195, 63, 4.045, 66, 3.977, 67,
          1.795, 69, 2.787, 70, 3.472, 72, 0.097, 73, 0.203, 78, 4.222, 79,
          0.005, 80, 0.005, 239, 4.617, 248, 4.222, 266, 4.941, 274, 4.158, 275,
          7.617, 276, 7.617, 277, 7.617, 278, 7.617, 279, 3.174, 280, 4.531,
          281, 5.097, 282, 5.097, 283, 3.472, 284, 5.097, 285, 4.531, 286,
          5.097, 287, 5.097, 288, 5.097, 289, 4.617, 290, 5.097, 291, 5.097,
          292, 4.158,
        ],
      ],
      ['title/entities/AiServiceConfig.html', [0, 1.551, 120, 3.106]],
      [
        'body/entities/AiServiceConfig.html',
        [
          0, 1.63, 2, 2.279, 3, 0.08, 4, 0.072, 5, 0.064, 6, 5.503, 8, 0.223, 9,
          1.052, 10, 4.526, 13, 1.37, 14, 0.7, 17, 5.15, 20, 0.441, 21, 0.007,
          22, 5.026, 23, 1.304, 24, 3.862, 28, 3.168, 29, 5.625, 30, 0.546, 32,
          1.178, 35, 0.856, 36, 3.401, 37, 2.635, 38, 3.401, 48, 4.018, 52,
          4.992, 53, 4.654, 58, 4.816, 62, 0.194, 63, 4.025, 66, 3.948, 67,
          1.769, 69, 2.759, 70, 3.421, 72, 0.096, 73, 0.2, 78, 4.18, 79, 0.005,
          80, 0.005, 116, 6.167, 120, 4.363, 150, 5.15, 151, 5.15, 248, 5.026,
          250, 4.18, 283, 3.421, 289, 4.572, 293, 4.465, 294, 5.022, 295, 5.022,
          296, 5.022, 297, 5.022, 298, 5.022, 299, 5.022, 300, 5.022, 301,
          5.022, 302, 5.022,
        ],
      ],
      ['title/controllers/AiServiceController.html', [157, 1.328, 303, 3.637]],
      [
        'body/controllers/AiServiceController.html',
        [
          3, 0.041, 4, 0.037, 5, 0.033, 8, 0.114, 14, 1.09, 20, 0.375, 21,
          0.007, 23, 1.204, 30, 0.504, 32, 1.641, 44, 2.155, 53, 3.231, 62,
          0.241, 69, 3.479, 72, 0.049, 73, 0.103, 78, 5.495, 79, 0.003, 80,
          0.003, 82, 3.485, 84, 1.4, 85, 3.891, 88, 0.914, 89, 2.632, 90, 4.548,
          91, 4.548, 92, 4.548, 93, 4.548, 94, 4.548, 95, 0.888, 100, 1.775,
          101, 1.069, 103, 2.287, 104, 3.699, 105, 5.116, 107, 1.779, 108,
          2.287, 109, 3.977, 111, 2.287, 113, 2.428, 116, 6.04, 123, 0.38, 126,
          2.592, 127, 2.287, 128, 2.287, 129, 1.304, 131, 1.387, 133, 1.623,
          134, 2.755, 139, 2.539, 141, 1.551, 157, 0.715, 159, 0.852, 162,
          1.433, 164, 2.019, 165, 3.049, 166, 2.758, 167, 2.672, 168, 2.672,
          171, 2.367, 184, 3.679, 185, 1.484, 186, 4.047, 188, 2.367, 189,
          0.628, 193, 2.287, 195, 1.332, 196, 1.846, 303, 3.123, 304, 6.632,
          305, 2.287, 306, 4.548, 307, 2.573, 308, 2.573, 309, 2.573, 310,
          2.573, 311, 1.846, 312, 4.189, 313, 2.287, 314, 2.573, 315, 2.573,
          316, 2.287, 317, 4.103, 318, 2.573, 319, 2.287, 320, 2.97, 321, 3.123,
          322, 2.573, 323, 2.719, 324, 4.103, 325, 2.573, 326, 2.287, 327,
          2.573, 328, 2.573, 329, 2.573, 330, 2.573, 331, 2.573, 332, 5.838,
          333, 2.287, 334, 5.312, 335, 4.103, 336, 2.573, 337, 2.573, 338,
          4.103, 339, 2.573, 340, 1.138, 341, 1.753, 342, 1.304, 343, 1.673,
          344, 1.673, 345, 1.959, 346, 1.304, 347, 1.484, 348, 2.456, 349,
          1.753, 350, 1.304, 351, 1.433, 352, 1.673, 353, 1.433, 354, 5.441,
          355, 1.753, 356, 1.846, 357, 1.959, 358, 1.54, 359, 3.647, 360, 3.647,
          361, 2.287, 362, 3.485, 363, 2.287, 364, 1.753, 365, 2.099, 366, 1.54,
          367, 1.959, 368, 3.326, 369, 2.573, 370, 3.326, 371, 4.103, 372,
          2.573, 373, 4.233, 374, 1.846, 375, 1.846, 376, 2.667, 377, 2.795,
          378, 2.573, 379, 5.613, 380, 5.613, 381, 2.573, 382, 2.573, 383,
          2.573, 384, 2.795, 385, 2.573, 386, 2.573, 387, 2.573, 388, 2.573,
          389, 2.573, 390, 3.347, 391, 2.573, 392, 2.573, 393, 2.573, 394,
          2.573,
        ],
      ],
      ['title/entities/AiServiceLog.html', [0, 1.551, 245, 3.255]],
      [
        'body/entities/AiServiceLog.html',
        [
          0, 1.689, 2, 2.361, 3, 0.139, 4, 0.075, 5, 0.066, 6, 5.444, 8, 0.231,
          9, 1.077, 10, 4.606, 13, 1.42, 14, 0.725, 20, 0.434, 21, 0.007, 22,
          4.28, 23, 1.283, 24, 3.683, 28, 3.213, 29, 4.467, 30, 0.537, 32,
          1.206, 35, 0.729, 48, 4.114, 49, 2.561, 52, 5.042, 53, 4.639, 62,
          0.198, 63, 3.917, 66, 4.018, 67, 1.833, 69, 2.825, 70, 3.545, 72,
          0.099, 73, 0.207, 78, 4.28, 79, 0.005, 80, 0.005, 245, 4.681, 248,
          4.28, 250, 4.28, 260, 7.276, 274, 4.245, 280, 4.626, 283, 3.545, 285,
          4.626, 289, 4.681, 395, 7.695, 396, 7.695, 397, 2.06, 398, 5.204, 399,
          3.491, 400, 7.695, 401, 5.204, 402, 5.204, 403, 5.204, 404, 5.204,
          405, 5.204,
        ],
      ],
      ['title/modules/AiServiceModule.html', [205, 1.551, 406, 3.637]],
      [
        'body/modules/AiServiceModule.html',
        [
          3, 0.091, 4, 0.082, 5, 0.073, 6, 5.296, 21, 0.007, 52, 4.23, 53,
          4.308, 62, 0.269, 69, 2.364, 70, 3.918, 72, 0.11, 73, 0.229, 79,
          0.005, 80, 0.005, 82, 6.117, 84, 0.99, 85, 2.752, 120, 4.767, 123,
          0.85, 125, 2.831, 159, 2.428, 205, 2.62, 207, 2.543, 208, 2.914, 209,
          3.1, 210, 3.1, 211, 2.914, 212, 4.351, 213, 3.003, 216, 3.952, 217,
          3.1, 218, 3.003, 239, 4.995, 245, 4.995, 266, 3.204, 267, 5.982, 268,
          4.692, 303, 6.145, 304, 4.692, 360, 6.519, 361, 5.113, 362, 6.117,
          363, 5.113, 406, 7.033, 407, 5.113, 408, 5.113, 409, 5.752, 410,
          4.378, 411, 5.752, 412, 3.003, 413, 5.752,
        ],
      ],
      ['title/injectables/AiServiceService.html', [81, 0.903, 362, 3.255]],
      [
        'body/injectables/AiServiceService.html',
        [
          3, 0.06, 4, 0.054, 5, 0.048, 6, 4.431, 8, 0.167, 14, 1.1, 20, 0.379,
          21, 0.007, 30, 0.514, 32, 1.595, 52, 4.554, 53, 3.832, 62, 0.246, 67,
          1.326, 69, 3.434, 70, 2.564, 72, 0.072, 73, 0.15, 78, 4.917, 79,
          0.004, 80, 0.004, 81, 1.037, 83, 1.354, 84, 1.439, 85, 3.998, 86,
          6.815, 88, 1.222, 89, 2.62, 95, 1.893, 96, 3.346, 97, 4.988, 98,
          5.755, 100, 1.791, 101, 1.079, 102, 4.877, 104, 3.345, 107, 1.759,
          113, 1.746, 120, 2.447, 123, 0.556, 124, 2.171, 125, 1.852, 126,
          1.907, 129, 1.907, 130, 3.346, 131, 2.404, 132, 3.346, 133, 1.978,
          134, 2.609, 135, 5.755, 136, 2.447, 137, 3.07, 138, 2.016, 139, 1.781,
          141, 1.538, 164, 2.7, 165, 3.715, 166, 2.957, 167, 2.865, 168, 2.865,
          232, 3.346, 233, 3.346, 239, 2.564, 245, 2.564, 266, 2.097, 267,
          4.476, 268, 3.07, 306, 4.877, 311, 3.936, 312, 5.104, 316, 4.877, 319,
          4.877, 320, 3.523, 323, 2.555, 326, 4.877, 333, 4.877, 334, 5.104,
          359, 4.877, 362, 3.737, 414, 3.346, 415, 6.474, 416, 6.474, 417,
          3.764, 418, 3.764, 419, 4.654, 420, 3.764, 421, 3.764, 422, 3.764,
          423, 3.764, 424, 3.764, 425, 3.764, 426, 3.764, 427, 3.764, 428,
          5.486, 429, 3.764, 430, 4.476, 431, 0.886, 432, 3.764, 433, 2.865,
          434, 5.486, 435, 4.877, 436, 3.764, 437, 3.764,
        ],
      ],
      ['title/interfaces/ApiResponse.html', [438, 2.168, 439, 3.637]],
      [
        'body/interfaces/ApiResponse.html',
        [
          3, 0.1, 4, 0.09, 5, 0.08, 8, 0.279, 9, 1.216, 20, 0.404, 21, 0.007,
          32, 1.541, 35, 0.931, 44, 3.049, 72, 0.148, 79, 0.006, 80, 0.006, 133,
          1.75, 141, 1.28, 350, 3.189, 397, 2.46, 438, 2.856, 439, 6.404, 440,
          3.92, 441, 5.135, 442, 5.299, 443, 4.396, 444, 7.165, 445, 3.92, 446,
          4.287,
        ],
      ],
      ['title/controllers/AppController.html', [157, 1.328, 447, 3.898]],
      [
        'body/controllers/AppController.html',
        [
          3, 0.097, 4, 0.087, 5, 0.078, 8, 0.271, 21, 0.007, 23, 1.147, 30,
          0.48, 35, 0.807, 62, 0.239, 72, 0.116, 73, 0.243, 79, 0.006, 80,
          0.006, 84, 1.428, 88, 1.695, 89, 2.35, 107, 1.695, 123, 0.902, 133,
          1.695, 141, 1.547, 157, 2.115, 159, 2.019, 194, 2.63, 195, 1.979, 248,
          4.739, 346, 3.09, 347, 3.518, 358, 3.65, 366, 3.65, 397, 1.633, 419,
          4.239, 447, 6.207, 448, 5.421, 449, 7.721, 450, 8.686, 451, 6.098,
          452, 6.098, 453, 7.373, 454, 6.098, 455, 5.951, 456, 4.974, 457,
          6.098, 458, 6.098, 459, 4.974, 460, 6.098, 461, 6.098,
        ],
      ],
      ['title/modules/AppModule.html', [205, 1.551, 462, 3.637]],
      [
        'body/modules/AppModule.html',
        [
          3, 0.095, 4, 0.086, 5, 0.077, 21, 0.007, 27, 1.833, 62, 0.262, 72,
          0.114, 73, 0.239, 79, 0.006, 80, 0.006, 123, 0.886, 205, 2.67, 207,
          2.649, 208, 3.035, 209, 3.229, 210, 3.229, 211, 3.035, 212, 3.229,
          213, 3.128, 216, 4.056, 217, 3.229, 218, 3.128, 412, 3.93, 462, 7.204,
          463, 5.326, 464, 5.326, 465, 6.511, 466, 6.38, 467, 6.511, 468, 3.456,
          469, 5.991, 470, 5.991, 471, 4.298, 472, 3.229, 473, 5.991, 474,
          5.326, 475, 5.326, 476, 5.991, 477, 5.991, 478, 4.56, 479, 4.56, 480,
          4.56, 481, 4.56, 482, 4.56, 483, 4.56, 484, 5.991, 485, 5.991,
        ],
      ],
      ['title/injectables/AppService.html', [81, 0.903, 455, 3.428]],
      [
        'body/injectables/AppService.html',
        [
          3, 0.11, 4, 0.099, 5, 0.089, 8, 0.308, 21, 0.007, 30, 0.437, 35,
          0.872, 62, 0.2, 72, 0.132, 73, 0.276, 79, 0.006, 80, 0.006, 81, 1.554,
          83, 2.494, 84, 1.417, 88, 1.833, 107, 1.544, 123, 1.025, 141, 1.41,
          449, 8.067, 455, 5.903, 486, 6.163, 487, 6.933, 488, 6.933, 489,
          6.933,
        ],
      ],
      ['title/controllers/AuthController.html', [157, 1.328, 490, 3.255]],
      [
        'body/controllers/AuthController.html',
        [
          3, 0.067, 4, 0.061, 5, 0.054, 8, 0.187, 14, 0.962, 20, 0.331, 21,
          0.007, 23, 1.131, 27, 1.823, 30, 0.473, 35, 0.732, 44, 1.427, 62,
          0.259, 72, 0.08, 73, 0.168, 79, 0.004, 80, 0.004, 84, 1.362, 88,
          1.327, 89, 2.567, 95, 1.457, 100, 1.566, 101, 0.943, 104, 3.73, 107,
          1.671, 113, 2.386, 123, 0.624, 131, 1.427, 133, 1.919, 134, 2.587,
          141, 1.525, 157, 1.174, 159, 1.398, 162, 2.353, 171, 2.436, 184,
          3.437, 185, 2.436, 186, 2.14, 188, 3.437, 189, 1.031, 195, 1.371, 346,
          2.14, 347, 2.436, 350, 3.498, 351, 2.353, 352, 2.745, 353, 2.353, 358,
          2.528, 366, 2.528, 368, 2.745, 370, 2.745, 445, 3.711, 490, 4.059,
          491, 3.754, 492, 3.754, 493, 6.118, 494, 4.059, 495, 4.535, 496,
          5.297, 497, 4.223, 498, 4.223, 499, 4.223, 500, 4.875, 501, 4.223,
          502, 4.223, 503, 4.223, 504, 3.493, 505, 4.875, 506, 4.223, 507,
          4.223, 508, 4.954, 509, 4.223, 510, 4.223, 511, 4.223, 512, 5.708,
          513, 2.276, 514, 3.437, 515, 1.371, 516, 2.877, 517, 2.021, 518, 2.14,
          519, 4.488, 520, 4.703, 521, 2.276, 522, 3.754, 523, 3.754, 524,
          4.861, 525, 4.223, 526, 4.223, 527, 3.754, 528, 3.754, 529, 4.223,
          530, 4.223, 531, 7.5, 532, 3.691, 533, 3.754, 534, 5.297, 535, 4.223,
          536, 3.754, 537, 2.353, 538, 4.223, 539, 4.223, 540, 6.138, 541,
          4.223, 542, 2.276, 543, 3.754, 544, 3.754, 545, 4.223, 546, 4.223,
          547, 4.223, 548, 3.754, 549, 4.223, 550, 3.754, 551, 3.754,
        ],
      ],
      [
        'title/controllers/AuthController-1.html',
        [157, 1.113, 431, 0.942, 490, 2.728],
      ],
      [
        'body/controllers/AuthController-1.html',
        [
          3, 0.072, 4, 0.064, 5, 0.057, 8, 0.2, 14, 1.075, 20, 0.44, 21, 0.007,
          23, 1.22, 30, 0.51, 35, 0.758, 62, 0.233, 72, 0.086, 73, 0.179, 79,
          0.005, 80, 0.005, 88, 1.388, 89, 2.646, 100, 1.749, 101, 1.053, 104,
          2.755, 107, 1.803, 113, 2.576, 123, 0.665, 133, 1.732, 141, 1.646,
          157, 1.732, 159, 1.491, 194, 1.942, 468, 4.831, 490, 4.244, 493,
          6.291, 494, 4.867, 495, 4.742, 496, 5.538, 500, 4.05, 505, 4.05, 512,
          4.742, 515, 1.461, 522, 4.001, 523, 4.001, 532, 3.985, 533, 5.538,
          536, 5.538, 537, 3.471, 543, 5.538, 548, 5.538, 552, 4.001, 553,
          6.231, 554, 4.847, 555, 6.231, 556, 4.501, 557, 4.501, 558, 4.307,
          559, 4.501, 560, 4.949, 561, 4.501, 562, 4.501, 563, 4.501, 564,
          4.501, 565, 4.501, 566, 4.501, 567, 5.014, 568, 5.127, 569, 4.501,
          570, 4.501, 571, 3.907, 572, 4.47, 573, 4.501, 574, 4.501, 575, 4.501,
          576, 4.501, 577, 4.501, 578, 4.501, 579, 4.501, 580, 4.501, 581,
          4.501,
        ],
      ],
      ['title/injectables/AuthGuard.html', [81, 0.903, 346, 2.421]],
      [
        'body/injectables/AuthGuard.html',
        [
          3, 0.1, 4, 0.091, 5, 0.081, 14, 0.881, 20, 0.303, 21, 0.007, 30,
          0.399, 32, 1.109, 35, 0.825, 62, 0.243, 72, 0.148, 73, 0.252, 79,
          0.006, 80, 0.006, 81, 1.47, 83, 2.275, 95, 2.181, 100, 1.435, 101,
          0.864, 123, 0.935, 194, 2.728, 279, 2.375, 340, 2.796, 346, 4.272,
          438, 3.531, 472, 3.408, 504, 2.945, 518, 3.204, 582, 4.813, 583,
          4.064, 584, 6.349, 585, 4.813, 586, 5.728, 587, 6.324, 588, 5.159,
          589, 4.307, 590, 5.301, 591, 3.112, 592, 4.111, 593, 3.785, 594,
          4.111, 595, 3.204, 596, 4.813,
        ],
      ],
      ['title/modules/AuthModule.html', [205, 1.551, 465, 3.428]],
      [
        'body/modules/AuthModule.html',
        [
          3, 0.096, 4, 0.087, 5, 0.078, 14, 0.846, 21, 0.007, 62, 0.263, 72,
          0.116, 73, 0.242, 79, 0.006, 80, 0.006, 84, 1.045, 123, 0.898, 159,
          2.513, 205, 2.687, 207, 2.685, 208, 3.076, 209, 3.272, 210, 3.272,
          211, 3.076, 212, 4.461, 213, 3.17, 216, 4.089, 217, 3.272, 218, 3.17,
          412, 3.17, 465, 6.533, 490, 5.638, 515, 1.97, 516, 5.169, 517, 2.905,
          589, 4.135, 597, 5.397, 598, 5.397, 599, 6.533, 600, 6.071, 601,
          4.135, 602, 5.169, 603, 7.588, 604, 5.775, 605, 6.071, 606, 6.071,
          607, 4.135, 608, 4.135, 609, 4.135, 610, 3.17, 611, 4.135, 612, 3.634,
        ],
      ],
      ['title/injectables/AuthService.html', [81, 0.903, 568, 3.428]],
      [
        'body/injectables/AuthService.html',
        [
          3, 0.058, 4, 0.052, 5, 0.046, 8, 0.161, 13, 0.99, 14, 1.039, 20,
          0.358, 21, 0.007, 27, 1.634, 30, 0.491, 35, 0.989, 62, 0.232, 72,
          0.069, 73, 0.145, 79, 0.004, 80, 0.004, 81, 1.009, 83, 1.305, 88,
          1.19, 89, 2.561, 95, 1.843, 100, 1.69, 101, 1.018, 107, 1.66, 113,
          2.371, 123, 0.536, 131, 2.142, 133, 2.071, 134, 2.689, 138, 2.738,
          139, 2.419, 141, 1.515, 185, 2.093, 195, 1.178, 279, 2.626, 340,
          1.605, 397, 1.995, 399, 1.646, 442, 4.299, 468, 4.648, 493, 5.703,
          494, 4.762, 495, 4.066, 512, 2.762, 513, 1.956, 514, 4.033, 515,
          1.178, 517, 1.737, 519, 4.545, 520, 3.638, 521, 1.956, 532, 3.441,
          534, 6.215, 537, 4.151, 542, 2.879, 544, 3.226, 550, 3.226, 551,
          3.226, 568, 3.832, 571, 4.083, 591, 1.786, 595, 2.706, 613, 3.226,
          614, 5.342, 615, 5.342, 616, 3.629, 617, 6.992, 618, 6.339, 619,
          4.762, 620, 5.171, 621, 3.629, 622, 4.357, 623, 3.629, 624, 5.342,
          625, 3.629, 626, 5.342, 627, 3.629, 628, 5.342, 629, 3.629, 630,
          5.342, 631, 3.629, 632, 3.629, 633, 2.96, 634, 4.854, 635, 3.629, 636,
          3.226, 637, 2.359, 638, 2.96, 639, 5.703, 640, 3.226, 641, 6.624, 642,
          3.629, 643, 2.96, 644, 5.342, 645, 3.629, 646, 2.96, 647, 3.629, 648,
          3.226, 649, 3.629, 650, 1.646, 651, 5.342, 652, 3.629, 653, 3.629,
          654, 3.629, 655, 3.629, 656, 3.629, 657, 3.226, 658, 3.629, 659,
          3.226, 660, 1.839, 661, 3.629, 662, 3.629, 663, 1.646,
        ],
      ],
      ['title/classes/BaseEntity.html', [73, 0.19, 664, 2.756]],
      [
        'body/classes/BaseEntity.html',
        [
          3, 0.104, 4, 0.094, 5, 0.083, 8, 0.29, 9, 1.244, 10, 5.121, 13, 2.334,
          17, 5.826, 20, 0.41, 21, 0.007, 22, 5.541, 23, 1.289, 30, 0.539, 32,
          1.393, 62, 0.188, 66, 4.467, 67, 2.302, 72, 0.125, 73, 0.26, 79,
          0.006, 80, 0.006, 664, 4.581, 665, 1.538, 666, 5.809, 667, 8.554, 668,
          6.535, 669, 6.535, 670, 8.554, 671, 6.535, 672, 6.535,
        ],
      ],
      ['title/classes/CompleteChunkDto.html', [73, 0.19, 673, 3.898]],
      [
        'body/classes/CompleteChunkDto.html',
        [
          3, 0.105, 4, 0.095, 5, 0.084, 8, 0.293, 9, 1.253, 12, 1.675, 13,
          2.182, 20, 0.384, 21, 0.007, 23, 0.997, 30, 0.417, 35, 0.848, 62,
          0.248, 72, 0.126, 73, 0.343, 79, 0.006, 80, 0.006, 189, 1.614, 431,
          1.882, 665, 1.556, 673, 6.525, 674, 7.11, 675, 5.034, 676, 6.169, 677,
          6.615, 678, 2.4, 679, 5.88, 680, 2.4, 681, 3.565, 682, 4.299, 683,
          3.367, 684, 1.947,
        ],
      ],
      ['title/classes/ConfigDto.html', [73, 0.19, 685, 3.637]],
      [
        'body/classes/ConfigDto.html',
        [
          3, 0.085, 4, 0.077, 5, 0.069, 8, 0.238, 9, 1.099, 12, 1.978, 20,
          0.431, 21, 0.007, 23, 1.057, 30, 0.442, 35, 0.935, 62, 0.225, 69,
          3.406, 72, 0.102, 73, 0.33, 79, 0.005, 80, 0.005, 84, 1.345, 85,
          3.739, 104, 2.374, 109, 3.656, 150, 5.643, 151, 5.643, 189, 1.31, 390,
          4.379, 397, 2.361, 665, 1.263, 678, 2.579, 680, 2.485, 681, 2.893,
          683, 3.488, 684, 1.58, 685, 6.542, 686, 5.605, 687, 4.379, 688, 3.452,
          689, 3.554, 690, 5.722, 691, 5.946, 692, 5.368, 693, 5.946, 694,
          5.368, 695, 3.907, 696, 2.486,
        ],
      ],
      ['title/classes/CreateAiConfigDto.html', [73, 0.19, 105, 3.428]],
      [
        'body/classes/CreateAiConfigDto.html',
        [
          3, 0.093, 4, 0.083, 5, 0.074, 8, 0.258, 9, 1.158, 12, 1.872, 20,
          0.423, 21, 0.007, 23, 1.114, 30, 0.466, 35, 0.955, 62, 0.234, 69,
          3.339, 72, 0.111, 73, 0.324, 79, 0.005, 80, 0.005, 84, 1.399, 85,
          3.887, 105, 5.304, 150, 5.532, 151, 5.532, 189, 1.422, 397, 2.287,
          665, 1.371, 678, 2.563, 680, 2.437, 681, 3.139, 683, 3.419, 684,
          1.714, 686, 5.827, 688, 3.639, 689, 3.746, 690, 6.031, 691, 5.627,
          693, 5.627, 696, 2.584, 697, 4.752, 698, 5.178, 699, 5.178,
        ],
      ],
      ['title/classes/CreateAiConfigsDto.html', [73, 0.19, 109, 3.255]],
      [
        'body/classes/CreateAiConfigsDto.html',
        [
          3, 0.088, 4, 0.08, 5, 0.071, 8, 0.246, 9, 1.123, 12, 2.011, 20, 0.434,
          21, 0.007, 23, 0.837, 30, 0.35, 35, 0.89, 49, 2.733, 62, 0.229, 69,
          3.265, 72, 0.106, 73, 0.334, 79, 0.005, 80, 0.005, 84, 1.235, 85,
          3.431, 104, 2.456, 109, 4.884, 150, 4.884, 151, 4.884, 189, 1.355,
          390, 6.478, 397, 2.382, 665, 1.307, 678, 2.518, 680, 2.518, 681,
          2.993, 683, 3.533, 684, 1.634, 685, 6.613, 686, 5.144, 687, 4.53, 691,
          5.457, 693, 5.457, 695, 3.994, 696, 2.526, 700, 2.657, 701, 5.553,
          702, 4.936, 703, 5.553, 704, 5.553,
        ],
      ],
      ['title/classes/CreateAiModelDto.html', [73, 0.19, 170, 3.255]],
      [
        'body/classes/CreateAiModelDto.html',
        [
          3, 0.117, 4, 0.105, 5, 0.094, 21, 0.007, 69, 3.027, 72, 0.14, 73,
          0.293, 79, 0.006, 80, 0.006, 84, 1.268, 85, 3.523, 170, 5.805, 665,
          1.732, 705, 6.545, 706, 6.006,
        ],
      ],
      ['title/classes/CreateAiServiceDto.html', [73, 0.19, 312, 3.428]],
      [
        'body/classes/CreateAiServiceDto.html',
        [
          3, 0.078, 4, 0.071, 5, 0.063, 8, 0.219, 9, 1.039, 12, 2.264, 20,
          0.401, 21, 0.007, 23, 1.26, 30, 0.527, 35, 0.948, 62, 0.191, 69,
          3.539, 72, 0.094, 73, 0.264, 79, 0.005, 80, 0.005, 84, 1.482, 85,
          4.119, 101, 1.221, 189, 1.204, 234, 6.111, 235, 6.111, 236, 6.111,
          237, 3.585, 257, 6.097, 258, 6.097, 259, 6.111, 273, 5.103, 312,
          4.757, 665, 1.16, 678, 2.746, 680, 2.583, 683, 3.154, 684, 1.451, 686,
          6.176, 696, 2.659, 707, 4.023, 708, 4.666, 709, 4.384, 710, 5.894,
          711, 4.384, 712, 4.384, 713, 4.384, 714, 4.757, 715, 4.384, 716,
          5.894, 717, 4.384, 718, 4.384, 719, 3.359, 720, 3.436,
        ],
      ],
      ['title/classes/CreateDatasetDto.html', [73, 0.19, 721, 3.255]],
      [
        'body/classes/CreateDatasetDto.html',
        [
          3, 0.082, 4, 0.074, 5, 0.066, 8, 0.23, 9, 1.073, 12, 2.254, 13, 1.868,
          14, 1.184, 20, 0.368, 21, 0.007, 23, 1.157, 27, 2.094, 30, 0.484, 32,
          1.201, 35, 0.901, 49, 2.547, 62, 0.221, 72, 0.099, 73, 0.306, 79,
          0.005, 80, 0.005, 101, 1.116, 141, 1.392, 189, 1.263, 397, 2.337, 431,
          1.806, 665, 1.218, 678, 2.618, 680, 2.45, 681, 2.789, 682, 4.451, 683,
          2.882, 684, 1.523, 688, 2.547, 695, 3.814, 696, 2.441, 700, 2.476,
          720, 3.155, 721, 4.664, 722, 6.662, 723, 4.221, 724, 4.959, 725,
          2.985, 726, 4.6, 727, 5.175, 728, 3.525, 729, 4.426, 730, 4.6, 731,
          5.175, 732, 5.175, 733, 4.6, 734, 5.175, 735, 2.953, 736, 3.713, 737,
          4.6, 738, 4.6, 739, 6.086, 740, 3.95, 741, 4.221, 742, 3.713, 743,
          2.985, 744, 3.223,
        ],
      ],
      [
        'title/classes/CreatePlantDiseaseKnowledgeDto.html',
        [73, 0.19, 745, 3.428],
      ],
      [
        'body/classes/CreatePlantDiseaseKnowledgeDto.html',
        [
          3, 0.037, 4, 0.033, 5, 0.03, 8, 0.104, 9, 0.595, 12, 2.271, 20, 0.43,
          21, 0.007, 23, 1.352, 30, 0.565, 35, 1.008, 62, 0.109, 72, 0.045, 73,
          0.151, 79, 0.003, 80, 0.003, 84, 1.551, 101, 1.296, 189, 0.571, 273,
          5.031, 665, 0.55, 678, 2.853, 680, 2.702, 683, 1.599, 684, 0.688, 696,
          2.853, 708, 5.439, 720, 3.687, 745, 2.725, 746, 8.006, 747, 1.907,
          748, 3.913, 749, 3.913, 750, 3.913, 751, 3.441, 752, 3.913, 753,
          3.913, 754, 3.913, 755, 3.913, 756, 3.913, 757, 3.913, 758, 3.913,
          759, 3.913, 760, 3.913, 761, 3.913, 762, 3.913, 763, 3.913, 764,
          3.913, 765, 3.913, 766, 3.913, 767, 3.913, 768, 3.913, 769, 3.913,
          770, 3.913, 771, 3.913, 772, 3.913, 773, 3.913, 774, 2.338, 775,
          2.338, 776, 2.338, 777, 2.338, 778, 2.338, 779, 2.338, 780, 2.338,
          781, 3.376, 782, 2.338, 783, 2.338, 784, 2.338, 785, 2.338, 786,
          2.338, 787, 4.264, 788, 3.376, 789, 2.338, 790, 2.078, 791, 3.376,
          792, 3.376, 793, 3.376, 794, 2.338, 795, 2.338, 796, 2.338, 797,
          3.376, 798, 2.338, 799, 2.338, 800, 2.338, 801, 2.338, 802, 3.376,
          803, 3.376, 804, 2.338, 805, 2.338, 806, 2.338, 807, 2.338, 808,
          2.338, 809, 2.338, 810, 3.376, 811, 2.338, 812, 3.376, 813, 4.909,
        ],
      ],
      ['title/classes/CreatePlantDto.html', [73, 0.19, 814, 3.255]],
      [
        'body/classes/CreatePlantDto.html',
        [
          3, 0.118, 4, 0.106, 5, 0.095, 21, 0.007, 72, 0.141, 73, 0.295, 79,
          0.006, 80, 0.006, 84, 1.275, 665, 1.742, 814, 5.823, 815, 6.58, 816,
          6.039,
        ],
      ],
      ['title/classes/CreateRoleDto.html', [73, 0.19, 817, 2.976]],
      [
        'body/classes/CreateRoleDto.html',
        [
          3, 0.092, 4, 0.083, 5, 0.074, 8, 0.257, 9, 1.155, 12, 2.279, 14, 1.13,
          20, 0.389, 21, 0.007, 23, 1.222, 30, 0.511, 35, 0.954, 62, 0.213, 72,
          0.111, 73, 0.294, 79, 0.005, 80, 0.005, 84, 1.469, 101, 1.165, 189,
          1.416, 665, 1.365, 678, 2.7, 680, 2.559, 683, 3.104, 684, 1.707, 696,
          2.714, 708, 4.592, 720, 3.332, 817, 4.592, 818, 7.582, 819, 4.162,
          820, 5.521, 821, 4.415, 822, 4.415, 823, 5.156, 824, 4.793, 825,
          4.415,
        ],
      ],
      [
        'title/classes/CreateRoleDto-1.html',
        [73, 0.16, 431, 0.942, 817, 2.495],
      ],
      [
        'body/classes/CreateRoleDto-1.html',
        [
          3, 0.092, 4, 0.083, 5, 0.074, 8, 0.257, 9, 1.155, 12, 2.279, 14, 1.13,
          20, 0.389, 21, 0.007, 23, 1.222, 30, 0.511, 35, 0.954, 62, 0.213, 72,
          0.111, 73, 0.294, 79, 0.005, 80, 0.005, 101, 1.165, 189, 1.416, 665,
          1.365, 678, 2.7, 680, 2.559, 683, 3.104, 684, 1.707, 696, 2.714, 708,
          4.592, 720, 3.332, 817, 4.592, 819, 4.162, 820, 5.521, 821, 4.415,
          822, 4.415, 823, 5.156, 824, 4.793, 825, 4.415, 826, 4.454, 827,
          7.582,
        ],
      ],
      ['title/classes/CreateTaskDto.html', [73, 0.19, 828, 3.637]],
      [
        'body/classes/CreateTaskDto.html',
        [
          3, 0.079, 4, 0.071, 5, 0.064, 8, 0.221, 9, 1.045, 12, 2.123, 20,
          0.402, 21, 0.007, 23, 1.264, 30, 0.529, 32, 1.411, 35, 0.915, 62,
          0.192, 72, 0.095, 73, 0.266, 79, 0.005, 80, 0.005, 189, 1.215, 397,
          2.494, 431, 1.57, 665, 1.171, 678, 2.751, 680, 2.589, 683, 3.634, 684,
          1.465, 688, 3.283, 689, 4.248, 696, 2.558, 700, 3.848, 828, 5.078,
          829, 7.041, 830, 4.424, 831, 4.341, 832, 5.399, 833, 4.892, 834,
          4.505, 835, 5.399, 836, 4.06, 837, 4.424, 838, 5.769, 839, 5.442, 840,
          4.977, 841, 5.93, 842, 4.977, 843, 6.382, 844, 5.442, 845, 4.977, 846,
          5.078, 847, 4.977, 848, 4.977,
        ],
      ],
      ['title/classes/CreateTempLinkDto.html', [73, 0.19, 849, 3.898]],
      [
        'body/classes/CreateTempLinkDto.html',
        [
          3, 0.105, 4, 0.095, 5, 0.084, 8, 0.293, 9, 1.251, 12, 1.671, 20,
          0.317, 21, 0.007, 23, 0.995, 30, 0.416, 35, 0.847, 62, 0.23, 72,
          0.126, 73, 0.318, 79, 0.006, 80, 0.006, 101, 1.091, 189, 1.611, 397,
          1.767, 646, 7.007, 665, 1.553, 678, 2.396, 680, 2.396, 684, 1.942,
          696, 2.541, 700, 3.158, 720, 3.284, 725, 3.806, 829, 6.516, 849,
          6.516, 850, 5.866, 851, 7.1, 852, 6.599,
        ],
      ],
      ['title/classes/CreateUserDto.html', [73, 0.19, 853, 3.106]],
      [
        'body/classes/CreateUserDto.html',
        [
          3, 0.069, 4, 0.062, 5, 0.055, 8, 0.192, 9, 0.949, 12, 2.094, 20,
          0.416, 21, 0.007, 23, 1.247, 30, 0.521, 32, 1.063, 35, 0.877, 37,
          1.697, 49, 2.128, 62, 0.218, 72, 0.082, 73, 0.241, 79, 0.004, 80,
          0.004, 84, 1.462, 101, 1.243, 121, 1.961, 189, 1.055, 237, 3.347, 340,
          3.092, 397, 2.472, 431, 1.783, 537, 3.896, 571, 3.543, 591, 3.442,
          650, 2.748, 665, 1.017, 678, 2.676, 680, 2.547, 684, 1.272, 695,
          3.375, 696, 2.225, 700, 2.899, 719, 2.945, 720, 3.562, 725, 3.494,
          728, 2.945, 743, 2.494, 853, 3.938, 854, 7.548, 855, 2.81, 856, 5.448,
          857, 3.291, 858, 4.611, 859, 3.291, 860, 3.773, 861, 5.15, 862, 3.773,
          863, 4.126, 864, 3.265, 865, 3.291, 866, 3.527, 867, 2.945, 868,
          3.527, 869, 3.938, 870, 3.291, 871, 5.017, 872, 3.291, 873, 3.291,
          874, 3.291, 875, 4.126, 876, 4.346, 877, 4.611, 878, 3.291, 879,
          3.291, 880, 2.81, 881, 3.773, 882, 4.611, 883, 3.291,
        ],
      ],
      [
        'title/classes/CreateUserDto-1.html',
        [73, 0.16, 431, 0.942, 853, 2.604],
      ],
      [
        'body/classes/CreateUserDto-1.html',
        [
          3, 0.069, 4, 0.062, 5, 0.055, 8, 0.192, 9, 0.95, 12, 2.095, 20, 0.416,
          21, 0.007, 23, 1.247, 30, 0.522, 32, 1.064, 35, 0.877, 37, 1.7, 49,
          2.131, 62, 0.219, 72, 0.083, 73, 0.242, 79, 0.004, 80, 0.004, 101,
          1.244, 121, 1.965, 189, 1.057, 237, 3.349, 340, 3.095, 397, 2.473,
          431, 1.784, 537, 3.899, 571, 3.546, 591, 3.445, 650, 2.751, 665,
          1.019, 678, 2.677, 680, 2.549, 684, 1.274, 695, 3.378, 696, 2.227,
          700, 2.902, 719, 2.949, 720, 3.492, 725, 3.498, 728, 2.949, 743,
          2.498, 826, 4.436, 853, 3.942, 855, 2.815, 856, 5.449, 857, 3.296,
          858, 4.616, 859, 3.296, 860, 3.777, 861, 5.153, 862, 3.777, 863,
          4.131, 864, 3.268, 865, 3.296, 867, 2.949, 869, 3.942, 870, 3.296,
          871, 5.022, 872, 3.296, 873, 3.296, 874, 3.296, 875, 4.131, 876,
          4.351, 877, 4.616, 878, 3.296, 879, 3.296, 880, 2.815, 881, 3.777,
          882, 4.616, 883, 3.296, 884, 7.551, 885, 4.33, 886, 4.33,
        ],
      ],
      ['title/classes/CustomRpcExceptionFilter.html', [73, 0.19, 887, 3.898]],
      [
        'body/classes/CustomRpcExceptionFilter.html',
        [
          3, 0.078, 4, 0.071, 5, 0.063, 8, 0.219, 14, 0.687, 20, 0.237, 21,
          0.007, 30, 0.311, 32, 0.865, 35, 0.794, 44, 2.909, 62, 0.216, 72,
          0.094, 73, 0.196, 79, 0.005, 80, 0.005, 88, 1.477, 100, 1.119, 101,
          0.674, 107, 1.099, 113, 1.569, 123, 0.729, 133, 1.371, 141, 1.003,
          353, 2.747, 397, 2.355, 399, 3.792, 442, 5.074, 443, 4.209, 515,
          1.601, 521, 2.658, 610, 3.912, 634, 4.666, 663, 3.634, 665, 1.16, 736,
          5.375, 887, 5.409, 888, 5.894, 889, 3.754, 890, 3.263, 891, 7.491,
          892, 5.047, 893, 6.097, 894, 4.384, 895, 6.552, 896, 7.491, 897,
          6.631, 898, 8.796, 899, 7.652, 900, 5.894, 901, 5.409, 902, 4.932,
          903, 5.047, 904, 8.359, 905, 4.932, 906, 4.023, 907, 4.932, 908,
          4.932, 909, 4.932, 910, 4.023, 911, 4.023,
        ],
      ],
      ['title/modules/DatabaseModule.html', [205, 1.551, 466, 3.428]],
      [
        'body/modules/DatabaseModule.html',
        [
          2, 3.494, 3, 0.083, 4, 0.075, 5, 0.067, 14, 0.959, 20, 0.37, 21,
          0.007, 27, 2.105, 28, 2.702, 30, 0.434, 62, 0.245, 72, 0.099, 73,
          0.274, 79, 0.005, 80, 0.005, 88, 1.161, 100, 1.561, 101, 0.94, 107,
          1.533, 123, 0.771, 125, 2.566, 141, 1.399, 205, 2.658, 207, 2.306,
          213, 3.593, 410, 5.862, 412, 4.022, 466, 5.877, 471, 3.741, 472, 2.81,
          478, 3.968, 479, 3.968, 480, 3.968, 481, 3.968, 482, 3.968, 483,
          3.968, 495, 3.968, 513, 2.81, 571, 2.642, 586, 5.101, 591, 2.566, 593,
          4.119, 610, 2.723, 612, 3.121, 735, 2.968, 912, 5.214, 913, 8.191,
          914, 5.214, 915, 6.881, 916, 8.919, 917, 5.214, 918, 8.515, 919,
          6.881, 920, 5.214, 921, 7.703, 922, 5.214, 923, 5.214, 924, 3.551,
          925, 3.741, 926, 5.214, 927, 4.635, 928, 5.214, 929, 5.214, 930,
          5.214, 931, 5.214, 932, 5.214, 933, 5.214, 934, 5.214, 935, 5.214,
          936, 5.214, 937, 5.214, 938, 5.214, 939, 5.214, 940, 4.635, 941,
          5.214,
        ],
      ],
      ['title/injectables/DatabaseService.html', [81, 0.903, 942, 3.898]],
      [
        'body/injectables/DatabaseService.html',
        [
          3, 0.116, 4, 0.105, 5, 0.094, 21, 0.007, 62, 0.211, 72, 0.14, 73,
          0.292, 79, 0.006, 80, 0.006, 81, 1.605, 83, 2.634, 123, 1.083, 942,
          6.931, 943, 6.51,
        ],
      ],
      ['title/entities/Dataset.html', [0, 1.551, 944, 3.106]],
      [
        'body/entities/Dataset.html',
        [
          0, 1.595, 2, 2.229, 3, 0.078, 4, 0.07, 5, 0.112, 8, 0.294, 9, 1.036,
          11, 4.456, 12, 1.894, 13, 1.805, 14, 1.198, 18, 4.614, 20, 0.443, 21,
          0.007, 23, 1.296, 24, 3.995, 26, 4.311, 27, 2.287, 28, 2.597, 30,
          0.542, 32, 1.403, 33, 4.982, 35, 0.912, 36, 4.053, 37, 3.14, 38,
          3.351, 44, 2.235, 45, 3.194, 48, 3.96, 49, 3.256, 50, 5.88, 55, 4.368,
          62, 0.216, 63, 4.115, 64, 5.396, 65, 4.3, 67, 1.731, 72, 0.094, 73,
          0.196, 76, 5.88, 79, 0.005, 80, 0.005, 101, 0.904, 131, 2.235, 250,
          4.12, 266, 4.166, 583, 2.566, 664, 3.816, 944, 4.3, 945, 4.368, 946,
          5.365, 947, 5.396, 948, 4.914, 949, 4.914, 950, 4.914, 951, 6.615,
          952, 6.615, 953, 4.914, 954, 4.914, 955, 4.914, 956, 3.194, 957,
          4.914, 958, 4.914, 959, 4.914, 960, 4.914, 961, 3.74, 962, 2.942,
        ],
      ],
      ['title/controllers/DatasetController.html', [157, 1.328, 963, 3.255]],
      [
        'body/controllers/DatasetController.html',
        [
          3, 0.05, 4, 0.045, 5, 0.04, 8, 0.139, 14, 1.131, 20, 0.336, 21, 0.007,
          23, 1.056, 28, 1.233, 30, 0.442, 32, 1.546, 35, 0.934, 44, 1.061, 62,
          0.254, 72, 0.06, 73, 0.125, 79, 0.004, 80, 0.004, 84, 1.271, 88,
          1.068, 89, 2.496, 95, 1.083, 100, 1.589, 101, 0.957, 104, 3.502, 107,
          1.56, 113, 2.229, 123, 0.464, 131, 1.061, 133, 1.808, 134, 2.416, 139,
          1.887, 141, 1.424, 157, 0.873, 159, 1.04, 162, 1.75, 171, 1.812, 184,
          3.353, 185, 1.812, 186, 3.296, 188, 2.765, 189, 0.767, 195, 1.019,
          279, 2.443, 320, 3.03, 321, 3.648, 323, 3.03, 340, 1.389, 341, 2.139,
          342, 1.591, 343, 2.042, 344, 2.042, 345, 2.391, 346, 1.591, 347,
          1.812, 348, 2.87, 349, 2.139, 350, 1.591, 351, 1.75, 352, 2.042, 353,
          1.75, 354, 5.029, 355, 2.139, 356, 2.254, 357, 2.391, 358, 1.88, 364,
          2.139, 365, 2.562, 366, 1.88, 367, 2.391, 368, 2.042, 370, 2.042, 373,
          3.62, 374, 2.254, 375, 2.254, 379, 4.171, 380, 4.171, 384, 2.139, 431,
          1.128, 504, 4.024, 508, 6.265, 513, 1.693, 514, 2.765, 515, 1.019,
          517, 1.503, 518, 1.591, 519, 3.116, 520, 4.771, 521, 1.693, 532,
          3.448, 721, 4.431, 735, 1.355, 740, 2.765, 944, 2.042, 961, 6.497,
          963, 3.265, 964, 2.792, 965, 3.91, 966, 4.742, 967, 4.742, 968, 4.742,
          969, 4.742, 970, 3.141, 971, 3.141, 972, 3.141, 973, 3.141, 974,
          4.667, 975, 4.667, 976, 4.667, 977, 4.667, 978, 3.141, 979, 4.553,
          980, 2.792, 981, 3.141, 982, 3.141, 983, 2.792, 984, 4.794, 985,
          3.141, 986, 2.792, 987, 4.431, 988, 4.794, 989, 3.141, 990, 2.792,
          991, 3.91, 992, 2.792, 993, 5.332, 994, 3.141, 995, 3.141, 996, 1.88,
          997, 3.141, 998, 2.254, 999, 2.254, 1000, 2.792, 1001, 3.141, 1002,
          3.141, 1003, 3.141, 1004, 3.141, 1005, 4.228, 1006, 7.005, 1007,
          2.792, 1008, 5.306, 1009, 6.505, 1010, 2.792, 1011, 3.141, 1012,
          2.792, 1013, 2.792, 1014, 2.792, 1015, 3.141, 1016, 2.792, 1017,
          3.141,
        ],
      ],
      [
        'title/controllers/DatasetController-1.html',
        [157, 1.113, 431, 0.942, 963, 2.728],
      ],
      [
        'body/controllers/DatasetController-1.html',
        [
          3, 0.066, 4, 0.06, 5, 0.053, 8, 0.185, 14, 1.172, 20, 0.438, 21,
          0.007, 23, 1.187, 30, 0.497, 32, 1.435, 62, 0.227, 72, 0.08, 73,
          0.166, 79, 0.004, 80, 0.004, 88, 1.317, 89, 2.618, 100, 1.787, 101,
          1.076, 104, 2.615, 107, 1.755, 113, 2.506, 123, 0.618, 133, 1.161,
          141, 1.602, 157, 1.644, 159, 1.383, 194, 1.802, 195, 1.356, 279,
          2.958, 320, 2.754, 323, 1.946, 431, 0.983, 515, 1.356, 532, 3.877,
          554, 4.715, 558, 4.228, 560, 5.148, 567, 4.896, 572, 4.243, 721,
          4.028, 740, 2.41, 961, 5.224, 963, 4.028, 965, 5.6, 966, 4.824, 967,
          5.6, 968, 4.824, 969, 5.6, 974, 4.243, 975, 4.243, 976, 4.243, 977,
          4.243, 987, 4.028, 990, 3.714, 991, 4.824, 992, 3.714, 1007, 5.257,
          1012, 5.257, 1013, 5.257, 1014, 5.257, 1016, 5.257, 1018, 5.571, 1019,
          3.714, 1020, 4.178, 1021, 4.178, 1022, 4.178, 1023, 4.178, 1024,
          4.178, 1025, 4.178, 1026, 4.178, 1027, 4.178, 1028, 4.178, 1029,
          4.178, 1030, 4.243, 1031, 4.178, 1032, 4.178, 1033, 4.178, 1034,
          4.178, 1035, 4.178, 1036, 4.178, 1037, 4.178, 1038, 4.178, 1039,
          4.178, 1040, 4.243, 1041, 4.178,
        ],
      ],
      ['title/modules/DatasetModule.html', [205, 1.551, 1042, 3.637]],
      [
        'body/modules/DatasetModule.html',
        [
          3, 0.105, 4, 0.095, 5, 0.084, 14, 0.92, 21, 0.007, 62, 0.257, 72,
          0.126, 73, 0.263, 79, 0.006, 80, 0.006, 84, 1.136, 123, 0.975, 159,
          2.645, 205, 2.592, 207, 2.918, 412, 3.446, 515, 2.142, 517, 3.158,
          601, 4.494, 602, 5.44, 607, 4.494, 608, 4.494, 609, 4.494, 610, 3.446,
          611, 4.494, 612, 3.95, 963, 5.851, 996, 4.781, 1042, 6.079, 1043,
          6.599, 1044, 6.079, 1045, 6.599,
        ],
      ],
      ['title/injectables/DatasetService.html', [81, 0.903, 1030, 3.428]],
      [
        'body/injectables/DatasetService.html',
        [
          3, 0.048, 4, 0.043, 5, 0.072, 8, 0.134, 11, 1.682, 13, 1.877, 14,
          1.118, 18, 1.742, 20, 0.375, 21, 0.007, 27, 2.105, 30, 0.458, 32,
          1.633, 35, 0.73, 44, 1.572, 49, 2.289, 62, 0.225, 67, 1.063, 72,
          0.058, 73, 0.12, 79, 0.003, 80, 0.003, 81, 0.879, 83, 1.086, 88,
          1.036, 89, 2.478, 95, 1.604, 97, 4.219, 100, 1.649, 101, 0.993, 104,
          3.458, 107, 1.533, 113, 2.189, 121, 1.37, 123, 0.446, 124, 1.742, 125,
          1.486, 131, 1.572, 133, 2.317, 134, 2.697, 136, 3.687, 138, 2.084,
          139, 1.841, 141, 1.59, 279, 3.312, 320, 2.968, 323, 2.642, 350, 1.53,
          351, 1.682, 376, 1.963, 377, 2.057, 446, 4.687, 515, 0.98, 542, 3.918,
          558, 2.289, 634, 3.969, 650, 2.891, 721, 4.34, 722, 2.463, 724, 3.834,
          944, 5.499, 946, 5.434, 961, 5.764, 965, 3.794, 966, 4.627, 967,
          3.794, 968, 3.794, 969, 4.627, 974, 4.07, 975, 2.166, 976, 4.07, 977,
          2.166, 979, 1.963, 980, 4.134, 983, 4.134, 986, 2.684, 987, 4.34, 991,
          3.794, 1018, 5.159, 1030, 3.337, 1046, 2.684, 1047, 3.02, 1048, 4.627,
          1049, 3.02, 1050, 4.651, 1051, 4.651, 1052, 3.02, 1053, 3.02, 1054,
          4.317, 1055, 3.02, 1056, 3.02, 1057, 3.02, 1058, 3.02, 1059, 2.463,
          1060, 3.02, 1061, 3.02, 1062, 2.463, 1063, 3.02, 1064, 3.02, 1065,
          3.02, 1066, 3.02, 1067, 3.02, 1068, 3.02, 1069, 4.651, 1070, 2.684,
          1071, 3.02, 1072, 2.684, 1073, 3.02, 1074, 3.02, 1075, 4.651, 1076,
          3.02, 1077, 5.673, 1078, 3.02, 1079, 4.134, 1080, 3.02, 1081, 3.02,
          1082, 3.02, 1083, 5.673, 1084, 3.02, 1085, 4.651, 1086, 4.134, 1087,
          4.134, 1088, 4.134, 1089, 4.651, 1090, 5.673, 1091, 3.02, 1092, 3.02,
          1093, 2.684, 1094, 4.651, 1095, 3.02, 1096, 4.651, 1097, 3.02, 1098,
          3.02, 1099, 3.02, 1100, 3.02,
        ],
      ],
      ['title/controllers/DiagnosisController.html', [157, 1.328, 1101, 3.255]],
      [
        'body/controllers/DiagnosisController.html',
        [
          3, 0.053, 4, 0.048, 5, 0.1, 8, 0.147, 13, 2.135, 14, 1, 20, 0.344, 21,
          0.007, 23, 1.137, 27, 1.014, 30, 0.475, 32, 1.516, 62, 0.252, 72,
          0.063, 73, 0.132, 79, 0.004, 80, 0.004, 84, 1.347, 88, 1.113, 89,
          2.573, 95, 1.144, 100, 1.627, 101, 0.98, 107, 1.679, 113, 2.399, 123,
          0.49, 131, 1.688, 133, 1.389, 134, 2.601, 138, 1.219, 139, 2.171, 141,
          1.533, 157, 0.922, 159, 1.098, 162, 1.847, 171, 1.913, 186, 3.045,
          188, 2.881, 189, 0.809, 195, 1.621, 320, 3.115, 323, 3.115, 346, 1.68,
          347, 1.913, 353, 1.847, 354, 4.887, 356, 2.379, 358, 1.985, 366,
          1.985, 374, 2.379, 375, 2.379, 379, 3.584, 380, 3.584, 399, 2.266,
          459, 2.705, 504, 4.07, 508, 6.331, 518, 2.531, 660, 1.68, 663, 1.505,
          714, 2.379, 832, 2.379, 979, 3.247, 1008, 4.075, 1101, 3.402, 1102,
          2.948, 1103, 3.802, 1104, 4.574, 1105, 5.09, 1106, 4.574, 1107, 4.574,
          1108, 4.574, 1109, 3.316, 1110, 4.995, 1111, 3.316, 1112, 3.316, 1113,
          4.995, 1114, 3.316, 1115, 4.995, 1116, 3.316, 1117, 2.705, 1118,
          4.995, 1119, 3.316, 1120, 3.316, 1121, 4.995, 1122, 3.316, 1123,
          3.316, 1124, 3.906, 1125, 3.316, 1126, 3.316, 1127, 4.44, 1128, 4.44,
          1129, 2.259, 1130, 2.705, 1131, 2.948, 1132, 2.705, 1133, 2.524, 1134,
          2.948, 1135, 1.985, 1136, 4.44, 1137, 2.705, 1138, 2.524, 1139, 3.802,
          1140, 2.379, 1141, 2.379, 1142, 4.44, 1143, 2.948, 1144, 2.379, 1145,
          2.948, 1146, 3.138, 1147, 2.948, 1148, 2.259, 1149, 3.597, 1150,
          2.705, 1151, 3.316, 1152, 3.316, 1153, 3.316, 1154, 3.316, 1155,
          3.316, 1156, 4.995, 1157, 7.54, 1158, 3.316, 1159, 2.705, 1160, 2.524,
          1161, 2.948, 1162, 3.316, 1163, 3.316, 1164, 3.316, 1165, 3.316, 1166,
          3.316, 1167, 3.316, 1168, 3.316, 1169, 3.316, 1170, 3.316, 1171,
          3.316, 1172, 2.705, 1173, 4.995, 1174, 4.995, 1175, 2.705, 1176,
          3.316, 1177, 3.316, 1178, 3.316, 1179, 2.948, 1180, 2.948, 1181,
          2.948, 1182, 3.316, 1183, 3.316, 1184, 3.316, 1185, 2.948, 1186,
          3.316, 1187, 3.316, 1188, 3.316, 1189, 3.316, 1190, 2.948, 1191,
          2.948,
        ],
      ],
      [
        'title/controllers/DiagnosisController-1.html',
        [157, 1.113, 431, 0.942, 1101, 2.728],
      ],
      [
        'body/controllers/DiagnosisController-1.html',
        [
          3, 0.065, 4, 0.059, 5, 0.075, 8, 0.182, 13, 1.594, 14, 1.091, 20,
          0.442, 21, 0.007, 23, 1.226, 30, 0.513, 32, 1.501, 62, 0.214, 72,
          0.078, 73, 0.164, 79, 0.004, 80, 0.004, 88, 1.302, 89, 2.651, 95,
          1.417, 100, 1.776, 101, 1.069, 107, 1.812, 113, 2.588, 123, 0.607,
          131, 1.975, 134, 2.806, 138, 1.51, 141, 1.654, 157, 1.625, 159, 1.361,
          195, 1.897, 279, 2.782, 320, 1.914, 323, 1.914, 399, 2.651, 443,
          4.224, 515, 1.334, 532, 4.003, 554, 4.869, 558, 4.344, 560, 3.789,
          567, 5.01, 660, 2.082, 663, 1.864, 1101, 3.981, 1103, 4.448, 1104,
          5.177, 1105, 5.639, 1106, 4.448, 1107, 4.448, 1108, 5.177, 1124,
          2.671, 1146, 3.552, 1149, 4.072, 1150, 3.352, 1190, 3.653, 1191,
          3.653, 1192, 6.004, 1193, 3.653, 1194, 4.109, 1195, 5.844, 1196,
          4.109, 1197, 4.109, 1198, 5.844, 1199, 4.109, 1200, 5.844, 1201,
          4.109, 1202, 4.109, 1203, 4.767, 1204, 4.109, 1205, 4.109, 1206,
          5.844, 1207, 4.109, 1208, 4.109, 1209, 5.844, 1210, 4.109, 1211,
          3.653, 1212, 4.109, 1213, 4.109, 1214, 4.109, 1215, 4.109, 1216,
          4.109, 1217, 4.109, 1218, 5.844, 1219, 4.109, 1220, 4.109, 1221,
          4.109, 1222, 4.109, 1223, 4.109, 1224, 4.109,
        ],
      ],
      ['title/entities/DiagnosisHistory.html', [0, 1.551, 1225, 2.976]],
      [
        'body/entities/DiagnosisHistory.html',
        [
          0, 1.651, 2, 2.308, 3, 0.081, 4, 0.073, 5, 0.108, 8, 0.3, 9, 1.061,
          11, 4.705, 14, 0.709, 18, 4.39, 20, 0.437, 21, 0.007, 23, 1.273, 24,
          3.882, 26, 4.372, 27, 2.481, 28, 2.658, 30, 0.533, 32, 1.423, 33,
          5.052, 35, 0.718, 36, 3.43, 37, 2.658, 44, 2.854, 48, 4.053, 62,
          0.219, 63, 4.042, 67, 1.792, 72, 0.097, 73, 0.203, 79, 0.005, 80,
          0.005, 121, 2.308, 237, 3.642, 283, 3.466, 289, 4.612, 583, 2.657,
          664, 3.906, 906, 5.523, 947, 5.523, 956, 3.307, 962, 4.053, 1225,
          4.217, 1226, 7.721, 1227, 4.15, 1228, 6.764, 1229, 5.088, 1230, 4.401,
          1231, 5.088, 1232, 4.372, 1233, 5.523, 1234, 5.523, 1235, 4.523, 1236,
          5.088, 1237, 5.792, 1238, 5.088, 1239, 5.088, 1240, 4.523, 1241,
          4.523, 1242, 4.523,
        ],
      ],
      [
        'title/entities/DiagnosisHistory-1.html',
        [0, 1.3, 431, 0.942, 1225, 2.495],
      ],
      [
        'body/entities/DiagnosisHistory-1.html',
        [
          0, 1.419, 2, 1.983, 3, 0.069, 4, 0.063, 5, 0.102, 8, 0.271, 9, 0.956,
          10, 4.211, 11, 4.463, 13, 2.077, 14, 0.609, 17, 4.792, 18, 4.058, 20,
          0.444, 21, 0.007, 22, 4.743, 23, 1.31, 24, 3.971, 25, 6.769, 26,
          4.683, 27, 2.658, 28, 3.258, 29, 5.394, 30, 0.548, 32, 1.456, 33,
          4.743, 35, 0.647, 36, 3.093, 37, 2.397, 40, 5.427, 44, 2.707, 48,
          3.655, 58, 4.38, 62, 0.176, 63, 4.076, 66, 2.283, 67, 1.54, 72, 0.083,
          73, 0.174, 79, 0.004, 80, 0.004, 84, 0.753, 237, 3.367, 283, 2.978,
          289, 4.158, 906, 4.98, 947, 4.98, 962, 3.655, 1192, 6.334, 1225,
          3.802, 1227, 3.566, 1228, 6.254, 1230, 3.968, 1232, 4.104, 1233, 4.98,
          1234, 4.98, 1235, 3.886, 1237, 5.354, 1240, 3.886, 1241, 3.886, 1242,
          3.886, 1243, 7.847, 1244, 4.372, 1245, 4.372, 1246, 4.372, 1247,
          4.372, 1248, 4.372, 1249, 4.372, 1250, 4.372, 1251, 4.372, 1252,
          4.372,
        ],
      ],
      ['title/modules/DiagnosisModule.html', [205, 1.551, 1253, 3.637]],
      [
        'body/modules/DiagnosisModule.html',
        [
          1, 4.926, 3, 0.096, 4, 0.087, 5, 0.106, 21, 0.007, 43, 4.926, 62,
          0.262, 72, 0.115, 73, 0.241, 79, 0.006, 80, 0.006, 84, 1.043, 121,
          2.748, 123, 0.896, 125, 2.981, 159, 2.509, 205, 2.684, 207, 2.679,
          208, 3.069, 209, 3.265, 210, 3.265, 211, 3.069, 212, 4.457, 213,
          3.163, 216, 4.084, 217, 3.265, 218, 3.163, 410, 4.61, 412, 3.957, 944,
          4.926, 1101, 5.633, 1149, 5.447, 1150, 4.941, 1225, 3.773, 1253,
          7.105, 1254, 5.385, 1255, 5.385, 1256, 5.385, 1257, 6.529, 1258,
          6.058, 1259, 6.058, 1260, 6.058, 1261, 6.058,
        ],
      ],
      ['title/injectables/DiagnosisService.html', [81, 0.903, 1149, 2.86]],
      [
        'body/injectables/DiagnosisService.html',
        [
          3, 0.045, 4, 0.04, 5, 0.103, 8, 0.125, 9, 0.69, 10, 2.638, 11, 3.42,
          13, 1.675, 14, 0.985, 18, 2.542, 20, 0.354, 21, 0.007, 28, 1.73, 30,
          0.482, 32, 1.602, 35, 0.299, 44, 0.952, 62, 0.232, 67, 0.992, 72,
          0.054, 73, 0.112, 75, 2.298, 77, 2.298, 79, 0.003, 80, 0.003, 81,
          0.833, 83, 1.013, 84, 1.353, 88, 0.982, 89, 2.505, 95, 1.52, 97, 3.42,
          100, 1.603, 101, 0.965, 107, 1.574, 113, 2.248, 121, 1.278, 122,
          4.405, 123, 0.416, 124, 1.625, 125, 1.387, 131, 2.388, 133, 2.42, 134,
          3.089, 136, 3.529, 138, 2.596, 139, 2.549, 141, 1.437, 195, 1.762,
          237, 2.109, 279, 3.239, 320, 3.291, 323, 2.86, 350, 2.75, 351, 1.569,
          373, 3.824, 376, 2.865, 377, 3.002, 399, 2.785, 430, 2.298, 431,
          1.568, 433, 2.144, 443, 2.109, 445, 2.745, 660, 2.233, 663, 1.999,
          714, 4.781, 735, 1.901, 740, 2.542, 831, 2.542, 833, 1.831, 834,
          1.686, 1005, 1.831, 1103, 3.354, 1104, 4.132, 1105, 4.673, 1106,
          3.354, 1107, 3.354, 1108, 3.354, 1117, 3.595, 1124, 3.529, 1135,
          2.638, 1146, 3.856, 1147, 2.504, 1148, 1.919, 1149, 2.638, 1160,
          2.144, 1175, 2.298, 1203, 3.595, 1225, 3.824, 1232, 2.926, 1262,
          2.504, 1263, 4.428, 1264, 2.504, 1265, 5.62, 1266, 2.817, 1267, 3.918,
          1268, 3.918, 1269, 2.817, 1270, 2.504, 1271, 2.817, 1272, 2.817, 1273,
          2.817, 1274, 3.918, 1275, 2.817, 1276, 3.918, 1277, 2.817, 1278,
          2.817, 1279, 3.918, 1280, 3.918, 1281, 2.504, 1282, 3.595, 1283,
          3.162, 1284, 2.504, 1285, 2.865, 1286, 1.919, 1287, 1.919, 1288,
          2.021, 1289, 2.021, 1290, 1.919, 1291, 2.298, 1292, 2.021, 1293,
          2.021, 1294, 2.021, 1295, 2.021, 1296, 2.021, 1297, 2.298, 1298,
          3.354, 1299, 3.354, 1300, 3.354, 1301, 3.354, 1302, 2.504, 1303,
          2.504, 1304, 2.504, 1305, 2.504, 1306, 1.686, 1307, 2.144, 1308,
          2.504, 1309, 2.298, 1310, 2.298, 1311, 2.504, 1312, 2.504, 1313,
          3.354, 1314, 3.354, 1315, 3.162, 1316, 3.354, 1317, 2.504, 1318,
          2.298, 1319, 2.144, 1320, 2.298, 1321, 2.504, 1322, 2.504, 1323,
          3.918, 1324, 2.504, 1325, 2.298, 1326, 2.504, 1327, 2.504, 1328,
          3.918, 1329, 2.504, 1330, 4.825, 1331, 2.504, 1332, 2.504, 1333,
          2.504, 1334, 2.504, 1335, 2.504, 1336, 2.298, 1337, 2.504, 1338,
          2.504, 1339, 2.504, 1340, 3.918, 1341, 2.504, 1342, 2.504, 1343,
          3.595, 1344, 3.595, 1345, 2.504,
        ],
      ],
      [
        'title/injectables/DiagnosisService-1.html',
        [81, 0.757, 431, 0.942, 1149, 2.398],
      ],
      [
        'body/injectables/DiagnosisService-1.html',
        [
          3, 0.045, 4, 0.04, 5, 0.103, 8, 0.125, 9, 0.69, 10, 2.636, 11, 3.418,
          13, 1.674, 14, 0.984, 18, 2.54, 20, 0.354, 21, 0.007, 28, 1.729, 30,
          0.482, 32, 1.602, 35, 0.298, 44, 0.951, 62, 0.232, 67, 0.991, 72,
          0.054, 73, 0.112, 75, 2.296, 77, 2.296, 79, 0.003, 80, 0.003, 81,
          0.832, 83, 1.012, 84, 0.485, 88, 0.981, 89, 2.505, 95, 1.519, 97,
          3.418, 100, 1.602, 101, 0.965, 107, 1.573, 113, 2.247, 122, 4.403,
          123, 0.416, 124, 1.623, 125, 1.385, 131, 2.387, 133, 2.42, 134, 3.089,
          136, 3.526, 138, 2.595, 139, 2.549, 141, 1.436, 195, 1.761, 237,
          2.107, 279, 3.239, 320, 3.289, 323, 2.858, 350, 2.748, 351, 1.568,
          373, 3.822, 376, 2.862, 377, 3, 399, 2.784, 430, 2.296, 431, 1.567,
          433, 2.142, 443, 2.107, 445, 2.743, 660, 2.231, 663, 1.998, 714,
          4.779, 735, 1.9, 740, 2.54, 831, 2.54, 833, 1.829, 834, 1.685, 1005,
          1.829, 1103, 3.352, 1104, 4.129, 1105, 4.67, 1106, 3.352, 1107, 3.352,
          1108, 3.352, 1117, 3.592, 1124, 3.526, 1135, 2.636, 1146, 3.854, 1148,
          1.917, 1149, 2.636, 1160, 2.142, 1175, 2.296, 1192, 5.634, 1203,
          3.592, 1225, 3.822, 1232, 2.924, 1263, 4.425, 1264, 2.502, 1265,
          5.618, 1267, 3.915, 1268, 3.915, 1270, 2.502, 1274, 3.915, 1276,
          3.915, 1279, 3.915, 1280, 3.915, 1281, 2.502, 1282, 3.592, 1283,
          3.159, 1284, 2.502, 1285, 2.862, 1286, 1.917, 1287, 1.917, 1288,
          2.019, 1289, 2.019, 1290, 1.917, 1291, 2.296, 1292, 2.019, 1293,
          2.019, 1294, 2.019, 1295, 2.019, 1296, 2.019, 1297, 2.296, 1298,
          3.352, 1299, 3.352, 1300, 3.352, 1301, 3.352, 1302, 2.502, 1303,
          2.502, 1304, 2.502, 1305, 2.502, 1306, 1.685, 1307, 2.142, 1308,
          2.502, 1309, 2.296, 1310, 2.296, 1311, 2.502, 1312, 2.502, 1313,
          3.352, 1314, 3.352, 1315, 3.159, 1316, 3.352, 1317, 2.502, 1318,
          2.296, 1319, 2.142, 1320, 2.296, 1321, 2.502, 1322, 2.502, 1323,
          3.915, 1324, 2.502, 1325, 2.296, 1326, 2.502, 1327, 2.502, 1328,
          3.915, 1329, 2.502, 1330, 4.822, 1331, 2.502, 1332, 2.502, 1333,
          2.502, 1334, 2.502, 1335, 2.502, 1336, 2.296, 1337, 2.502, 1338,
          2.502, 1339, 2.502, 1340, 3.915, 1341, 2.502, 1342, 2.502, 1343,
          3.592, 1344, 3.592, 1345, 2.502, 1346, 2.502, 1347, 2.814, 1348,
          2.814, 1349, 2.814, 1350, 2.814, 1351, 2.814, 1352, 2.814, 1353,
          2.814, 1354, 2.814, 1355, 2.814, 1356, 2.296,
        ],
      ],
      ['title/controllers/DownloadController.html', [157, 1.328, 1357, 3.898]],
      [
        'body/controllers/DownloadController.html',
        [
          3, 0.09, 4, 0.082, 5, 0.093, 8, 0.253, 14, 1.015, 20, 0.43, 21, 0.007,
          23, 1.098, 30, 0.459, 62, 0.244, 72, 0.108, 73, 0.227, 79, 0.005, 80,
          0.005, 88, 1.623, 89, 2.537, 100, 1.653, 101, 0.995, 107, 1.623, 113,
          2.318, 121, 2.582, 123, 0.841, 141, 1.481, 157, 2.025, 159, 1.885,
          194, 2.455, 195, 1.847, 456, 4.643, 515, 1.847, 532, 3.585, 554,
          4.361, 558, 4.169, 560, 4.877, 567, 4.81, 1232, 4.33, 1357, 5.943,
          1358, 6.115, 1359, 4.643, 1360, 6.476, 1361, 7.285, 1362, 5.692, 1363,
          7.285, 1364, 5.692, 1365, 5.692, 1366, 7.285, 1367, 5.692, 1368,
          5.764, 1369, 5.692, 1370, 3.7, 1371, 5.692, 1372, 5.692, 1373, 4.332,
          1374, 5.692,
        ],
      ],
      ['title/classes/DownloadFilesDto.html', [73, 0.19, 1375, 3.898]],
      [
        'body/classes/DownloadFilesDto.html',
        [
          3, 0.094, 4, 0.085, 5, 0.076, 8, 0.264, 9, 1.172, 12, 1.504, 13,
          2.042, 20, 0.285, 21, 0.007, 23, 0.895, 27, 2.289, 30, 0.374, 32,
          1.313, 35, 0.63, 49, 2.923, 62, 0.236, 72, 0.113, 73, 0.327, 79,
          0.005, 80, 0.005, 189, 1.45, 397, 2.304, 431, 1.397, 665, 1.397, 678,
          2.245, 680, 2.245, 681, 3.201, 682, 4.865, 683, 3.151, 684, 1.748,
          689, 3.009, 695, 4.169, 702, 5.279, 724, 5.227, 729, 4.727, 735,
          2.562, 742, 4.261, 743, 3.426, 744, 3.699, 869, 4.865, 880, 3.86,
          1375, 6.105, 1376, 6.653, 1377, 4.52, 1378, 6.105, 1379, 5.279, 1380,
          5.939, 1381, 5.939, 1382, 4.845, 1383, 4.845,
        ],
      ],
      ['title/injectables/DownloadService.html', [81, 0.903, 1368, 3.428]],
      [
        'body/injectables/DownloadService.html',
        [
          3, 0.069, 4, 0.062, 5, 0.077, 8, 0.192, 9, 0.949, 14, 0.975, 20,
          0.397, 21, 0.007, 27, 1.853, 28, 1.697, 30, 0.441, 62, 0.23, 72,
          0.082, 73, 0.172, 79, 0.004, 80, 0.004, 81, 1.145, 83, 1.555, 88,
          1.349, 89, 2.343, 100, 1.374, 101, 0.828, 107, 1.349, 113, 1.927, 121,
          1.961, 123, 0.639, 131, 2.363, 133, 2.299, 134, 2.09, 139, 2.27, 141,
          1.681, 195, 2.27, 397, 2.029, 443, 3.626, 446, 5.633, 558, 3.729, 650,
          1.961, 660, 3.069, 663, 2.748, 735, 1.865, 1133, 3.291, 1135, 2.588,
          1232, 3.769, 1285, 4.926, 1286, 2.945, 1287, 4.126, 1325, 4.942, 1358,
          5.768, 1360, 5.385, 1368, 4.346, 1370, 3.938, 1373, 3.291, 1384,
          3.291, 1385, 6.736, 1386, 6.058, 1387, 6.058, 1388, 4.323, 1389,
          6.058, 1390, 4.323, 1391, 6.058, 1392, 4.323, 1393, 5.385, 1394,
          3.527, 1395, 3.527, 1396, 2.81, 1397, 4.323, 1398, 5.385, 1399, 5.162,
          1400, 3.527, 1401, 4.346, 1402, 6.058, 1403, 7.578, 1404, 4.323, 1405,
          4.323, 1406, 6.058, 1407, 5.385, 1408, 6.058, 1409, 6.058, 1410,
          4.323, 1411, 4.942, 1412, 4.323, 1413, 4.323, 1414, 4.323, 1415,
          4.323, 1416, 6.058, 1417, 4.323, 1418, 4.323, 1419, 4.323, 1420,
          3.527, 1421, 4.323, 1422, 4.323, 1423, 4.323, 1424, 4.323, 1425,
          4.323, 1426, 4.323, 1427, 4.323,
        ],
      ],
      ['title/entities/File.html', [0, 1.551, 5, 0.061]],
      [
        'body/entities/File.html',
        [
          0, 1.408, 2, 1.968, 3, 0.069, 4, 0.062, 5, 0.089, 8, 0.269, 9, 0.951,
          11, 4.227, 18, 4.377, 19, 5.332, 20, 0.456, 21, 0.007, 23, 1.36, 24,
          4.272, 26, 3.272, 27, 1.857, 28, 2.979, 30, 0.569, 32, 1.521, 33,
          5.156, 35, 0.966, 36, 4.394, 37, 3.505, 38, 3.845, 44, 2.052, 45,
          2.819, 62, 0.202, 63, 4.318, 65, 3.946, 66, 2.265, 67, 1.528, 72,
          0.083, 73, 0.173, 79, 0.004, 80, 0.004, 131, 2.052, 250, 3.781, 255,
          4.621, 266, 3.902, 431, 1.429, 583, 2.265, 659, 5.397, 664, 3.502,
          831, 4.041, 833, 4.553, 834, 4.193, 944, 5.381, 956, 2.819, 1086,
          5.397, 1233, 4.953, 1285, 4.553, 1306, 4.193, 1307, 5.332, 1428,
          3.855, 1429, 7.005, 1430, 4.337, 1431, 4.337, 1432, 5.397, 1433,
          4.337, 1434, 6.071, 1435, 5.397, 1436, 4.337, 1437, 4.337, 1438,
          6.071, 1439, 4.337, 1440, 4.337, 1441, 4.337, 1442, 4.337, 1443,
          4.337, 1444, 4.337, 1445, 4.337, 1446, 4.337, 1447, 4.337, 1448,
          4.337,
        ],
      ],
      [
        'title/controllers/FileController-1.html',
        [157, 1.113, 431, 0.942, 1449, 3.048],
      ],
      [
        'body/controllers/FileController-1.html',
        [
          3, 0.052, 4, 0.047, 5, 0.042, 8, 0.144, 14, 1.164, 20, 0.453, 21,
          0.007, 23, 1.259, 30, 0.527, 32, 1.542, 35, 0.794, 62, 0.191, 72,
          0.062, 73, 0.13, 79, 0.004, 80, 0.004, 88, 1.097, 89, 2.678, 100,
          1.895, 101, 1.141, 104, 2.177, 107, 1.861, 113, 2.658, 123, 0.481,
          141, 1.698, 157, 1.369, 159, 1.077, 194, 1.403, 279, 2.919, 320,
          1.515, 323, 1.515, 515, 1.056, 532, 4.111, 554, 5.001, 558, 4.504,
          560, 5.162, 567, 5.081, 572, 3.532, 724, 2.743, 834, 1.947, 962,
          3.555, 974, 2.334, 975, 2.334, 976, 2.334, 977, 2.334, 1018, 5.782,
          1040, 4.261, 1054, 2.476, 1306, 1.947, 1449, 3.747, 1450, 2.892, 1451,
          3.747, 1452, 4.376, 1453, 4.376, 1454, 4.376, 1455, 4.376, 1456,
          4.376, 1457, 5.28, 1458, 4.376, 1459, 4.376, 1460, 5.28, 1461, 3.253,
          1462, 4.923, 1463, 3.253, 1464, 3.253, 1465, 4.923, 1466, 3.253, 1467,
          3.253, 1468, 4.923, 1469, 3.253, 1470, 3.253, 1471, 4.923, 1472,
          3.253, 1473, 3.253, 1474, 4.923, 1475, 3.253, 1476, 3.253, 1477,
          4.923, 1478, 3.253, 1479, 3.253, 1480, 4.923, 1481, 3.253, 1482,
          3.253, 1483, 4.923, 1484, 3.253, 1485, 3.253, 1486, 4.923, 1487,
          3.253, 1488, 3.253, 1489, 4.923, 1490, 3.253, 1491, 3.353, 1492,
          3.353, 1493, 2.892, 1494, 2.892, 1495, 4.261, 1496, 3.253, 1497,
          3.253, 1498, 3.253, 1499, 3.253, 1500, 3.253, 1501, 3.253, 1502,
          3.253, 1503, 3.253, 1504, 3.253, 1505, 3.253, 1506, 3.253, 1507,
          3.253, 1508, 3.253, 1509, 3.253, 1510, 2.892, 1511, 2.892, 1512,
          3.253, 1513, 3.253, 1514, 3.253, 1515, 3.253, 1516, 3.253, 1517,
          3.253,
        ],
      ],
      ['title/guards/FileGuard.html', [1518, 3.637, 1519, 3.637]],
      [
        'body/guards/FileGuard.html',
        [
          3, 0.08, 4, 0.072, 5, 0.111, 8, 0.224, 13, 1.378, 14, 0.939, 20,
          0.364, 21, 0.007, 27, 1.545, 30, 0.425, 53, 2.559, 62, 0.25, 72,
          0.128, 73, 0.201, 79, 0.005, 80, 0.005, 81, 1.273, 84, 1.305, 88,
          1.501, 89, 2.148, 95, 2.324, 100, 1.528, 101, 0.92, 107, 1.125, 121,
          2.291, 123, 0.747, 131, 2.277, 133, 2.248, 134, 1.742, 138, 2.786,
          139, 2.461, 141, 1.027, 195, 1.639, 279, 2.53, 419, 3.753, 438, 2.291,
          504, 3.767, 513, 2.722, 514, 4.666, 515, 1.639, 517, 2.417, 518,
          3.413, 519, 4.379, 521, 2.722, 542, 2.722, 592, 3.283, 593, 3.023,
          594, 3.283, 890, 2.485, 962, 4.538, 996, 3.023, 998, 3.623, 999,
          4.834, 1232, 3.631, 1370, 3.283, 1519, 5.128, 1520, 3.844, 1521,
          3.844, 1522, 5.803, 1523, 4.489, 1524, 5.05, 1525, 4.834, 1526, 5.803,
          1527, 5.05, 1528, 4.12, 1529, 4.373, 1530, 5.128, 1531, 3.44, 1532,
          3.623, 1533, 4.489, 1534, 3.844, 1535, 4.489, 1536, 4.834, 1537, 3.44,
          1538, 3.623, 1539, 4.489,
        ],
      ],
      ['title/modules/FileModule.html', [205, 1.551, 1257, 3.428]],
      [
        'body/modules/FileModule.html',
        [
          3, 0.082, 4, 0.074, 5, 0.066, 14, 1.069, 21, 0.007, 62, 0.261, 72,
          0.099, 73, 0.206, 79, 0.005, 80, 0.005, 84, 0.891, 89, 1.466, 123,
          0.765, 141, 1.052, 159, 2.267, 205, 2.49, 207, 2.288, 208, 2.622, 209,
          2.789, 210, 2.789, 211, 2.622, 212, 4.136, 213, 4.007, 216, 3.69, 217,
          2.789, 218, 2.702, 412, 3.575, 471, 4.912, 472, 2.789, 513, 2.789,
          515, 1.679, 517, 2.476, 586, 5.086, 601, 4.664, 602, 5.563, 607,
          3.525, 608, 5.227, 609, 5.227, 610, 4.007, 611, 5.227, 612, 4.593,
          633, 4.221, 646, 4.221, 851, 4.6, 924, 3.525, 925, 3.713, 927, 4.6,
          996, 4.099, 1044, 5.211, 1146, 4.893, 1148, 3.525, 1257, 6.387, 1449,
          5.84, 1540, 4.6, 1541, 4.6, 1542, 4.6, 1543, 5.175, 1544, 5.175, 1545,
          5.585, 1546, 5.585, 1547, 5.585, 1548, 5.585, 1549, 5.175, 1550,
          5.175, 1551, 5.175, 1552, 4.6, 1553, 4.6, 1554, 5.175,
        ],
      ],
      ['title/modules/FileOperationModule.html', [205, 1.551, 1555, 3.637]],
      [
        'body/modules/FileOperationModule.html',
        [
          3, 0.104, 4, 0.094, 5, 0.101, 21, 0.007, 62, 0.229, 72, 0.125, 73,
          0.26, 79, 0.006, 80, 0.006, 123, 0.966, 205, 2.776, 207, 2.89, 208,
          3.311, 209, 3.522, 210, 3.522, 211, 3.311, 212, 4.61, 213, 4.467, 216,
          4.28, 217, 3.522, 218, 3.413, 1146, 5.052, 1148, 4.451, 1555, 7.141,
          1556, 6.535, 1557, 6.535, 1558, 6.535, 1559, 5.331, 1560, 5.331, 1561,
          6.535,
        ],
      ],
      ['title/injectables/FileOperationService.html', [81, 0.903, 1146, 2.495]],
      [
        'body/injectables/FileOperationService.html',
        [
          3, 0.042, 4, 0.038, 5, 0.033, 8, 0.116, 12, 1.886, 14, 1.069, 20,
          0.368, 21, 0.007, 27, 1.272, 30, 0.484, 35, 0.994, 62, 0.197, 72,
          0.05, 73, 0.104, 79, 0.003, 80, 0.003, 81, 0.786, 83, 0.942, 88,
          0.926, 89, 2.522, 100, 1.741, 101, 1.048, 107, 1.819, 122, 3.713, 123,
          0.387, 131, 2.314, 133, 2.071, 134, 2.817, 138, 2.737, 139, 2.605,
          141, 1.308, 186, 4.138, 266, 1.458, 397, 2.055, 399, 3.854, 419,
          4.678, 443, 1.253, 515, 0.85, 634, 4.779, 660, 3.637, 663, 3.257, 838,
          4.614, 903, 1.992, 1135, 1.567, 1146, 2.172, 1172, 2.135, 1283, 2.984,
          1285, 5.217, 1286, 3.525, 1287, 4.664, 1288, 1.878, 1289, 1.878, 1290,
          1.783, 1292, 1.878, 1293, 1.878, 1294, 1.878, 1295, 1.878, 1296,
          1.878, 1394, 2.135, 1396, 2.703, 1399, 3.525, 1400, 2.135, 1420,
          4.221, 1451, 3.166, 1559, 6.415, 1560, 6.415, 1562, 2.135, 1563,
          3.697, 1564, 4.159, 1565, 4.159, 1566, 3.697, 1567, 4.159, 1568,
          4.159, 1569, 4.6, 1570, 4.159, 1571, 3.697, 1572, 2.618, 1573, 4.159,
          1574, 2.618, 1575, 3.697, 1576, 2.618, 1577, 4.159, 1578, 2.618, 1579,
          5.175, 1580, 3.697, 1581, 6.622, 1582, 2.618, 1583, 4.6, 1584, 4.159,
          1585, 2.618, 1586, 5.175, 1587, 4.159, 1588, 6.432, 1589, 2.618, 1590,
          4.159, 1591, 4.6, 1592, 2.618, 1593, 3.393, 1594, 4.159, 1595, 2.618,
          1596, 2.984, 1597, 2.327, 1598, 2.618, 1599, 2.618, 1600, 2.618, 1601,
          2.327, 1602, 2.327, 1603, 2.618, 1604, 5.175, 1605, 5.175, 1606,
          2.327, 1607, 2.327, 1608, 2.327, 1609, 3.697, 1610, 3.393, 1611,
          3.697, 1612, 3.697, 1613, 2.327, 1614, 3.393, 1615, 2.327, 1616,
          2.327, 1617, 2.135, 1618, 2.135, 1619, 2.618, 1620, 2.618, 1621,
          2.618, 1622, 2.618, 1623, 2.618, 1624, 2.618, 1625, 2.618, 1626,
          2.618, 1627, 2.618, 1628, 2.618, 1629, 2.618, 1630, 2.618, 1631,
          2.618, 1632, 2.618, 1633, 2.618, 1634, 2.618, 1635, 2.618, 1636,
          2.618, 1637, 2.618,
        ],
      ],
      [
        'title/injectables/FileOperationService-1.html',
        [81, 0.757, 431, 0.942, 1146, 2.092],
      ],
      [
        'body/injectables/FileOperationService-1.html',
        [
          3, 0.066, 4, 0.059, 5, 0.053, 8, 0.183, 14, 1.035, 20, 0.356, 21,
          0.007, 27, 1.265, 30, 0.468, 35, 0.978, 62, 0.214, 72, 0.079, 73,
          0.165, 79, 0.004, 80, 0.004, 81, 1.109, 83, 1.487, 84, 1.351, 88,
          1.307, 89, 2.469, 100, 1.685, 101, 1.015, 107, 1.908, 113, 1.315, 123,
          0.611, 133, 2.065, 134, 2.354, 138, 2.508, 139, 2.546, 141, 1.595,
          186, 3.975, 399, 3.886, 419, 4.138, 443, 1.978, 660, 3.458, 663,
          3.096, 838, 5.33, 1133, 3.146, 1135, 2.475, 1146, 3.065, 1283, 4.211,
          1285, 5.298, 1286, 3.998, 1287, 5.06, 1288, 2.966, 1289, 2.966, 1290,
          2.816, 1292, 2.966, 1293, 2.966, 1294, 2.966, 1295, 2.966, 1296,
          2.966, 1356, 6.4, 1394, 3.372, 1398, 3.675, 1399, 3.998, 1400, 3.372,
          1420, 4.788, 1451, 4.467, 1562, 3.372, 1563, 5.217, 1566, 5.217, 1569,
          6.066, 1571, 5.217, 1575, 5.217, 1580, 5.217, 1581, 6.604, 1583,
          5.217, 1591, 6.066, 1597, 3.675, 1601, 3.675, 1602, 3.675, 1606,
          3.675, 1607, 3.675, 1608, 3.675, 1609, 3.675, 1610, 3.372, 1611,
          3.675, 1612, 3.675, 1613, 3.675, 1614, 3.372, 1615, 3.675, 1616,
          3.675, 1617, 3.372, 1618, 3.372, 1638, 4.134, 1639, 4.134, 1640,
          4.134, 1641, 4.134, 1642, 7.846,
        ],
      ],
      ['title/injectables/FileService.html', [81, 0.903, 1495, 3.428]],
      [
        'body/injectables/FileService.html',
        [
          3, 0.027, 4, 0.024, 5, 0.091, 8, 0.075, 11, 2.501, 13, 1.696, 14,
          0.968, 20, 0.35, 21, 0.007, 27, 1.902, 30, 0.438, 32, 1.589, 35,
          0.625, 44, 1.992, 62, 0.179, 67, 0.592, 72, 0.032, 73, 0.067, 79,
          0.002, 80, 0.002, 81, 0.545, 83, 0.605, 88, 0.642, 89, 2.467, 95,
          0.995, 97, 2.501, 100, 1.576, 101, 0.949, 104, 2.98, 107, 1.802, 113,
          1.978, 121, 0.763, 123, 0.249, 124, 0.97, 125, 0.828, 131, 1.28, 133,
          2.441, 134, 3.101, 138, 2.683, 139, 2.369, 141, 1.37, 186, 4.055, 195,
          1.229, 266, 1.607, 279, 3.222, 320, 2.745, 323, 2.352, 353, 0.937,
          376, 1.875, 377, 3.44, 397, 1.665, 399, 3.057, 431, 0.891, 442, 3.587,
          446, 4.236, 515, 0.546, 542, 2.97, 558, 1.419, 634, 4.196, 650, 3.237,
          660, 2.559, 663, 2.291, 724, 3.07, 831, 1.664, 834, 2.267, 946, 4.461,
          962, 4.37, 974, 2.717, 975, 2.717, 976, 2.717, 977, 2.717, 1018, 4.86,
          1048, 2.353, 1054, 3.844, 1062, 3.089, 1070, 1.495, 1072, 1.495, 1087,
          2.564, 1088, 3.366, 1146, 3.078, 1148, 1.146, 1211, 1.495, 1232,
          0.906, 1265, 4.486, 1298, 3.416, 1299, 3.416, 1300, 3.416, 1301,
          3.416, 1306, 2.267, 1313, 3.844, 1314, 3.416, 1315, 3.221, 1316,
          3.416, 1318, 2.353, 1319, 2.195, 1320, 2.353, 1344, 1.372, 1370,
          1.875, 1451, 2.195, 1452, 2.564, 1453, 2.564, 1454, 2.564, 1455,
          2.564, 1456, 2.564, 1457, 3.366, 1458, 2.564, 1459, 2.564, 1460,
          2.564, 1491, 3.057, 1492, 3.057, 1493, 1.495, 1494, 1.495, 1495,
          2.069, 1536, 1.207, 1538, 3.221, 1643, 1.495, 1644, 1.495, 1645,
          1.682, 1646, 2.884, 1647, 1.682, 1648, 2.884, 1649, 1.682, 1650,
          2.884, 1651, 1.682, 1652, 2.884, 1653, 1.682, 1654, 2.884, 1655,
          1.682, 1656, 2.884, 1657, 1.682, 1658, 1.682, 1659, 1.682, 1660,
          2.884, 1661, 1.682, 1662, 2.884, 1663, 1.682, 1664, 2.884, 1665,
          1.682, 1666, 1.682, 1667, 1.372, 1668, 1.372, 1669, 1.495, 1670,
          1.682, 1671, 1.682, 1672, 2.884, 1673, 2.884, 1674, 2.884, 1675,
          1.682, 1676, 1.682, 1677, 2.884, 1678, 1.682, 1679, 2.884, 1680,
          1.682, 1681, 1.682, 1682, 1.682, 1683, 1.682, 1684, 1.682, 1685,
          1.682, 1686, 1.682, 1687, 1.495, 1688, 1.495, 1689, 1.495, 1690,
          2.884, 1691, 2.564, 1692, 4.489, 1693, 4.489, 1694, 1.682, 1695,
          2.884, 1696, 2.884, 1697, 1.495, 1698, 2.884, 1699, 2.353, 1700,
          1.682, 1701, 3.787, 1702, 2.884, 1703, 2.884, 1704, 3.787, 1705,
          2.884, 1706, 1.682, 1707, 1.682, 1708, 1.682, 1709, 1.682, 1710,
          1.682, 1711, 2.884, 1712, 1.682, 1713, 1.682, 1714, 1.682, 1715,
          1.682, 1716, 1.682, 1717, 3.787, 1718, 1.682, 1719, 1.682, 1720,
          1.682, 1721, 1.682, 1722, 6.218, 1723, 1.682, 1724, 6.218, 1725,
          1.682, 1726, 1.682, 1727, 1.682, 1728, 2.884, 1729, 1.682, 1730,
          2.884, 1731, 1.682, 1732, 2.884, 1733, 1.682, 1734, 2.884, 1735,
          1.682, 1736, 2.884, 1737, 1.682, 1738, 2.884, 1739, 1.682, 1740,
          3.089, 1741, 2.882, 1742, 3.366, 1743, 3.089, 1744, 3.787, 1745,
          1.682, 1746, 5.894,
        ],
      ],
      [
        'title/injectables/FileSizeValidationPipe.html',
        [81, 0.903, 1141, 3.428],
      ],
      [
        'body/injectables/FileSizeValidationPipe.html',
        [
          3, 0.089, 4, 0.08, 5, 0.107, 8, 0.247, 14, 1.002, 20, 0.345, 21,
          0.007, 30, 0.453, 32, 0.978, 35, 0.844, 62, 0.229, 72, 0.106, 73,
          0.222, 79, 0.005, 80, 0.005, 81, 1.358, 83, 2.006, 84, 1.37, 88,
          1.601, 95, 1.923, 100, 1.631, 101, 0.982, 107, 1.242, 123, 0.824, 138,
          2.924, 139, 2.582, 141, 1.134, 194, 2.405, 195, 1.81, 399, 3.61, 660,
          3.642, 663, 3.261, 729, 4.147, 890, 2.744, 1124, 5.463, 1135, 3.338,
          1141, 5.158, 1309, 4.548, 1310, 4.548, 1529, 4.848, 1668, 4.548, 1747,
          6.491, 1748, 4.956, 1749, 5.576, 1750, 5.576, 1751, 7.957, 1752,
          6.391, 1753, 5.576, 1754, 4.548, 1755, 5.158, 1756, 5.576, 1757,
          7.957, 1758, 5.576, 1759, 7.189, 1760, 5.576, 1761, 4.956,
        ],
      ],
      [
        'title/injectables/FileTypeValidationPipe.html',
        [81, 0.903, 1144, 3.428],
      ],
      [
        'body/injectables/FileTypeValidationPipe.html',
        [
          3, 0.098, 4, 0.088, 5, 0.106, 8, 0.272, 14, 1.065, 20, 0.367, 21,
          0.007, 30, 0.482, 62, 0.22, 72, 0.117, 73, 0.245, 79, 0.006, 80,
          0.006, 81, 1.444, 83, 2.208, 84, 1.433, 88, 1.702, 95, 2.118, 100,
          1.733, 101, 1.044, 107, 1.367, 123, 0.908, 138, 2.256, 139, 1.992,
          141, 1.248, 194, 2.648, 195, 1.992, 729, 4.408, 890, 3.021, 1124,
          5.659, 1129, 5.93, 1130, 5.008, 1144, 5.482, 1161, 5.457, 1529, 4.408,
          1747, 6.787, 1752, 6.792, 1755, 5.482, 1762, 5.457, 1763, 6.139, 1764,
          6.139, 1765, 7.641, 1766, 6.139, 1767, 6.139, 1768, 6.139,
        ],
      ],
      ['title/guards/FilesGuard.html', [1518, 3.637, 1769, 3.637]],
      [
        'body/guards/FilesGuard.html',
        [
          3, 0.077, 4, 0.07, 5, 0.102, 8, 0.216, 14, 0.915, 20, 0.357, 21,
          0.007, 27, 1.487, 30, 0.414, 53, 2.463, 62, 0.247, 72, 0.125, 73,
          0.194, 79, 0.005, 80, 0.005, 81, 1.241, 84, 1.281, 88, 1.463, 89,
          2.107, 95, 2.265, 100, 1.49, 101, 0.897, 107, 1.083, 121, 2.206, 123,
          0.719, 131, 2.219, 133, 2.383, 134, 1.677, 138, 2.733, 139, 2.414,
          141, 0.988, 195, 1.578, 279, 2.466, 419, 3.658, 438, 2.206, 504,
          3.709, 513, 2.62, 514, 4.594, 515, 1.578, 517, 2.327, 518, 3.327, 519,
          4.269, 521, 2.62, 542, 2.62, 592, 3.16, 593, 2.91, 594, 3.16, 650,
          2.979, 724, 4.143, 890, 2.393, 946, 5.336, 996, 2.91, 998, 3.488, 999,
          4.712, 1232, 4.008, 1373, 3.7, 1520, 3.7, 1522, 5.714, 1523, 4.322,
          1525, 4.712, 1526, 5.714, 1528, 3.966, 1529, 4.29, 1530, 4.998, 1531,
          3.311, 1532, 3.488, 1534, 3.7, 1536, 4.712, 1537, 3.311, 1538, 3.488,
          1699, 3.966, 1769, 4.998, 1770, 3.7, 1771, 4.862, 1772, 4.862, 1773,
          4.322, 1774, 4.322, 1775, 4.322, 1776, 4.322, 1777, 5.838, 1778,
          4.322, 1779, 4.322,
        ],
      ],
      ['title/classes/HttpExceptionFilter.html', [73, 0.19, 1780, 3.898]],
      [
        'body/classes/HttpExceptionFilter.html',
        [
          3, 0.093, 4, 0.084, 5, 0.075, 8, 0.26, 14, 0.815, 20, 0.281, 21,
          0.007, 30, 0.369, 44, 2.505, 62, 0.214, 72, 0.111, 73, 0.233, 79,
          0.005, 80, 0.005, 88, 1.651, 100, 1.327, 101, 0.799, 107, 1.303, 123,
          0.865, 133, 2.507, 237, 3.548, 292, 4.772, 397, 2.179, 399, 2.654,
          442, 4.936, 443, 2.8, 518, 2.964, 610, 4.25, 663, 3.692, 665, 1.376,
          889, 4.452, 890, 3.648, 892, 5.642, 893, 6.512, 894, 5.2, 895, 4.452,
          910, 6.98, 1005, 4.819, 1596, 4.197, 1780, 6.047, 1781, 6.59, 1782,
          6.639, 1783, 5.85, 1784, 4.772, 1785, 4.772, 1786, 4.772, 1787, 5.85,
          1788, 5.85, 1789, 5.85, 1790, 5.85, 1791, 5.85, 1792, 5.85, 1793,
          5.85,
        ],
      ],
      ['title/classes/ImageRequest.html', [73, 0.19, 1794, 3.898]],
      [
        'body/classes/ImageRequest.html',
        [
          3, 0.114, 4, 0.102, 5, 0.091, 8, 0.317, 9, 1.313, 20, 0.343, 21,
          0.007, 30, 0.451, 72, 0.136, 73, 0.285, 79, 0.006, 80, 0.006, 665,
          1.683, 1593, 6.835, 1794, 6.835, 1795, 7.448, 1796, 6.357, 1797,
          8.888, 1798, 7.151,
        ],
      ],
      ['title/injectables/JwtStrategy.html', [81, 0.903, 599, 3.428]],
      [
        'body/injectables/JwtStrategy.html',
        [
          3, 0.093, 4, 0.084, 5, 0.075, 8, 0.259, 14, 1.032, 20, 0.355, 21,
          0.007, 30, 0.467, 62, 0.26, 72, 0.111, 73, 0.233, 79, 0.005, 80,
          0.005, 81, 1.399, 83, 2.1, 84, 1.4, 88, 1.649, 89, 2.303, 95, 2.014,
          100, 1.679, 101, 1.011, 107, 1.3, 113, 1.857, 123, 0.863, 141, 1.187,
          279, 2.192, 340, 2.582, 347, 3.367, 472, 3.146, 560, 3.252, 583,
          3.866, 585, 4.443, 586, 5.615, 589, 3.976, 590, 5.824, 591, 2.873,
          596, 4.443, 599, 5.312, 622, 4.762, 924, 3.976, 925, 4.188, 1040,
          4.188, 1399, 3.976, 1553, 5.189, 1799, 5.189, 1800, 7.403, 1801,
          7.403, 1802, 5.838, 1803, 7.403, 1804, 5.838, 1805, 5.838, 1806,
          5.838, 1807, 5.838, 1808, 5.189, 1809, 5.838, 1810, 5.838, 1811,
          5.838, 1812, 5.838, 1813, 5.838, 1814, 5.838, 1815, 5.838,
        ],
      ],
      ['title/controllers/KnowledgeController.html', [157, 1.328, 1816, 3.637]],
      [
        'body/controllers/KnowledgeController.html',
        [
          3, 0.061, 4, 0.055, 5, 0.049, 8, 0.17, 13, 2.166, 14, 1.061, 20,
          0.365, 21, 0.007, 23, 1.197, 28, 1.502, 30, 0.501, 32, 1.6, 35, 0.693,
          44, 1.877, 62, 0.25, 72, 0.073, 73, 0.152, 79, 0.004, 80, 0.004, 84,
          1.411, 88, 1.237, 89, 2.626, 100, 1.727, 101, 1.04, 104, 3.512, 107,
          1.769, 113, 2.422, 123, 0.566, 126, 1.939, 129, 1.939, 133, 1.817,
          134, 2.739, 141, 1.548, 157, 1.064, 159, 1.267, 162, 2.132, 171,
          3.203, 175, 3.783, 178, 2.607, 184, 3.203, 185, 2.208, 186, 1.939,
          188, 3.203, 189, 0.934, 194, 1.651, 195, 1.242, 313, 3.402, 320,
          3.546, 321, 4.227, 323, 3.34, 340, 1.692, 341, 2.607, 342, 1.939, 343,
          2.488, 346, 1.939, 347, 2.208, 348, 3.324, 349, 2.607, 350, 2.814,
          351, 2.132, 352, 2.488, 353, 2.132, 354, 4.452, 355, 2.607, 356,
          2.746, 358, 2.291, 364, 2.607, 365, 3.122, 366, 2.291, 368, 2.488,
          370, 2.488, 373, 4.071, 374, 2.746, 375, 2.746, 376, 3.61, 377, 3.783,
          384, 2.607, 431, 1.307, 445, 2.383, 735, 1.651, 740, 3.203, 745,
          5.145, 751, 5.145, 979, 2.488, 1816, 4.227, 1817, 3.402, 1818, 6.768,
          1819, 5.553, 1820, 5.553, 1821, 5.553, 1822, 6.374, 1823, 5.81, 1824,
          6.536, 1825, 3.827, 1826, 3.827, 1827, 3.827, 1828, 3.827, 1829,
          3.827, 1830, 3.827, 1831, 3.827, 1832, 3.827, 1833, 3.402, 1834,
          3.827, 1835, 3.827, 1836, 5.145, 1837, 4.227, 1838, 3.827, 1839,
          4.936, 1840, 4.452, 1841, 3.402, 1842, 3.827, 1843, 3.827, 1844,
          3.827, 1845, 3.827, 1846, 3.827, 1847, 3.827, 1848, 3.827, 1849,
          3.827, 1850, 3.827, 1851, 3.827, 1852, 3.827, 1853, 3.827,
        ],
      ],
      ['title/modules/KnowledgeModule.html', [205, 1.551, 1854, 3.637]],
      [
        'body/modules/KnowledgeModule.html',
        [
          3, 0.102, 4, 0.092, 5, 0.082, 21, 0.007, 62, 0.261, 72, 0.122, 73,
          0.256, 79, 0.006, 80, 0.006, 84, 1.104, 123, 0.948, 125, 3.156, 159,
          2.599, 205, 2.753, 207, 2.836, 208, 3.249, 209, 3.456, 210, 3.456,
          211, 3.249, 212, 4.572, 213, 3.349, 216, 4.23, 217, 3.456, 218, 3.349,
          410, 4.881, 412, 3.349, 1816, 6.457, 1840, 6.286, 1841, 5.7, 1854,
          7.024, 1855, 5.7, 1856, 5.7, 1857, 6.413, 1858, 6.413, 1859, 4.601,
          1860, 5.7, 1861, 6.413,
        ],
      ],
      ['title/injectables/KnowledgeService.html', [81, 0.903, 1840, 3.255]],
      [
        'body/injectables/KnowledgeService.html',
        [
          3, 0.062, 4, 0.056, 5, 0.05, 8, 0.174, 13, 2.099, 14, 1.117, 20,
          0.406, 21, 0.007, 28, 1.543, 30, 0.533, 32, 1.606, 35, 0.417, 44,
          1.329, 62, 0.238, 67, 1.385, 72, 0.075, 73, 0.157, 79, 0.004, 80,
          0.004, 81, 1.07, 83, 1.414, 84, 1.483, 88, 1.261, 89, 2.594, 95,
          1.953, 97, 4.045, 100, 1.818, 101, 1.095, 104, 3.403, 107, 1.84, 113,
          2.448, 122, 4.063, 123, 0.581, 124, 2.268, 125, 1.935, 126, 1.992,
          129, 1.992, 131, 1.329, 133, 2.139, 134, 2.505, 138, 1.445, 139,
          1.276, 141, 1.719, 164, 2.787, 165, 3.792, 167, 2.957, 168, 2.957,
          177, 3.39, 180, 3.39, 195, 1.276, 311, 4.063, 320, 3.382, 323, 2.637,
          350, 1.992, 351, 2.19, 431, 1.562, 558, 2.787, 735, 1.696, 740, 3.266,
          745, 5.209, 751, 4.761, 1054, 5.051, 1062, 4.619, 1687, 3.495, 1688,
          3.495, 1689, 3.495, 1818, 7.125, 1822, 6.454, 1823, 5.899, 1833,
          3.495, 1836, 5.209, 1839, 5.034, 1840, 3.857, 1859, 2.821, 1860,
          3.495, 1862, 3.495, 1863, 5.663, 1864, 3.932, 1865, 3.932, 1866,
          5.663, 1867, 3.932, 1868, 3.932, 1869, 5.663, 1870, 3.932, 1871,
          3.932, 1872, 3.932, 1873, 3.932, 1874, 3.932, 1875, 3.932, 1876,
          3.932, 1877, 3.932, 1878, 5.663, 1879, 3.932, 1880, 3.932, 1881,
          5.663, 1882, 3.932, 1883, 5.663, 1884, 3.932, 1885, 3.932, 1886,
          3.932, 1887, 3.932,
        ],
      ],
      ['title/classes/LoginDto.html', [73, 0.19, 500, 3.106]],
      [
        'body/classes/LoginDto.html',
        [
          3, 0.088, 4, 0.08, 5, 0.071, 8, 0.247, 9, 1.125, 12, 1.818, 20, 0.344,
          21, 0.007, 23, 1.082, 30, 0.453, 35, 0.891, 62, 0.207, 72, 0.106, 73,
          0.286, 79, 0.005, 80, 0.005, 84, 1.369, 189, 1.358, 397, 2.457, 494,
          5.414, 500, 4.667, 571, 4.027, 665, 1.309, 678, 2.52, 680, 2.385, 683,
          3.346, 684, 1.638, 688, 3.533, 689, 3.638, 696, 2.529, 700, 2.663,
          744, 4.471, 824, 4.667, 864, 3.869, 881, 4.95, 1888, 4.946, 1889,
          6.382, 1890, 6.382, 1891, 6.382, 1892, 6.382, 1893, 6.382, 1894,
          6.382, 1895, 4.946, 1896, 5.564, 1897, 5.564, 1898, 4.946, 1899,
          4.946, 1900, 6.382, 1901, 6.382, 1902, 4.539,
        ],
      ],
      ['title/classes/LoginDto-1.html', [73, 0.16, 431, 0.942, 500, 2.604]],
      [
        'body/classes/LoginDto-1.html',
        [
          3, 0.088, 4, 0.08, 5, 0.071, 8, 0.247, 9, 1.125, 12, 1.818, 20, 0.344,
          21, 0.007, 23, 1.082, 30, 0.453, 35, 0.891, 62, 0.207, 72, 0.106, 73,
          0.286, 79, 0.005, 80, 0.005, 189, 1.358, 397, 2.457, 468, 4.585, 494,
          5.414, 500, 4.667, 571, 4.027, 665, 1.309, 678, 2.52, 680, 2.385, 683,
          3.346, 684, 1.638, 688, 3.533, 689, 3.638, 696, 2.529, 700, 2.663,
          744, 4.471, 824, 4.667, 864, 3.869, 881, 4.95, 1889, 6.382, 1890,
          6.382, 1891, 6.382, 1892, 6.382, 1893, 6.382, 1894, 6.382, 1895,
          4.946, 1898, 4.946, 1899, 4.946, 1900, 6.382, 1901, 6.382, 1902,
          4.539, 1903, 4.946, 1904, 5.564, 1905, 5.564,
        ],
      ],
      ['title/modules/MailModule.html', [205, 1.551, 1906, 3.637]],
      [
        'body/modules/MailModule.html',
        [
          3, 0.098, 4, 0.088, 5, 0.079, 21, 0.007, 27, 1.882, 62, 0.24, 72,
          0.117, 73, 0.245, 79, 0.006, 80, 0.006, 123, 0.91, 205, 2.703, 207,
          2.721, 208, 3.117, 209, 3.316, 210, 3.316, 211, 3.117, 212, 4.488,
          213, 4.349, 216, 4.124, 217, 3.316, 218, 3.213, 412, 3.996, 471,
          4.414, 472, 3.316, 478, 4.683, 479, 4.683, 480, 4.683, 481, 4.683,
          482, 4.683, 483, 4.683, 619, 6.54, 1906, 7.307, 1907, 5.469, 1908,
          5.469, 1909, 5.469, 1910, 6.153, 1911, 6.153, 1912, 6.153,
        ],
      ],
      ['title/injectables/MailService.html', [81, 0.903, 619, 3.255]],
      [
        'body/injectables/MailService.html',
        [
          3, 0.109, 4, 0.074, 5, 0.066, 8, 0.23, 9, 1.073, 14, 0.954, 20, 0.368,
          21, 0.007, 27, 1.583, 30, 0.484, 35, 0.994, 62, 0.235, 72, 0.099, 73,
          0.206, 79, 0.005, 80, 0.005, 81, 1.294, 83, 1.861, 88, 1.525, 89,
          2.174, 95, 1.785, 100, 1.553, 101, 0.935, 107, 1.153, 113, 1.646, 123,
          0.765, 131, 2.593, 133, 1.438, 134, 1.785, 141, 1.392, 194, 2.232,
          195, 1.679, 250, 5.086, 397, 1.833, 399, 3.481, 442, 3.95, 443, 3.277,
          445, 3.223, 472, 2.789, 492, 4.6, 585, 3.938, 586, 5.435, 595, 2.622,
          610, 2.702, 612, 3.098, 619, 4.664, 660, 2.622, 663, 2.348, 924,
          3.525, 925, 3.713, 979, 3.364, 1761, 4.6, 1913, 4.6, 1914, 7.674,
          1915, 6.847, 1916, 6.847, 1917, 6.847, 1918, 8.167, 1919, 7.26, 1920,
          5.175, 1921, 6.847, 1922, 6.086, 1923, 5.175, 1924, 5.175, 1925,
          5.175, 1926, 5.175, 1927, 5.175, 1928, 5.175, 1929, 5.175, 1930,
          5.175, 1931, 5.175, 1932, 5.175, 1933, 5.175, 1934, 5.175, 1935,
          5.175, 1936, 5.175, 1937, 5.175, 1938, 5.175, 1939, 5.175, 1940,
          5.175, 1941, 6.847, 1942, 4.6,
        ],
      ],
      ['title/entities/Menu.html', [0, 1.551, 1943, 3.255]],
      [
        'body/entities/Menu.html',
        [
          0, 1.524, 2, 2.13, 3, 0.075, 4, 0.067, 5, 0.06, 8, 0.208, 9, 1.005,
          13, 1.993, 14, 0.654, 20, 0.448, 21, 0.007, 23, 1.351, 24, 3.933, 26,
          3.937, 27, 2.401, 28, 2.518, 30, 0.565, 32, 1.488, 33, 3.994, 35,
          0.937, 36, 4.479, 37, 3.331, 38, 4.298, 48, 3.839, 62, 0.135, 63,
          4.156, 66, 3.814, 67, 1.653, 72, 0.089, 73, 0.187, 79, 0.005, 80,
          0.005, 101, 1.072, 240, 4.173, 265, 6.978, 283, 3.198, 289, 4.368,
          468, 5.231, 650, 2.909, 1396, 4.748, 1943, 6.286, 1944, 4.173, 1945,
          6.493, 1946, 6.493, 1947, 6.493, 1948, 6.493, 1949, 7.305, 1950,
          6.493, 1951, 6.493, 1952, 6.413, 1953, 4.695, 1954, 4.695, 1955,
          4.695, 1956, 4.695, 1957, 4.695, 1958, 4.695, 1959, 4.695, 1960,
          4.695, 1961, 4.695, 1962, 4.695, 1963, 4.695, 1964, 4.695, 1965,
          4.695,
        ],
      ],
      ['title/controllers/MenuController.html', [157, 1.328, 1966, 3.255]],
      [
        'body/controllers/MenuController.html',
        [
          3, 0.059, 4, 0.053, 5, 0.047, 8, 0.165, 13, 2.316, 14, 1.048, 20,
          0.339, 21, 0.007, 23, 1.184, 30, 0.495, 32, 1.489, 62, 0.249, 72,
          0.071, 73, 0.148, 79, 0.004, 80, 0.004, 84, 1.398, 88, 1.21, 89,
          2.615, 95, 1.281, 100, 1.706, 101, 1.028, 107, 1.75, 113, 2.393, 123,
          0.549, 131, 1.255, 133, 1.965, 134, 2.71, 141, 1.529, 157, 1.032, 159,
          1.229, 162, 2.068, 164, 2.673, 165, 3.691, 166, 2.927, 167, 2.836,
          168, 2.836, 171, 3.133, 174, 2.312, 175, 2.529, 177, 2.222, 178,
          2.529, 180, 2.222, 184, 3.133, 185, 2.142, 186, 1.881, 188, 3.133,
          189, 0.906, 195, 1.205, 196, 2.664, 199, 3.029, 201, 3.029, 203,
          3.029, 279, 2.04, 340, 1.642, 341, 2.529, 342, 1.881, 343, 2.413, 346,
          1.881, 347, 2.142, 348, 2.222, 349, 2.529, 350, 1.881, 351, 2.068,
          352, 2.413, 353, 2.068, 355, 2.529, 358, 2.222, 364, 5.123, 366,
          2.222, 368, 2.413, 370, 2.413, 373, 4.402, 376, 3.531, 384, 2.529,
          508, 4.609, 513, 2.001, 514, 3.133, 515, 1.205, 516, 2.529, 517,
          1.777, 520, 5.528, 521, 2.001, 527, 3.3, 528, 3.3, 532, 3.867, 1837,
          2.826, 1943, 4.375, 1966, 3.7, 1967, 3.3, 1968, 4.829, 1969, 3.3,
          1970, 3.713, 1971, 3.713, 1972, 6.789, 1973, 3.3, 1974, 3.713, 1975,
          3.029, 1976, 3.713, 1977, 3.713, 1978, 5.432, 1979, 3.713, 1980, 3.3,
          1981, 3.713, 1982, 3.029, 1983, 3.713, 1984, 3.029, 1985, 3.3, 1986,
          3.713, 1987, 3.713, 1988, 5.432, 1989, 7.858, 1990, 6.41, 1991, 3.3,
          1992, 7.858, 1993, 6.136, 1994, 3.3, 1995, 3.3, 1996, 3.3, 1997, 3.3,
          1998, 3.3,
        ],
      ],
      [
        'title/controllers/MenuController-1.html',
        [157, 1.113, 431, 0.942, 1966, 2.728],
      ],
      [
        'body/controllers/MenuController-1.html',
        [
          3, 0.067, 4, 0.06, 5, 0.054, 8, 0.186, 13, 1.877, 14, 1.1, 20, 0.444,
          21, 0.007, 23, 1.235, 30, 0.516, 32, 1.312, 62, 0.227, 72, 0.08, 73,
          0.167, 79, 0.004, 80, 0.004, 88, 1.322, 89, 2.658, 100, 1.79, 101,
          1.078, 107, 1.825, 113, 2.606, 123, 0.621, 141, 1.665, 157, 1.167,
          159, 1.39, 162, 2.338, 164, 2.92, 165, 3.906, 166, 3.197, 167, 3.098,
          168, 3.098, 194, 1.81, 195, 1.362, 279, 1.576, 344, 2.728, 345, 3.195,
          357, 3.195, 367, 3.195, 443, 4.243, 468, 4.857, 515, 1.362, 532,
          4.031, 554, 4.903, 558, 4.363, 560, 2.338, 567, 5.04, 1943, 4.041,
          1966, 4.041, 1968, 5.274, 1972, 4.84, 1985, 3.731, 1991, 5.274, 1994,
          5.274, 1995, 5.274, 1996, 5.274, 1997, 5.274, 1998, 5.274, 1999,
          3.731, 2000, 4.197, 2001, 4.197, 2002, 4.197, 2003, 4.197, 2004,
          4.197, 2005, 4.197, 2006, 4.197, 2007, 4.197, 2008, 4.197, 2009,
          4.197, 2010, 4.197, 2011, 3.731, 2012, 4.937, 2013, 4.197, 2014,
          4.197, 2015, 4.197, 2016, 4.197, 2017, 3.731, 2018, 4.197, 2019,
          3.731, 2020, 5.274, 2021, 4.197, 2022, 3.731, 2023, 4.197, 2024,
          4.197, 2025, 3.731, 2026, 4.197,
        ],
      ],
      ['title/modules/MenuModule.html', [205, 1.551, 467, 3.428]],
      [
        'body/modules/MenuModule.html',
        [
          3, 0.105, 4, 0.095, 5, 0.084, 14, 0.92, 21, 0.007, 62, 0.257, 72,
          0.126, 73, 0.263, 79, 0.006, 80, 0.006, 84, 1.136, 123, 0.975, 159,
          2.645, 205, 2.592, 207, 2.918, 412, 3.446, 467, 5.731, 515, 2.142,
          516, 5.44, 517, 3.158, 601, 4.494, 602, 5.44, 604, 6.079, 607, 4.494,
          608, 4.494, 609, 4.494, 610, 3.446, 611, 4.494, 612, 3.95, 1966,
          5.851, 2027, 6.599, 2028, 6.599,
        ],
      ],
      ['title/injectables/MenuService.html', [81, 0.903, 2012, 3.428]],
      [
        'body/injectables/MenuService.html',
        [
          3, 0.064, 4, 0.057, 5, 0.051, 8, 0.178, 13, 2.318, 14, 1.124, 20,
          0.387, 21, 0.007, 30, 0.524, 32, 1.588, 44, 1.354, 62, 0.211, 67,
          1.411, 72, 0.076, 73, 0.16, 79, 0.004, 80, 0.004, 81, 1.084, 83,
          1.441, 88, 1.279, 89, 2.642, 95, 1.98, 97, 4.08, 100, 1.83, 101,
          1.102, 107, 1.797, 113, 1.826, 123, 0.592, 124, 2.311, 125, 1.972,
          131, 1.354, 133, 1.864, 134, 2.314, 136, 4.36, 141, 1.64, 164, 2.825,
          165, 3.825, 166, 3.093, 167, 2.997, 168, 2.997, 174, 3.575, 177,
          3.436, 180, 3.436, 195, 1.3, 419, 4.733, 468, 4.901, 1185, 3.562,
          1343, 3.268, 1396, 2.604, 1943, 3.91, 1945, 6.511, 1946, 3.562, 1947,
          3.562, 1948, 5.962, 1949, 5.102, 1950, 3.562, 1951, 3.562, 1969,
          5.102, 1972, 6.324, 2011, 3.562, 2012, 4.118, 2020, 7.17, 2029, 3.562,
          2030, 5.74, 2031, 4.007, 2032, 4.007, 2033, 5.74, 2034, 4.007, 2035,
          4.007, 2036, 5.74, 2037, 4.007, 2038, 6.707, 2039, 4.007, 2040, 4.007,
          2041, 4.007, 2042, 4.007, 2043, 5.74, 2044, 5.74, 2045, 4.007, 2046,
          4.007, 2047, 5.102, 2048, 6.707, 2049, 6.707, 2050, 4.007, 2051,
          4.007, 2052, 4.007, 2053, 4.007, 2054, 4.007, 2055, 4.007, 2056,
          4.007, 2057, 4.007, 2058, 4.007, 2059, 4.007, 2060, 4.007, 2061,
          4.007, 2062, 4.007, 2063, 4.007, 2064, 4.007, 2065, 3.562, 2066,
          4.007,
        ],
      ],
      ['title/classes/OtherExceptionsFilter.html', [73, 0.19, 2067, 3.898]],
      [
        'body/classes/OtherExceptionsFilter.html',
        [
          3, 0.084, 4, 0.076, 5, 0.068, 8, 0.235, 14, 0.739, 20, 0.255, 21,
          0.007, 30, 0.334, 44, 2.352, 62, 0.224, 72, 0.101, 73, 0.211, 79,
          0.005, 80, 0.005, 88, 1.55, 100, 1.203, 101, 0.725, 107, 1.182, 123,
          0.784, 133, 2.292, 138, 2.558, 141, 1.079, 353, 2.955, 397, 2.208,
          399, 3.524, 442, 4.757, 443, 3.946, 515, 1.722, 518, 2.688, 610,
          4.056, 634, 4.838, 663, 3.741, 665, 1.248, 889, 4.038, 890, 3.425,
          892, 5.297, 893, 6.277, 895, 6.689, 899, 6.187, 900, 6.187, 901,
          5.678, 903, 5.912, 910, 5.678, 911, 5.678, 1005, 5.049, 1230, 4.524,
          1596, 3.806, 1782, 6.337, 1784, 5.678, 1785, 5.678, 1786, 5.678, 2067,
          5.678, 2068, 6.187, 2069, 5.305, 2070, 5.305, 2071, 5.305, 2072,
          5.305, 2073, 5.305, 2074, 5.305, 2075, 6.96,
        ],
      ],
      ['title/injectables/ParseFileIdsPipe.html', [81, 0.903, 2076, 3.898]],
      [
        'body/injectables/ParseFileIdsPipe.html',
        [
          3, 0.09, 4, 0.081, 5, 0.072, 8, 0.251, 13, 2.441, 14, 0.79, 20, 0.272,
          21, 0.007, 30, 0.357, 35, 0.601, 62, 0.163, 72, 0.108, 73, 0.226, 79,
          0.005, 80, 0.005, 81, 1.373, 83, 2.039, 84, 1.251, 88, 1.618, 100,
          1.286, 101, 0.774, 107, 1.263, 123, 0.838, 133, 2.351, 138, 3.108,
          139, 2.745, 141, 1.719, 724, 4.711, 729, 4.191, 735, 3.459, 736,
          4.067, 890, 2.79, 1529, 5.044, 1755, 5.213, 2076, 5.927, 2077, 5.039,
          2078, 5.927, 2079, 6.541, 2080, 7.518, 2081, 5.668, 2082, 5.668, 2083,
          8.457, 2084, 7.266, 2085, 7.266, 2086, 5.039, 2087, 5.668,
        ],
      ],
      ['title/injectables/ParseFileTypePipe.html', [81, 0.903, 2088, 3.898]],
      [
        'body/injectables/ParseFileTypePipe.html',
        [
          3, 0.088, 4, 0.08, 5, 0.071, 8, 0.247, 14, 0.775, 20, 0.267, 21,
          0.007, 30, 0.351, 35, 0.761, 44, 2.426, 49, 3.533, 62, 0.16, 72,
          0.106, 73, 0.222, 79, 0.005, 80, 0.005, 81, 1.356, 83, 2.001, 84,
          1.236, 88, 1.599, 100, 1.262, 101, 0.76, 107, 1.239, 123, 0.823, 133,
          1.996, 138, 2.921, 139, 2.58, 141, 1.708, 542, 4.526, 650, 2.524, 729,
          4.142, 735, 3.907, 736, 5.151, 741, 4.539, 890, 2.738, 1529, 4.845,
          1755, 5.151, 2078, 5.857, 2079, 6.484, 2080, 7.466, 2086, 4.946, 2088,
          5.857, 2089, 4.946, 2090, 5.564, 2091, 5.564, 2092, 5.564, 2093, 7.18,
          2094, 5.564, 2095, 7.18, 2096, 5.564,
        ],
      ],
      ['title/injectables/ParseStringDatePipe.html', [81, 0.903, 993, 3.637]],
      [
        'body/injectables/ParseStringDatePipe.html',
        [
          3, 0.102, 4, 0.092, 5, 0.082, 8, 0.285, 14, 0.896, 20, 0.308, 21,
          0.007, 30, 0.405, 35, 0.938, 62, 0.227, 72, 0.122, 73, 0.338, 79,
          0.006, 80, 0.006, 81, 1.485, 83, 2.312, 88, 1.751, 100, 1.458, 101,
          0.878, 107, 1.432, 123, 0.95, 138, 2.362, 139, 2.086, 141, 1.307, 684,
          2.313, 729, 4.535, 735, 3.663, 890, 3.163, 993, 5.983, 1529, 4.535,
          1755, 5.64, 2078, 6.413, 2097, 6.988, 2098, 5.714, 2099, 6.428, 2100,
          6.428, 2101, 6.428, 2102, 6.428,
        ],
      ],
      ['title/entities/Plant.html', [0, 1.551, 43, 3.106]],
      [
        'body/entities/Plant.html',
        [
          0, 1.903, 1, 5.566, 2, 2.66, 3, 0.093, 4, 0.084, 5, 0.075, 8, 0.26, 9,
          1.163, 12, 2.063, 14, 1.135, 20, 0.424, 21, 0.007, 23, 1.228, 24,
          3.552, 30, 0.514, 35, 0.908, 36, 4.339, 37, 3.362, 38, 4.339, 43,
          4.825, 44, 2.509, 45, 3.811, 62, 0.235, 63, 3.898, 65, 4.825, 66,
          3.061, 67, 2.065, 69, 2.41, 72, 0.112, 73, 0.234, 79, 0.005, 80,
          0.005, 163, 5.65, 238, 7.241, 269, 5.211, 583, 3.061, 664, 4.282, 956,
          3.811, 2103, 5.211, 2104, 5.863, 2105, 5.863, 2106, 7.423, 2107,
          5.863, 2108, 5.863,
        ],
      ],
      ['title/controllers/PlantController.html', [157, 1.328, 2109, 3.637]],
      [
        'body/controllers/PlantController.html',
        [
          3, 0.08, 4, 0.072, 5, 0.064, 8, 0.223, 13, 2.361, 14, 1.125, 20,
          0.387, 21, 0.007, 23, 1.268, 30, 0.53, 35, 0.964, 43, 3.265, 62,
          0.242, 72, 0.096, 73, 0.2, 79, 0.005, 80, 0.005, 84, 1.49, 88, 1.495,
          100, 1.831, 101, 1.102, 107, 1.873, 123, 0.742, 126, 2.545, 129,
          2.545, 141, 1.71, 157, 1.396, 159, 1.663, 162, 2.798, 164, 3.303, 165,
          4.214, 166, 3.618, 167, 3.505, 168, 3.505, 171, 4.361, 174, 3.128,
          175, 4.572, 177, 3.006, 178, 4.572, 180, 3.006, 182, 5.967, 184,
          3.872, 185, 2.897, 186, 2.545, 187, 4.465, 188, 3.872, 189, 1.226,
          194, 2.166, 195, 1.63, 196, 3.603, 199, 4.097, 201, 4.097, 203, 4.097,
          814, 5.894, 2109, 5.109, 2110, 4.465, 2111, 4.465, 2112, 5.022, 2113,
          5.022, 2114, 5.022, 2115, 5.022, 2116, 6.442, 2117, 5.022, 2118,
          5.476, 2119, 5.15, 2120, 4.465, 2121, 5.022, 2122, 5.022, 2123, 5.022,
          2124, 5.022, 2125, 5.022, 2126, 5.022,
        ],
      ],
      ['title/entities/PlantDiseaseKnowledge.html', [0, 1.551, 1859, 3.428]],
      [
        'body/entities/PlantDiseaseKnowledge.html',
        [
          0, 0.654, 2, 0.914, 3, 0.032, 4, 0.029, 5, 0.026, 8, 0.149, 9, 0.526,
          10, 2.587, 13, 1.179, 17, 2.943, 20, 0.453, 21, 0.007, 22, 3.772, 23,
          1.339, 24, 4.233, 26, 5.046, 27, 2.868, 28, 1.98, 29, 3.936, 30, 0.56,
          32, 0.589, 35, 0.996, 36, 4.333, 37, 3.358, 38, 4.096, 44, 3.164, 58,
          2.41, 62, 0.058, 63, 4.251, 66, 2.257, 67, 0.709, 72, 0.038, 73, 0.08,
          79, 0.002, 80, 0.002, 84, 1.536, 248, 3.141, 250, 5.509, 255, 4.609,
          272, 1.533, 273, 4.762, 748, 3.525, 749, 3.525, 750, 3.525, 751, 3.1,
          752, 3.525, 753, 3.525, 754, 3.525, 755, 4.114, 756, 3.525, 757,
          3.525, 758, 3.525, 759, 3.525, 760, 3.525, 761, 3.525, 762, 3.525,
          763, 3.525, 764, 3.525, 765, 3.525, 766, 3.525, 767, 3.525, 768,
          3.525, 769, 3.525, 770, 3.525, 771, 3.525, 772, 3.525, 773, 3.525,
          1859, 2.41, 2127, 1.79, 2128, 9.439, 2129, 2.014, 2130, 2.014, 2131,
          2.014, 2132, 2.014, 2133, 2.014, 2134, 2.014, 2135, 2.014, 2136,
          2.014, 2137, 2.014, 2138, 2.014, 2139, 2.014, 2140, 2.014, 2141,
          2.014, 2142, 2.014, 2143, 2.014, 2144, 2.014, 2145, 2.014, 2146,
          2.014, 2147, 2.014, 2148, 2.014, 2149, 2.014, 2150, 2.014, 2151,
          2.014, 2152, 2.014, 2153, 2.014, 2154, 2.014, 2155, 2.014, 2156,
          2.014, 2157, 2.014, 2158, 2.014, 2159, 2.014,
        ],
      ],
      ['title/modules/PlantModule.html', [205, 1.551, 2160, 3.637]],
      [
        'body/modules/PlantModule.html',
        [
          3, 0.105, 4, 0.095, 5, 0.084, 21, 0.007, 62, 0.248, 72, 0.126, 73,
          0.263, 79, 0.006, 80, 0.006, 84, 1.136, 123, 0.975, 159, 2.645, 205,
          2.788, 207, 2.918, 208, 3.343, 209, 3.556, 210, 3.556, 211, 3.343,
          212, 4.629, 213, 3.446, 216, 4.305, 217, 3.556, 218, 3.446, 2109,
          6.538, 2119, 6.328, 2120, 5.866, 2160, 7.071, 2161, 5.866, 2162,
          5.866, 2163, 6.599, 2164, 6.599,
        ],
      ],
      ['title/injectables/PlantService.html', [81, 0.903, 2119, 3.255]],
      [
        'body/injectables/PlantService.html',
        [
          3, 0.084, 4, 0.076, 5, 0.068, 8, 0.235, 13, 2.396, 14, 1.148, 20,
          0.395, 21, 0.007, 30, 0.54, 32, 1.612, 35, 0.907, 43, 5.563, 62,
          0.224, 72, 0.101, 73, 0.211, 79, 0.005, 80, 0.005, 81, 1.313, 83,
          1.905, 84, 1.512, 88, 1.548, 100, 1.869, 101, 1.126, 107, 1.994, 123,
          0.783, 126, 2.683, 129, 2.683, 139, 1.718, 141, 1.74, 164, 3.421, 165,
          4.303, 166, 3.746, 167, 3.63, 168, 3.63, 174, 4.329, 177, 4.161, 180,
          4.161, 227, 7.607, 228, 4.707, 229, 4.319, 230, 4.707, 814, 5.829,
          2111, 6.179, 2116, 6.423, 2118, 5.671, 2119, 4.735, 2165, 4.707, 2166,
          5.295, 2167, 5.295, 2168, 5.295, 2169, 5.295, 2170, 5.295,
        ],
      ],
      ['title/entities/Profile.html', [0, 1.551, 856, 2.86]],
      [
        'body/entities/Profile.html',
        [
          0, 1.612, 2, 2.254, 3, 0.079, 4, 0.071, 5, 0.063, 8, 0.22, 9, 1.044,
          13, 2.051, 14, 1.048, 20, 0.447, 21, 0.007, 23, 1.328, 24, 4.01, 26,
          4.827, 27, 2.74, 28, 2.616, 30, 0.556, 32, 1.41, 35, 0.95, 36, 4.538,
          37, 3.516, 38, 4.538, 44, 2.915, 48, 3.989, 62, 0.192, 63, 4.128, 66,
          3.926, 67, 1.75, 72, 0.095, 73, 0.198, 79, 0.005, 80, 0.005, 595,
          4.465, 650, 3.023, 856, 3.989, 2171, 4.416, 2172, 5.394, 2173, 7.519,
          2174, 6.134, 2175, 5.394, 2176, 4.968, 2177, 4.968, 2178, 5.923, 2179,
          4.968, 2180, 4.968, 2181, 4.968, 2182, 4.968, 2183, 4.968, 2184,
          4.968, 2185, 5.923, 2186, 4.416, 2187, 4.968,
        ],
      ],
      ['title/modules/RedisModule.html', [205, 1.551, 2188, 3.637]],
      [
        'body/modules/RedisModule.html',
        [
          3, 0.1, 4, 0.09, 5, 0.08, 21, 0.007, 27, 1.917, 62, 0.242, 72, 0.119,
          73, 0.25, 79, 0.006, 80, 0.006, 123, 0.926, 205, 2.725, 207, 2.771,
          208, 3.175, 209, 3.377, 210, 3.377, 211, 3.175, 212, 4.525, 213,
          4.385, 216, 4.171, 217, 3.377, 218, 3.272, 412, 3.272, 471, 4.495,
          472, 3.377, 478, 4.769, 479, 4.769, 480, 4.769, 481, 4.769, 482,
          4.769, 483, 4.769, 593, 4.632, 2188, 7.078, 2189, 5.57, 2190, 5.57,
          2191, 5.57, 2192, 6.555, 2193, 6.266, 2194, 6.266,
        ],
      ],
      ['title/injectables/RedisService.html', [81, 0.903, 2192, 3.255]],
      [
        'body/injectables/RedisService.html',
        [
          3, 0.04, 4, 0.036, 5, 0.032, 8, 0.112, 9, 0.631, 12, 1.79, 14, 1.023,
          20, 0.381, 21, 0.007, 28, 1.979, 30, 0.49, 32, 1.542, 35, 0.953, 44,
          1.704, 62, 0.182, 72, 0.048, 73, 0.1, 79, 0.003, 80, 0.003, 81, 0.761,
          83, 0.905, 88, 0.898, 89, 2.545, 95, 0.868, 100, 1.763, 101, 1.003,
          107, 1.854, 113, 0.801, 123, 0.372, 131, 1.704, 133, 2.041, 134, 2.68,
          138, 0.925, 139, 1.308, 141, 1.54, 186, 4.389, 194, 1.085, 195, 1.871,
          255, 4.387, 399, 1.142, 419, 4.785, 431, 1.583, 443, 2.413, 444,
          4.702, 472, 1.356, 512, 6.333, 542, 2.172, 585, 1.915, 586, 4.191,
          610, 2.105, 612, 2.413, 650, 2.287, 660, 2.042, 663, 1.142, 735,
          3.267, 740, 4.236, 890, 1.238, 924, 1.714, 925, 1.805, 979, 1.636,
          1138, 1.915, 1139, 3.068, 1140, 2.892, 1230, 2.62, 1234, 4.702, 1315,
          1.805, 1596, 1.805, 1614, 2.053, 2192, 2.745, 2195, 2.237, 2196,
          4.481, 2197, 5.041, 2198, 4.03, 2199, 5.041, 2200, 4.03, 2201, 6.729,
          2202, 4.03, 2203, 4.03, 2204, 2.516, 2205, 8.729, 2206, 7.77, 2207,
          7.575, 2208, 2.516, 2209, 5.914, 2210, 4.03, 2211, 4.03, 2212, 6.733,
          2213, 5.764, 2214, 4.03, 2215, 2.516, 2216, 2.516, 2217, 6.307, 2218,
          2.516, 2219, 2.237, 2220, 4.03, 2221, 2.516, 2222, 4.03, 2223, 6.307,
          2224, 2.516, 2225, 5.991, 2226, 4.03, 2227, 2.516, 2228, 4.03, 2229,
          2.516, 2230, 4.03, 2231, 4.03, 2232, 2.516, 2233, 2.237, 2234, 2.516,
          2235, 2.237, 2236, 2.516, 2237, 2.516, 2238, 2.516, 2239, 2.516, 2240,
          5.041, 2241, 2.516, 2242, 4.03, 2243, 2.516, 2244, 2.516, 2245, 2.516,
          2246, 2.516, 2247, 2.516, 2248, 5.041, 2249, 2.516, 2250, 2.516, 2251,
          2.516, 2252, 2.516, 2253, 4.03, 2254, 2.516, 2255, 2.516, 2256, 2.516,
          2257, 2.516, 2258, 2.516, 2259, 2.516,
        ],
      ],
      ['title/classes/RegisterDto.html', [73, 0.19, 505, 3.106]],
      [
        'body/classes/RegisterDto.html',
        [
          3, 0.096, 4, 0.087, 5, 0.077, 8, 0.269, 9, 1.187, 12, 1.919, 20,
          0.364, 21, 0.007, 23, 1.142, 30, 0.478, 35, 0.919, 62, 0.218, 72,
          0.115, 73, 0.302, 79, 0.006, 80, 0.006, 84, 1.424, 189, 1.479, 397,
          2.389, 505, 4.926, 537, 4.607, 571, 4.19, 665, 1.425, 678, 2.6, 680,
          2.481, 683, 3.481, 684, 1.783, 688, 2.981, 689, 3.839, 696, 2.411,
          700, 3.626, 864, 4.084, 881, 5.15, 2260, 5.385, 2261, 6.736, 2262,
          6.058, 2263, 6.058,
        ],
      ],
      ['title/classes/RegisterDto-1.html', [73, 0.16, 431, 0.942, 505, 2.604]],
      [
        'body/classes/RegisterDto-1.html',
        [
          3, 0.096, 4, 0.087, 5, 0.077, 8, 0.269, 9, 1.187, 12, 1.919, 20,
          0.364, 21, 0.007, 23, 1.142, 30, 0.478, 35, 0.919, 62, 0.218, 72,
          0.115, 73, 0.302, 79, 0.006, 80, 0.006, 189, 1.479, 397, 2.389, 468,
          4.77, 505, 4.926, 537, 4.607, 571, 4.19, 665, 1.425, 678, 2.6, 680,
          2.481, 683, 3.481, 684, 1.783, 688, 2.981, 689, 3.839, 696, 2.411,
          700, 3.626, 864, 4.084, 881, 5.15, 2261, 6.736, 2264, 5.385, 2265,
          6.058, 2266, 6.058,
        ],
      ],
      ['title/interfaces/Request.html', [438, 2.168, 504, 2.226]],
      [
        'body/interfaces/Request.html',
        [
          3, 0.101, 4, 0.091, 5, 0.082, 8, 0.283, 9, 1.226, 20, 0.306, 21,
          0.007, 32, 1.12, 35, 0.83, 62, 0.244, 72, 0.149, 73, 0.254, 79, 0.006,
          80, 0.006, 81, 1.479, 123, 0.944, 194, 2.753, 279, 2.397, 340, 2.823,
          346, 3.966, 438, 3.551, 440, 3.975, 472, 3.44, 504, 3.646, 518, 3.234,
          582, 4.858, 583, 3.333, 584, 5.207, 586, 5.272, 588, 5.207, 589,
          4.348, 590, 6.012, 591, 3.141, 592, 4.149, 593, 3.821, 594, 4.149,
          595, 4.472, 596, 4.858,
        ],
      ],
      ['title/interfaces/Request-1.html', [431, 0.942, 438, 1.817, 504, 1.866]],
      [
        'body/interfaces/Request-1.html',
        [
          3, 0.084, 4, 0.076, 5, 0.112, 8, 0.235, 9, 1.089, 13, 1.444, 20,
          0.334, 21, 0.007, 27, 1.62, 53, 2.683, 62, 0.253, 72, 0.132, 73,
          0.211, 79, 0.005, 80, 0.005, 81, 1.313, 84, 0.912, 89, 1.5, 95, 1.826,
          121, 2.402, 123, 0.783, 131, 2.349, 133, 2.291, 134, 1.826, 138,
          2.852, 139, 2.519, 141, 1.077, 195, 1.718, 279, 2.61, 419, 2.95, 438,
          2.402, 440, 3.298, 504, 3.986, 513, 2.854, 514, 4.01, 515, 1.718, 517,
          2.534, 518, 3.522, 519, 4.519, 521, 2.854, 542, 2.854, 592, 3.442,
          593, 3.17, 594, 3.442, 890, 2.606, 962, 4.646, 996, 3.17, 998, 3.799,
          999, 3.799, 1232, 4.441, 1370, 5.356, 1519, 4.03, 1521, 4.03, 1522,
          4.987, 1525, 3.799, 1526, 4.987, 1529, 4.477, 1530, 5.291, 1531,
          3.606, 1532, 3.799, 1533, 4.707, 1534, 4.03, 1535, 4.707, 1536, 4.987,
          1537, 3.606, 1538, 3.799, 1539, 4.707,
        ],
      ],
      ['title/interfaces/Request-2.html', [438, 1.817, 504, 1.866, 743, 2.31]],
      [
        'body/interfaces/Request-2.html',
        [
          3, 0.081, 4, 0.073, 5, 0.104, 8, 0.226, 9, 1.061, 20, 0.325, 21,
          0.007, 27, 1.556, 53, 2.578, 62, 0.25, 72, 0.129, 73, 0.203, 79,
          0.005, 80, 0.005, 81, 1.279, 84, 0.876, 89, 1.441, 95, 1.755, 121,
          2.308, 123, 0.752, 131, 2.288, 133, 2.414, 134, 1.755, 138, 2.796,
          139, 2.47, 141, 1.034, 195, 1.651, 279, 2.542, 419, 2.834, 438, 2.308,
          440, 3.169, 504, 3.934, 513, 2.742, 514, 3.906, 515, 1.651, 517,
          2.435, 518, 3.43, 519, 4.401, 521, 2.742, 542, 2.742, 592, 3.307, 593,
          3.046, 594, 3.307, 650, 3.072, 724, 4.239, 890, 2.504, 946, 5.46, 996,
          3.046, 998, 3.65, 999, 3.65, 1232, 4.552, 1373, 6.174, 1522, 4.858,
          1525, 3.65, 1526, 4.858, 1529, 4.39, 1530, 5.153, 1531, 3.466, 1532,
          3.65, 1534, 3.872, 1536, 4.858, 1537, 3.466, 1538, 3.65, 1699, 4.15,
          1769, 3.872, 1770, 3.872, 1773, 4.523, 1774, 4.523, 1775, 4.523, 1776,
          4.523, 1777, 6.019, 1778, 4.523, 1779, 4.523,
        ],
      ],
      ['title/classes/ResetPasswordDto.html', [73, 0.19, 2267, 3.106]],
      [
        'body/classes/ResetPasswordDto.html',
        [
          3, 0.101, 4, 0.091, 5, 0.082, 8, 0.283, 9, 1.226, 12, 1.616, 20,
          0.306, 21, 0.007, 23, 0.962, 30, 0.402, 35, 0.83, 37, 2.506, 62,
          0.226, 72, 0.122, 73, 0.312, 79, 0.006, 80, 0.006, 84, 1.348, 101,
          1.069, 189, 1.558, 397, 2.267, 571, 4.289, 665, 1.502, 678, 2.348,
          680, 2.348, 684, 1.878, 696, 2.49, 720, 3.218, 725, 3.682, 860, 4.875,
          861, 5.272, 862, 4.875, 863, 4.348, 864, 4.218, 2267, 5.088, 2268,
          6.958, 2269, 4.579, 2270, 4.858,
        ],
      ],
      [
        'title/classes/ResetPasswordDto-1.html',
        [73, 0.16, 431, 0.942, 2267, 2.604],
      ],
      [
        'body/classes/ResetPasswordDto-1.html',
        [
          3, 0.101, 4, 0.091, 5, 0.082, 8, 0.283, 9, 1.226, 12, 1.616, 20,
          0.306, 21, 0.007, 23, 0.962, 30, 0.402, 35, 0.83, 37, 2.506, 62,
          0.226, 72, 0.122, 73, 0.312, 79, 0.006, 80, 0.006, 101, 1.069, 189,
          1.558, 397, 2.267, 571, 4.289, 665, 1.502, 678, 2.348, 680, 2.348,
          684, 1.878, 696, 2.49, 720, 3.218, 725, 3.682, 826, 4.087, 860, 4.875,
          861, 5.272, 862, 4.875, 863, 4.348, 864, 4.218, 2267, 5.088, 2269,
          4.579, 2270, 4.858, 2271, 6.958,
        ],
      ],
      ['title/entities/Role.html', [0, 1.551, 342, 2.421]],
      [
        'body/entities/Role.html',
        [
          0, 1.903, 2, 2.66, 3, 0.093, 4, 0.084, 5, 0.075, 8, 0.26, 9, 1.163,
          14, 1.135, 20, 0.424, 21, 0.007, 23, 1.228, 24, 3.552, 26, 4.001, 27,
          2.619, 30, 0.514, 35, 0.908, 36, 4.339, 37, 3.362, 38, 4.339, 44,
          2.509, 45, 3.811, 62, 0.235, 63, 3.898, 65, 4.825, 67, 2.065, 72,
          0.112, 73, 0.234, 79, 0.005, 80, 0.005, 272, 5.65, 342, 3.761, 583,
          3.061, 595, 4.573, 664, 4.282, 820, 5.549, 956, 3.811, 2186, 5.211,
          2272, 5.211, 2273, 7.241, 2274, 5.863, 2275, 5.863, 2276, 7.423, 2277,
          5.863, 2278, 5.863,
        ],
      ],
      ['title/controllers/RoleController.html', [157, 1.328, 2279, 3.255]],
      [
        'body/controllers/RoleController.html',
        [
          3, 0.057, 4, 0.052, 5, 0.046, 8, 0.16, 13, 2.399, 14, 0.971, 20,
          0.334, 21, 0.007, 23, 1.172, 30, 0.49, 32, 1.478, 44, 1.218, 62,
          0.256, 72, 0.069, 73, 0.144, 79, 0.004, 80, 0.004, 84, 1.385, 88,
          1.184, 89, 2.604, 95, 1.244, 100, 1.581, 101, 0.952, 104, 3.556, 107,
          1.732, 113, 2.474, 123, 0.533, 126, 1.826, 129, 1.826, 131, 1.218,
          133, 1.937, 134, 2.682, 139, 2.049, 141, 1.581, 157, 1.002, 159,
          1.194, 162, 2.008, 164, 2.616, 165, 3.639, 166, 3.403, 167, 3.297,
          168, 3.297, 171, 3.066, 174, 2.245, 175, 2.455, 177, 2.158, 178,
          2.455, 180, 2.158, 184, 3.066, 185, 2.08, 186, 3.531, 188, 3.066, 189,
          0.88, 195, 1.17, 196, 2.586, 311, 2.586, 340, 2.792, 341, 2.455, 342,
          3.531, 343, 2.343, 344, 2.343, 345, 2.744, 346, 1.826, 347, 2.08, 348,
          2.158, 349, 2.455, 350, 1.826, 351, 2.008, 352, 2.343, 353, 2.008,
          354, 4.747, 355, 2.455, 357, 2.744, 358, 2.158, 364, 5.062, 366,
          2.158, 367, 2.744, 368, 2.343, 370, 2.343, 373, 4.341, 379, 4.53, 380,
          4.53, 384, 2.455, 513, 1.943, 514, 3.066, 515, 1.17, 517, 1.725, 520,
          5.477, 521, 1.943, 532, 3.827, 620, 2.941, 637, 2.343, 638, 2.941,
          639, 5.685, 817, 4.341, 1837, 2.744, 1973, 3.205, 1975, 2.941, 1982,
          2.941, 1984, 2.941, 1990, 4.336, 1993, 6.062, 2279, 3.621, 2280,
          3.205, 2281, 7.776, 2282, 3.605, 2283, 3.605, 2284, 5.316, 2285,
          3.605, 2286, 3.605, 2287, 3.605, 2288, 3.605, 2289, 3.605, 2290,
          4.341, 2291, 3.605, 2292, 4.336, 2293, 3.605, 2294, 3.205, 2295,
          3.205, 2296, 3.205, 2297, 4.725, 2298, 3.205, 2299, 4.725, 2300,
          5.316, 2301, 3.205, 2302, 3.205,
        ],
      ],
      [
        'title/controllers/RoleController-1.html',
        [157, 1.113, 431, 0.942, 2279, 2.728],
      ],
      [
        'body/controllers/RoleController-1.html',
        [
          3, 0.07, 4, 0.063, 5, 0.056, 8, 0.196, 13, 1.929, 14, 1.066, 20,
          0.438, 21, 0.007, 23, 1.255, 30, 0.525, 32, 1.241, 62, 0.232, 72,
          0.084, 73, 0.176, 79, 0.004, 80, 0.004, 88, 1.369, 89, 2.674, 100,
          1.735, 101, 1.045, 104, 2.718, 107, 1.854, 113, 2.648, 123, 0.653,
          126, 2.236, 129, 2.236, 141, 1.692, 157, 1.709, 159, 1.462, 164,
          3.025, 165, 3.993, 166, 3.312, 167, 3.21, 168, 3.21, 194, 1.904, 195,
          1.433, 515, 1.433, 532, 4.097, 554, 4.983, 558, 4.287, 560, 4.928,
          567, 5.112, 572, 3.167, 817, 3.828, 826, 4.46, 2017, 3.924, 2019,
          3.924, 2022, 3.924, 2025, 3.924, 2279, 4.187, 2290, 3.828, 2292,
          5.014, 2294, 5.464, 2295, 5.464, 2296, 5.464, 2298, 5.464, 2301,
          5.464, 2302, 5.464, 2303, 3.924, 2304, 7.647, 2305, 4.414, 2306,
          4.414, 2307, 4.414, 2308, 4.414, 2309, 4.414, 2310, 4.414, 2311,
          4.414, 2312, 4.414, 2313, 4.414, 2314, 4.414, 2315, 5.074, 2316,
          4.414, 2317, 4.414, 2318, 4.414, 2319, 4.414, 2320, 4.414, 2321,
          4.414, 2322, 4.414,
        ],
      ],
      ['title/modules/RoleModule.html', [205, 1.551, 2323, 3.637]],
      [
        'body/modules/RoleModule.html',
        [
          3, 0.105, 4, 0.095, 5, 0.084, 14, 0.92, 21, 0.007, 62, 0.257, 72,
          0.126, 73, 0.263, 79, 0.006, 80, 0.006, 84, 1.136, 123, 0.975, 159,
          2.645, 205, 2.592, 207, 2.918, 412, 3.446, 515, 2.142, 517, 3.158,
          601, 4.494, 602, 5.44, 607, 4.494, 608, 4.494, 609, 4.494, 610, 3.446,
          611, 4.494, 612, 3.95, 637, 5.192, 2279, 5.851, 2323, 6.079, 2324,
          6.599, 2325, 6.079, 2326, 6.599,
        ],
      ],
      ['title/injectables/RoleService.html', [81, 0.903, 2315, 3.428]],
      [
        'body/injectables/RoleService.html',
        [
          3, 0.066, 4, 0.06, 5, 0.053, 8, 0.185, 13, 2.032, 14, 1.138, 20,
          0.377, 21, 0.007, 30, 0.529, 32, 1.531, 62, 0.242, 67, 1.465, 72,
          0.079, 73, 0.166, 79, 0.004, 80, 0.004, 81, 1.114, 83, 1.496, 88,
          1.313, 89, 2.655, 95, 2.033, 97, 4.149, 100, 1.784, 101, 1.074, 104,
          3.477, 107, 1.819, 113, 2.502, 121, 1.887, 123, 0.615, 124, 2.399,
          125, 2.047, 126, 2.107, 129, 2.107, 131, 1.405, 133, 2.186, 134,
          3.011, 136, 2.703, 138, 2.166, 139, 1.913, 141, 1.599, 164, 2.901,
          165, 3.89, 166, 3.177, 167, 3.078, 168, 3.078, 174, 3.671, 177, 3.529,
          180, 3.529, 311, 4.229, 340, 1.839, 342, 4.255, 397, 1.578, 442, 3.4,
          515, 1.35, 634, 4.264, 641, 3.697, 657, 3.697, 735, 1.794, 817, 4.639,
          826, 4.48, 2065, 5.24, 2209, 3.165, 2273, 3.697, 2290, 4.639, 2292,
          4.809, 2315, 4.229, 2327, 3.697, 2328, 7.449, 2329, 4.159, 2330,
          4.159, 2331, 5.895, 2332, 4.159, 2333, 4.159, 2334, 4.159, 2335,
          4.159, 2336, 4.159, 2337, 4.159, 2338, 4.159, 2339, 4.159, 2340,
          5.895, 2341, 4.159, 2342, 4.159, 2343, 4.159, 2344, 5.895, 2345,
          4.159, 2346, 4.159, 2347, 4.159, 2348, 4.159, 2349, 4.159, 2350,
          4.159,
        ],
      ],
      ['title/guards/RolesGuard.html', [348, 2.86, 1518, 3.637]],
      [
        'body/guards/RolesGuard.html',
        [
          3, 0.095, 4, 0.086, 5, 0.077, 8, 0.266, 14, 1.049, 20, 0.361, 21,
          0.007, 27, 1.833, 30, 0.474, 62, 0.249, 72, 0.114, 73, 0.239, 79,
          0.006, 80, 0.006, 81, 1.422, 88, 1.676, 95, 2.067, 100, 1.707, 101,
          1.028, 107, 1.334, 123, 0.886, 133, 2.092, 141, 1.53, 194, 2.584, 342,
          3.035, 343, 3.894, 348, 4.505, 595, 3.035, 890, 2.949, 1520, 4.56,
          1522, 6.192, 1525, 5.399, 1526, 6.192, 1528, 4.887, 1532, 4.298, 2351,
          5.326, 2352, 5.991, 2353, 9.075, 2354, 5.991, 2355, 5.991, 2356,
          7.526, 2357, 5.326, 2358, 4.887, 2359, 5.991, 2360, 7.526, 2361,
          5.991, 2362, 5.991, 2363, 5.991, 2364, 5.991, 2365, 5.991,
        ],
      ],
      ['title/entities/Task.html', [0, 1.551, 2366, 3.637]],
      [
        'body/entities/Task.html',
        [
          0, 1.386, 2, 1.937, 3, 0.068, 4, 0.061, 5, 0.055, 8, 0.189, 9, 0.941,
          11, 3.869, 18, 4.007, 19, 5.286, 20, 0.456, 21, 0.007, 23, 1.356, 24,
          4.258, 26, 5.103, 27, 2.722, 28, 2.959, 30, 0.567, 32, 1.593, 33,
          5.542, 35, 0.916, 36, 4.376, 37, 3.391, 38, 3.818, 62, 0.173, 63,
          4.305, 66, 2.229, 67, 1.504, 72, 0.081, 73, 0.17, 79, 0.004, 80,
          0.004, 101, 1.18, 237, 3.324, 583, 2.229, 650, 2.724, 664, 3.464, 831,
          4.007, 832, 4.983, 833, 4.515, 834, 4.158, 835, 4.983, 956, 2.775,
          1230, 3.903, 1237, 4.57, 1399, 6.061, 1435, 5.338, 2366, 4.57, 2367,
          3.795, 2368, 6.946, 2369, 6.174, 2370, 4.269, 2371, 4.269, 2372,
          4.269, 2373, 4.269, 2374, 4.269, 2375, 4.269, 2376, 6.005, 2377,
          4.269, 2378, 4.269, 2379, 4.269, 2380, 4.269, 2381, 6.946, 2382,
          4.269, 2383, 4.269,
        ],
      ],
      ['title/classes/TaskCreateDto.html', [73, 0.19, 2384, 3.428]],
      [
        'body/classes/TaskCreateDto.html',
        [
          3, 0.077, 4, 0.069, 5, 0.062, 8, 0.214, 9, 1.024, 12, 2.101, 20, 0.41,
          21, 0.007, 23, 1.251, 30, 0.539, 32, 1.501, 35, 0.907, 62, 0.188, 72,
          0.092, 73, 0.26, 79, 0.005, 80, 0.005, 189, 1.178, 279, 2.783, 397,
          2.482, 431, 1.538, 665, 1.136, 678, 2.735, 680, 2.566, 683, 3.601,
          684, 1.421, 688, 3.217, 689, 4.204, 696, 2.527, 700, 3.8, 831, 4.274,
          832, 5.316, 833, 4.817, 834, 4.436, 835, 5.316, 836, 3.938, 837,
          4.291, 838, 5.698, 839, 5.332, 841, 5.81, 843, 6.316, 844, 5.332, 846,
          4.974, 2384, 4.689, 2385, 5.236, 2386, 7.776, 2387, 4.291, 2388,
          4.827, 2389, 4.827, 2390, 4.827, 2391, 4.827, 2392, 4.827, 2393,
          4.827,
        ],
      ],
      ['title/classes/TypeormFilter.html', [73, 0.19, 344, 3.106]],
      [
        'body/classes/TypeormFilter.html',
        [
          3, 0.095, 4, 0.085, 5, 0.076, 8, 0.264, 14, 0.829, 20, 0.286, 21,
          0.007, 30, 0.375, 62, 0.216, 67, 2.096, 72, 0.113, 73, 0.237, 79,
          0.005, 80, 0.005, 88, 1.669, 100, 1.35, 101, 0.813, 107, 1.326, 123,
          0.88, 133, 2.28, 139, 1.932, 248, 3.707, 344, 4.872, 397, 1.594, 442,
          4.967, 443, 2.848, 504, 2.772, 610, 4.284, 663, 3.722, 665, 1.4, 890,
          3.688, 892, 5.704, 893, 6.553, 895, 5.704, 903, 4.53, 911, 4.855,
          1005, 3.869, 1396, 3.869, 1596, 4.27, 1782, 6.692, 1784, 4.855, 1785,
          4.855, 1786, 4.855, 1942, 5.291, 2394, 5.291, 2395, 8.61, 2396, 5.952,
          2397, 7.495, 2398, 5.952, 2399, 5.952, 2400, 5.952, 2401, 5.952, 2402,
          5.952, 2403, 5.952, 2404, 5.952, 2405, 5.952,
        ],
      ],
      ['title/classes/UpdateAiConfigDto.html', [73, 0.19, 118, 3.637]],
      [
        'body/classes/UpdateAiConfigDto.html',
        [
          3, 0.093, 4, 0.084, 5, 0.075, 8, 0.261, 9, 1.164, 12, 1.882, 20,
          0.424, 21, 0.007, 23, 1.12, 30, 0.469, 35, 0.958, 62, 0.235, 69,
          3.352, 72, 0.112, 73, 0.325, 79, 0.005, 80, 0.005, 84, 1.404, 85,
          3.902, 101, 1.171, 118, 5.658, 150, 5.554, 151, 5.554, 189, 1.434,
          397, 1.99, 665, 1.382, 678, 2.571, 680, 2.446, 681, 3.166, 684, 1.729,
          688, 3.658, 691, 5.658, 693, 5.658, 696, 2.594, 697, 4.793, 698,
          5.223, 699, 5.223, 720, 3.352, 2406, 6.652, 2407, 7.434,
        ],
      ],
      ['title/classes/UpdateAiModelDto.html', [73, 0.19, 181, 3.428]],
      [
        'body/classes/UpdateAiModelDto.html',
        [
          3, 0.112, 4, 0.101, 5, 0.09, 21, 0.007, 62, 0.239, 69, 3.413, 72,
          0.134, 73, 0.281, 79, 0.006, 80, 0.006, 84, 1.212, 85, 3.369, 164,
          3.465, 170, 4.795, 181, 5.957, 192, 5.743, 583, 4.336, 665, 1.657,
          706, 5.743, 2408, 6.258, 2409, 8.303, 2410, 6.258, 2411, 5.743, 2412,
          5.743,
        ],
      ],
      ['title/classes/UpdateAiServiceDto.html', [73, 0.19, 334, 3.428]],
      [
        'body/classes/UpdateAiServiceDto.html',
        [
          3, 0.078, 4, 0.071, 5, 0.063, 8, 0.218, 9, 1.038, 12, 2.263, 20,
          0.401, 21, 0.007, 23, 1.259, 30, 0.527, 35, 0.948, 62, 0.191, 69,
          3.537, 72, 0.094, 73, 0.264, 79, 0.005, 80, 0.005, 84, 1.482, 85,
          4.117, 101, 1.25, 189, 1.202, 234, 6.106, 235, 6.106, 236, 6.106, 237,
          3.582, 257, 6.093, 258, 6.093, 259, 6.106, 273, 5.098, 334, 4.752,
          665, 1.158, 678, 2.745, 680, 2.581, 684, 1.449, 696, 2.658, 707,
          4.016, 708, 4.661, 709, 4.376, 710, 5.887, 711, 4.376, 712, 4.376,
          713, 4.376, 714, 4.752, 715, 4.376, 716, 5.887, 717, 4.376, 718,
          4.376, 719, 3.353, 720, 3.614, 2406, 7.019,
        ],
      ],
      ['title/classes/UpdateDatasetDto.html', [73, 0.19, 987, 3.255]],
      [
        'body/classes/UpdateDatasetDto.html',
        [
          3, 0.082, 4, 0.074, 5, 0.066, 8, 0.23, 9, 1.074, 12, 2.255, 13, 1.87,
          14, 1.184, 20, 0.369, 21, 0.007, 23, 1.158, 27, 2.097, 30, 0.484, 32,
          1.203, 35, 0.901, 49, 2.551, 62, 0.221, 72, 0.099, 73, 0.306, 79,
          0.005, 80, 0.005, 101, 1.116, 141, 1.394, 189, 1.265, 397, 2.338, 431,
          1.807, 665, 1.22, 678, 2.62, 680, 2.452, 681, 2.794, 682, 4.456, 684,
          1.526, 688, 2.551, 695, 3.819, 696, 2.444, 700, 2.481, 720, 3.36, 723,
          4.229, 724, 4.961, 725, 2.991, 726, 4.608, 728, 3.531, 729, 4.431,
          730, 4.608, 733, 4.608, 735, 2.957, 736, 3.72, 737, 4.608, 738, 4.608,
          739, 6.094, 740, 3.955, 741, 4.229, 742, 3.72, 743, 2.991, 744, 3.229,
          987, 4.67, 1059, 6.667, 2413, 5.184, 2414, 5.184, 2415, 5.184, 2416,
          5.184,
        ],
      ],
      ['title/classes/UpdateFileDto.html', [73, 0.19, 1491, 3.255]],
      [
        'body/classes/UpdateFileDto.html',
        [
          3, 0.074, 4, 0.067, 5, 0.06, 8, 0.207, 9, 1, 12, 2.076, 13, 2.408, 20,
          0.393, 21, 0.007, 23, 1.097, 27, 1.953, 30, 0.459, 32, 1.373, 35,
          0.898, 37, 1.83, 38, 3.234, 62, 0.21, 72, 0.122, 73, 0.312, 79, 0.005,
          80, 0.005, 101, 1.069, 131, 2.861, 189, 1.138, 266, 4.36, 397, 2.5,
          431, 1.929, 665, 1.097, 678, 2.648, 680, 2.54, 681, 2.513, 682, 4.731,
          683, 3.295, 684, 1.372, 689, 2.362, 695, 3.556, 696, 2.316, 700,
          3.055, 720, 2.992, 724, 2.597, 725, 3.682, 729, 3.682, 735, 2.011,
          742, 3.345, 743, 2.69, 744, 2.904, 869, 3.031, 875, 4.348, 880, 3.031,
          962, 4.357, 1306, 4.357, 1377, 3.549, 1378, 3.804, 1382, 3.804, 1383,
          3.804, 1491, 4.348, 1492, 3.176, 1537, 5.767, 2417, 6.385, 2418, 6.47,
          2419, 4.663, 2420, 4.663, 2421, 4.663, 2422, 4.663, 2423, 4.663, 2424,
          4.145, 2425, 4.145,
        ],
      ],
      ['title/classes/UpdateFilesAccessDto.html', [73, 0.19, 1492, 3.255]],
      [
        'body/classes/UpdateFilesAccessDto.html',
        [
          3, 0.076, 4, 0.068, 5, 0.061, 8, 0.212, 9, 1.015, 12, 2.092, 13, 2.42,
          20, 0.379, 21, 0.007, 23, 0.977, 27, 2.252, 30, 0.409, 32, 1.386, 35,
          0.876, 37, 1.872, 38, 2.416, 49, 2.347, 62, 0.212, 72, 0.124, 73,
          0.315, 79, 0.005, 80, 0.005, 131, 2.88, 189, 1.164, 266, 4.401, 397,
          2.52, 431, 1.733, 665, 1.122, 678, 2.616, 680, 2.557, 681, 2.57, 682,
          4.786, 683, 3.326, 684, 1.403, 689, 3.284, 695, 3.611, 696, 2.343,
          700, 2.282, 720, 3.027, 724, 4.102, 729, 3.739, 735, 2.057, 742,
          3.421, 743, 2.751, 744, 2.97, 869, 3.099, 875, 3.248, 880, 3.099, 962,
          2.854, 1306, 2.854, 1377, 3.629, 1378, 5.287, 1379, 4.239, 1382, 3.89,
          1383, 3.89, 1491, 3.248, 1492, 4.415, 1537, 5.805, 2417, 6.007, 2418,
          6.546, 2424, 4.239, 2425, 4.239, 2426, 4.768, 2427, 4.768, 2428,
          4.768, 2429, 4.768, 2430, 4.768, 2431, 4.768,
        ],
      ],
      ['title/classes/UpdatePasswordDto.html', [73, 0.19, 2432, 3.106]],
      [
        'body/classes/UpdatePasswordDto.html',
        [
          3, 0.101, 4, 0.091, 5, 0.081, 8, 0.282, 9, 1.223, 12, 1.609, 20,
          0.305, 21, 0.007, 23, 0.958, 30, 0.401, 35, 0.828, 37, 2.494, 62,
          0.225, 72, 0.121, 73, 0.311, 79, 0.006, 80, 0.006, 84, 1.344, 189,
          1.551, 397, 2.359, 665, 1.495, 678, 2.342, 680, 2.342, 683, 3.286,
          684, 1.87, 688, 3.127, 689, 3.219, 696, 2.483, 860, 4.861, 861, 5.262,
          862, 4.861, 864, 4.206, 2269, 4.558, 2270, 4.835, 2432, 5.073, 2433,
          6.938, 2434, 7.51, 2435, 5.647,
        ],
      ],
      [
        'title/classes/UpdatePasswordDto-1.html',
        [73, 0.16, 431, 0.942, 2432, 2.604],
      ],
      [
        'body/classes/UpdatePasswordDto-1.html',
        [
          3, 0.101, 4, 0.091, 5, 0.081, 8, 0.282, 9, 1.223, 12, 1.609, 20,
          0.305, 21, 0.007, 23, 0.958, 30, 0.401, 35, 0.828, 37, 2.494, 62,
          0.225, 72, 0.121, 73, 0.311, 79, 0.006, 80, 0.006, 189, 1.551, 397,
          2.359, 665, 1.495, 678, 2.342, 680, 2.342, 683, 3.286, 684, 1.87, 688,
          3.127, 689, 3.219, 696, 2.483, 826, 4.076, 860, 4.861, 861, 5.262,
          862, 4.861, 864, 4.206, 2269, 4.558, 2270, 4.835, 2432, 5.073, 2434,
          7.51, 2435, 5.647, 2436, 6.938,
        ],
      ],
      [
        'title/classes/UpdatePlantDiseaseKnowledgeDto.html',
        [73, 0.19, 1836, 3.428],
      ],
      [
        'body/classes/UpdatePlantDiseaseKnowledgeDto.html',
        [
          3, 0.037, 4, 0.033, 5, 0.03, 8, 0.104, 9, 0.595, 12, 2.271, 20, 0.43,
          21, 0.007, 23, 1.352, 30, 0.565, 35, 1.008, 62, 0.109, 72, 0.045, 73,
          0.151, 79, 0.003, 80, 0.003, 84, 1.551, 101, 1.299, 189, 0.57, 273,
          5.029, 665, 0.55, 678, 2.852, 680, 2.702, 684, 0.687, 696, 2.853, 708,
          5.472, 720, 3.702, 747, 1.905, 748, 3.911, 749, 3.911, 750, 3.911,
          751, 3.439, 752, 3.911, 753, 3.911, 754, 3.911, 755, 3.911, 756,
          3.911, 757, 3.911, 758, 3.911, 759, 3.911, 760, 3.911, 761, 3.911,
          762, 3.911, 763, 3.911, 764, 3.911, 765, 3.911, 766, 3.911, 767,
          3.911, 768, 3.911, 769, 3.911, 770, 3.911, 771, 3.911, 772, 3.911,
          773, 3.911, 781, 3.374, 787, 4.261, 788, 3.374, 790, 2.076, 791,
          3.374, 792, 3.374, 793, 3.374, 797, 3.374, 802, 3.374, 803, 3.374,
          810, 3.374, 812, 3.374, 813, 4.907, 1836, 2.723, 2437, 8.005, 2438,
          2.336, 2439, 2.336, 2440, 2.336, 2441, 2.336, 2442, 2.336, 2443,
          2.336, 2444, 2.336, 2445, 2.336, 2446, 2.336, 2447, 2.336, 2448,
          2.336, 2449, 2.336, 2450, 2.336, 2451, 2.336, 2452, 2.336, 2453,
          2.336, 2454, 2.336, 2455, 2.336, 2456, 2.336, 2457, 2.336, 2458,
          2.336, 2459, 2.336, 2460, 2.336, 2461, 2.336, 2462, 2.336, 2463,
          2.336,
        ],
      ],
      ['title/classes/UpdatePlantDto.html', [73, 0.19, 2116, 3.428]],
      [
        'body/classes/UpdatePlantDto.html',
        [
          3, 0.113, 4, 0.102, 5, 0.091, 21, 0.007, 62, 0.24, 72, 0.135, 73,
          0.283, 79, 0.006, 80, 0.006, 84, 1.222, 164, 3.492, 583, 4.355, 665,
          1.669, 814, 4.833, 816, 5.788, 2116, 5.984, 2118, 5.788, 2410, 6.307,
          2411, 5.788, 2412, 5.788, 2464, 6.307, 2465, 8.341,
        ],
      ],
      ['title/classes/UpdateProfileDto.html', [73, 0.19, 2466, 3.106]],
      [
        'body/classes/UpdateProfileDto.html',
        [
          3, 0.085, 4, 0.077, 5, 0.069, 8, 0.238, 9, 1.099, 12, 2.098, 14,
          1.089, 20, 0.397, 21, 0.007, 23, 1.249, 30, 0.522, 32, 1.23, 35,
          0.935, 62, 0.202, 72, 0.102, 73, 0.279, 79, 0.005, 80, 0.005, 84,
          1.48, 101, 1.244, 189, 1.31, 397, 2.218, 431, 1.65, 665, 1.263, 678,
          2.733, 680, 2.579, 684, 1.58, 688, 3.452, 696, 2.486, 720, 3.534, 843,
          5.946, 867, 5.321, 2172, 5.605, 2174, 6.373, 2175, 5.605, 2466, 4.559,
          2467, 7.012, 2468, 4.379, 2469, 4.771, 2470, 4.771, 2471, 4.771, 2472,
          4.771, 2473, 6.235, 2474, 4.771, 2475, 4.771, 2476, 4.771,
        ],
      ],
      [
        'title/classes/UpdateProfileDto-1.html',
        [73, 0.16, 431, 0.942, 2466, 2.604],
      ],
      [
        'body/classes/UpdateProfileDto-1.html',
        [
          3, 0.085, 4, 0.077, 5, 0.069, 8, 0.238, 9, 1.099, 12, 2.098, 14,
          1.089, 20, 0.397, 21, 0.007, 23, 1.249, 30, 0.522, 32, 1.23, 35,
          0.935, 62, 0.202, 72, 0.102, 73, 0.279, 79, 0.005, 80, 0.005, 101,
          1.244, 189, 1.31, 397, 2.218, 431, 1.65, 665, 1.263, 678, 2.733, 680,
          2.579, 684, 1.58, 688, 3.452, 696, 2.486, 720, 3.534, 826, 4.489, 843,
          5.946, 867, 5.321, 2172, 5.605, 2174, 6.373, 2175, 5.605, 2466, 4.559,
          2468, 4.379, 2469, 4.771, 2470, 4.771, 2471, 4.771, 2472, 4.771, 2473,
          6.235, 2474, 4.771, 2475, 4.771, 2476, 4.771, 2477, 7.012,
        ],
      ],
      ['title/classes/UpdateRoleDto.html', [73, 0.19, 2290, 2.976]],
      [
        'body/classes/UpdateRoleDto.html',
        [
          3, 0.092, 4, 0.083, 5, 0.074, 8, 0.257, 9, 1.153, 12, 2.278, 14,
          1.129, 20, 0.389, 21, 0.007, 23, 1.221, 30, 0.511, 35, 0.954, 62,
          0.212, 72, 0.11, 73, 0.293, 79, 0.005, 80, 0.005, 84, 1.468, 101,
          1.229, 189, 1.413, 665, 1.362, 678, 2.699, 680, 2.557, 684, 1.703,
          696, 2.712, 708, 5.043, 720, 3.504, 819, 4.153, 820, 5.516, 821,
          4.405, 822, 4.405, 824, 4.786, 825, 4.405, 2290, 4.586, 2478, 7.576,
        ],
      ],
      [
        'title/classes/UpdateRoleDto-1.html',
        [73, 0.16, 431, 0.942, 2290, 2.495],
      ],
      [
        'body/classes/UpdateRoleDto-1.html',
        [
          3, 0.092, 4, 0.083, 5, 0.074, 8, 0.257, 9, 1.153, 12, 2.278, 14,
          1.129, 20, 0.389, 21, 0.007, 23, 1.221, 30, 0.511, 35, 0.954, 62,
          0.212, 72, 0.11, 73, 0.293, 79, 0.005, 80, 0.005, 101, 1.229, 189,
          1.413, 665, 1.362, 678, 2.699, 680, 2.557, 684, 1.703, 696, 2.712,
          708, 5.043, 720, 3.504, 819, 4.153, 820, 5.516, 821, 4.405, 822,
          4.405, 824, 4.786, 825, 4.405, 826, 4.451, 2290, 4.586, 2479, 7.576,
        ],
      ],
      ['title/classes/UpdateUserDto.html', [73, 0.19, 2480, 3.106]],
      [
        'body/classes/UpdateUserDto.html',
        [
          3, 0.069, 4, 0.062, 5, 0.055, 8, 0.192, 9, 0.949, 12, 2.094, 20,
          0.416, 21, 0.007, 23, 1.247, 30, 0.521, 32, 1.063, 35, 0.877, 37,
          1.697, 49, 2.128, 62, 0.218, 72, 0.082, 73, 0.241, 79, 0.004, 80,
          0.004, 84, 1.462, 101, 1.243, 121, 1.961, 189, 1.055, 237, 3.347, 340,
          3.092, 397, 2.472, 431, 1.783, 537, 3.896, 571, 3.543, 591, 3.442,
          650, 2.748, 665, 1.017, 678, 2.676, 680, 2.547, 684, 1.272, 695,
          3.375, 696, 2.225, 700, 2.899, 719, 2.945, 720, 3.562, 725, 3.494,
          728, 2.945, 743, 2.494, 855, 2.81, 856, 5.448, 857, 3.291, 858, 4.611,
          859, 3.291, 860, 3.773, 861, 5.15, 862, 3.773, 863, 4.126, 864, 3.265,
          865, 3.291, 866, 3.527, 867, 2.945, 868, 3.527, 869, 3.938, 870,
          3.291, 871, 5.017, 872, 3.291, 873, 3.291, 874, 3.291, 875, 4.126,
          876, 4.346, 877, 4.611, 878, 3.291, 879, 3.291, 880, 2.81, 881, 3.773,
          882, 4.611, 883, 3.291, 2467, 6.927, 2480, 3.938,
        ],
      ],
      [
        'title/classes/UpdateUserDto-1.html',
        [73, 0.16, 431, 0.942, 2480, 2.604],
      ],
      [
        'body/classes/UpdateUserDto-1.html',
        [
          3, 0.069, 4, 0.062, 5, 0.055, 8, 0.192, 9, 0.949, 12, 2.094, 20,
          0.416, 21, 0.007, 23, 1.247, 30, 0.521, 32, 1.063, 35, 0.877, 37,
          1.697, 49, 2.128, 62, 0.218, 72, 0.082, 73, 0.241, 79, 0.004, 80,
          0.004, 101, 1.243, 121, 1.961, 189, 1.055, 237, 3.347, 340, 3.092,
          397, 2.472, 431, 1.783, 537, 3.896, 571, 3.543, 591, 3.442, 650,
          2.748, 665, 1.017, 678, 2.676, 680, 2.547, 684, 1.272, 695, 3.375,
          696, 2.225, 700, 2.899, 719, 2.945, 720, 3.562, 725, 3.494, 728,
          2.945, 743, 2.494, 826, 4.434, 855, 2.81, 856, 5.448, 857, 3.291, 858,
          4.611, 859, 3.291, 860, 3.773, 861, 5.15, 862, 3.773, 863, 4.126, 864,
          3.265, 865, 3.291, 866, 3.527, 867, 2.945, 868, 3.527, 869, 3.938,
          870, 3.291, 871, 5.017, 872, 3.291, 873, 3.291, 874, 3.291, 875,
          4.126, 876, 4.346, 877, 4.611, 878, 3.291, 879, 3.291, 880, 2.81, 881,
          3.773, 882, 4.611, 883, 3.291, 2477, 6.927, 2480, 3.938,
        ],
      ],
      ['title/classes/UploadChunkDto.html', [73, 0.19, 2481, 3.255]],
      [
        'body/classes/UploadChunkDto.html',
        [
          3, 0.108, 4, 0.097, 5, 0.087, 8, 0.301, 9, 1.272, 20, 0.417, 21,
          0.007, 30, 0.512, 32, 1.424, 35, 0.921, 72, 0.129, 73, 0.27, 79,
          0.006, 80, 0.006, 558, 3.336, 665, 1.595, 675, 5.159, 676, 4.863, 835,
          4.863, 2385, 5.202, 2481, 5.529, 2482, 6.614, 2483, 7.725, 2484,
          7.725, 2485, 6.779, 2486, 6.779, 2487, 5.53,
        ],
      ],
      [
        'title/classes/UploadChunkDto-1.html',
        [73, 0.16, 431, 0.942, 2481, 2.728],
      ],
      [
        'body/classes/UploadChunkDto-1.html',
        [
          3, 0.088, 4, 0.08, 5, 0.071, 8, 0.247, 9, 1.125, 12, 2.013, 13, 2.168,
          20, 0.427, 21, 0.007, 23, 1.198, 30, 0.501, 32, 1.473, 35, 0.922, 62,
          0.229, 72, 0.106, 73, 0.317, 79, 0.005, 80, 0.005, 189, 1.358, 397,
          2.328, 431, 1.976, 665, 1.309, 675, 4.235, 676, 5.703, 678, 2.671,
          679, 4.946, 680, 2.52, 681, 2.999, 682, 4.667, 683, 3.536, 684, 1.638,
          689, 4.027, 690, 4.539, 696, 2.284, 831, 4.585, 836, 4.539, 838,
          6.026, 839, 5.857, 2481, 4.89, 2487, 6.484, 2488, 7.466, 2489, 5.564,
          2490, 5.564, 2491, 5.564, 2492, 5.564, 2493, 5.564,
        ],
      ],
      ['title/controllers/UploadController.html', [157, 1.328, 2494, 3.898]],
      [
        'body/controllers/UploadController.html',
        [
          3, 0.067, 4, 0.06, 5, 0.054, 8, 0.187, 14, 1.142, 20, 0.426, 21,
          0.007, 23, 1.235, 30, 0.517, 35, 0.63, 62, 0.243, 72, 0.08, 73, 0.167,
          79, 0.004, 80, 0.004, 88, 1.323, 89, 2.658, 100, 1.859, 101, 1.12,
          107, 1.825, 113, 2.607, 123, 0.621, 141, 1.666, 157, 1.651, 159,
          1.392, 194, 1.813, 456, 3.429, 515, 1.364, 532, 4.033, 554, 4.906,
          558, 3.684, 560, 5.085, 567, 5.043, 676, 4.261, 1040, 4.261, 1359,
          3.429, 2384, 5.37, 2385, 5.043, 2481, 5.098, 2494, 4.845, 2495, 5.28,
          2496, 5.939, 2497, 5.28, 2498, 5.28, 2499, 5.28, 2500, 5.28, 2501,
          4.204, 2502, 5.939, 2503, 4.204, 2504, 4.204, 2505, 5.939, 2506,
          4.204, 2507, 4.204, 2508, 5.939, 2509, 4.204, 2510, 4.204, 2511,
          5.939, 2512, 4.204, 2513, 4.204, 2514, 5.697, 2515, 5.939, 2516,
          4.204, 2517, 4.204, 2518, 5.37, 2519, 5.939, 2520, 4.204, 2521, 4.941,
          2522, 3.737, 2523, 3.737, 2524, 6.122, 2525, 4.204, 2526, 4.204, 2527,
          3.737, 2528, 4.204, 2529, 4.204, 2530, 4.204, 2531, 3.737, 2532, 5.28,
          2533, 4.204, 2534, 4.204, 2535, 4.204, 2536, 4.204, 2537, 4.204, 2538,
          4.204, 2539, 4.204, 2540, 4.204, 2541, 4.204, 2542, 4.204, 2543,
          4.204, 2544, 4.204, 2545, 4.204, 2546, 4.204,
        ],
      ],
      ['title/classes/UploadPreloadDto.html', [73, 0.19, 2514, 3.637]],
      [
        'body/classes/UploadPreloadDto.html',
        [
          3, 0.107, 4, 0.096, 5, 0.086, 8, 0.299, 9, 1.266, 20, 0.416, 21,
          0.007, 30, 0.546, 32, 1.418, 35, 0.953, 72, 0.128, 73, 0.268, 79,
          0.006, 80, 0.006, 279, 3.253, 665, 1.583, 831, 4.997, 1306, 5.185,
          2385, 5.379, 2482, 6.839, 2514, 6.151, 2547, 5.981, 2548, 6.729, 2549,
          6.729, 2550, 6.729,
        ],
      ],
      ['title/injectables/UploadService.html', [81, 0.903, 2521, 3.428]],
      [
        'body/injectables/UploadService.html',
        [
          3, 0.033, 4, 0.03, 5, 0.09, 8, 0.092, 9, 0.54, 11, 3.178, 14, 0.908,
          18, 3.29, 20, 0.35, 21, 0.007, 27, 1.882, 28, 2.019, 30, 0.472, 32,
          1.241, 35, 0.853, 44, 0.702, 62, 0.225, 67, 0.732, 72, 0.066, 73,
          0.083, 79, 0.003, 80, 0.003, 81, 0.651, 83, 0.748, 88, 0.768, 89,
          2.381, 95, 1.189, 97, 2.865, 100, 1.478, 101, 0.89, 107, 1.37, 113,
          1.636, 121, 0.943, 123, 0.307, 124, 1.199, 125, 1.023, 131, 2.718,
          133, 2.435, 134, 3.103, 138, 2.394, 139, 2.115, 141, 1.387, 195,
          1.996, 279, 2.928, 397, 0.556, 399, 2.956, 419, 2.865, 431, 0.489,
          435, 5.468, 443, 0.995, 446, 3.885, 459, 2.813, 515, 0.675, 542,
          2.382, 558, 1.697, 634, 3.553, 660, 2.239, 663, 2.005, 676, 4.675,
          735, 2.219, 828, 1.582, 831, 4.318, 832, 3.69, 833, 3.998, 834, 3.901,
          835, 2.474, 1048, 2.813, 1135, 2.064, 1138, 1.582, 1139, 3.363, 1140,
          1.491, 1172, 2.813, 1232, 3.074, 1263, 3.605, 1265, 4.959, 1283,
          2.474, 1285, 4.236, 1286, 1.416, 1287, 2.349, 1288, 1.491, 1289,
          1.491, 1290, 1.416, 1291, 1.695, 1292, 1.491, 1293, 1.491, 1294,
          1.491, 1295, 1.491, 1296, 1.491, 1297, 1.695, 1298, 3.363, 1299,
          3.363, 1300, 3.363, 1301, 3.363, 1306, 4.082, 1307, 4.341, 1313,
          3.363, 1314, 3.363, 1315, 3.171, 1316, 3.363, 1370, 2.241, 1384,
          1.582, 1385, 4.572, 1396, 2.241, 1399, 1.416, 1401, 3.69, 1407, 3.928,
          1593, 5.018, 1610, 1.695, 1617, 1.695, 1618, 1.695, 1644, 1.847, 1668,
          1.695, 1669, 1.847, 1691, 3.928, 1697, 3.065, 2047, 3.065, 2192,
          4.438, 2212, 1.847, 2225, 5.316, 2366, 5.697, 2369, 3.065, 2384,
          4.093, 2385, 4.58, 2483, 4.572, 2484, 4.572, 2487, 3.605, 2495, 3.928,
          2497, 3.065, 2498, 3.065, 2499, 3.065, 2500, 3.928, 2518, 3.171, 2521,
          2.474, 2522, 1.847, 2523, 1.847, 2524, 1.847, 2527, 1.847, 2551,
          4.419, 2552, 4.419, 2553, 3.448, 2554, 3.448, 2555, 2.078, 2556,
          2.078, 2557, 3.448, 2558, 2.078, 2559, 3.448, 2560, 2.078, 2561,
          3.448, 2562, 2.078, 2563, 3.448, 2564, 2.078, 2565, 2.078, 2566,
          2.078, 2567, 5.143, 2568, 3.448, 2569, 2.078, 2570, 2.078, 2571,
          3.448, 2572, 2.078, 2573, 3.448, 2574, 2.078, 2575, 1.695, 2576,
          2.813, 2577, 2.078, 2578, 2.078, 2579, 3.448, 2580, 2.078, 2581,
          2.078, 2582, 2.078, 2583, 2.078, 2584, 2.078, 2585, 3.448, 2586,
          3.448, 2587, 2.078, 2588, 2.078, 2589, 2.078, 2590, 5.704, 2591,
          3.448, 2592, 4.419, 2593, 4.419, 2594, 4.419, 2595, 3.448, 2596,
          4.419, 2597, 2.078, 2598, 4.419, 2599, 2.078, 2600, 2.078, 2601,
          2.078, 2602, 2.078, 2603, 2.078, 2604, 2.078, 2605, 2.078, 2606,
          3.448, 2607, 2.078, 2608, 3.448, 2609, 2.078, 2610, 4.419, 2611,
          4.419, 2612, 3.448, 2613, 2.078, 2614, 2.078, 2615, 2.078, 2616,
          2.078, 2617, 2.078, 2618, 2.078, 2619, 3.448, 2620, 3.448, 2621,
          2.078, 2622, 2.078, 2623, 4.419, 2624, 3.448, 2625, 2.078, 2626,
          2.078, 2627, 3.448, 2628, 3.448, 2629, 3.448, 2630, 5.143, 2631,
          2.078, 2632, 2.078, 2633, 2.078,
        ],
      ],
      ['title/classes/UploadSingleDto.html', [73, 0.19, 2518, 3.428]],
      [
        'body/classes/UploadSingleDto.html',
        [
          3, 0.103, 4, 0.093, 5, 0.082, 8, 0.287, 9, 1.235, 20, 0.408, 21,
          0.007, 23, 1.283, 30, 0.537, 32, 1.383, 35, 0.836, 62, 0.186, 72,
          0.123, 73, 0.257, 79, 0.006, 80, 0.006, 189, 1.576, 279, 3.196, 665,
          1.52, 680, 2.808, 1370, 5.531, 1401, 6.105, 2385, 5.305, 2482, 6.745,
          2518, 5.656, 2634, 5.741, 2635, 6.458, 2636, 7.884, 2637, 6.458, 2638,
          6.458,
        ],
      ],
      ['title/entities/User.html', [0, 1.551, 595, 2.421]],
      [
        'body/entities/User.html',
        [
          0, 1.564, 2, 2.186, 3, 0.077, 4, 0.069, 5, 0.062, 8, 0.214, 9, 1.023,
          14, 0.672, 20, 0.437, 21, 0.007, 23, 1.289, 24, 3.798, 26, 4.277, 27,
          2.788, 28, 2.563, 30, 0.539, 35, 0.907, 36, 4.332, 37, 3.357, 38,
          4.332, 44, 2.682, 45, 3.132, 62, 0.229, 63, 3.969, 64, 5.325, 65,
          4.243, 67, 1.697, 72, 0.092, 73, 0.192, 79, 0.005, 80, 0.005, 237,
          3.543, 272, 6.04, 340, 3.274, 342, 4.332, 431, 1.536, 537, 4.124, 571,
          3.751, 583, 2.516, 591, 3.644, 595, 3.307, 650, 3.6, 664, 3.766, 856,
          5.397, 956, 3.132, 1432, 5.803, 2178, 5.803, 2185, 5.803, 2639, 4.284,
          2640, 4.819, 2641, 4.819, 2642, 4.819, 2643, 6.528, 2644, 4.819, 2645,
          4.819, 2646, 6.528, 2647, 4.819, 2648, 4.819, 2649, 4.819, 2650,
          4.819, 2651, 4.819, 2652, 4.819, 2653, 4.819,
        ],
      ],
      ['title/controllers/UserController.html', [157, 1.328, 2654, 3.255]],
      [
        'body/controllers/UserController.html',
        [
          3, 0.032, 4, 0.029, 5, 0.064, 8, 0.089, 13, 2.206, 14, 1.112, 20,
          0.355, 21, 0.007, 23, 1.142, 30, 0.478, 32, 1.451, 35, 0.804, 44,
          2.172, 62, 0.25, 72, 0.038, 73, 0.08, 79, 0.002, 80, 0.002, 84, 1.331,
          88, 0.749, 89, 2.578, 95, 0.695, 100, 1.681, 101, 1.012, 104, 2.231,
          107, 1.688, 113, 2.411, 123, 0.298, 126, 1.021, 129, 1.703, 131,
          0.681, 133, 2.148, 134, 2.556, 138, 1.235, 139, 2.086, 141, 1.571,
          157, 0.56, 159, 0.667, 162, 1.123, 171, 2.911, 175, 1.373, 178, 1.373,
          184, 3.235, 185, 1.939, 186, 2.841, 188, 1.939, 189, 0.492, 195,
          0.654, 279, 2.106, 292, 6.182, 320, 2.35, 321, 1.534, 323, 2.014, 340,
          0.891, 341, 1.373, 342, 1.021, 343, 1.31, 346, 1.021, 347, 1.163, 348,
          1.206, 349, 1.373, 350, 1.021, 351, 1.123, 352, 1.31, 353, 1.123, 354,
          3.82, 355, 3.82, 356, 1.446, 358, 1.206, 364, 4.126, 366, 1.206, 368,
          1.31, 370, 1.31, 373, 4.355, 374, 1.446, 375, 1.446, 379, 3.62, 380,
          3.62, 384, 1.373, 399, 1.525, 504, 3.766, 508, 5.639, 513, 1.086, 514,
          1.939, 515, 0.654, 517, 0.965, 518, 1.703, 520, 5.162, 521, 1.086,
          532, 3.73, 540, 1.792, 542, 3.629, 560, 4.504, 591, 2.483, 595, 1.021,
          620, 1.644, 637, 1.31, 638, 1.644, 639, 4.575, 643, 1.644, 660, 1.021,
          663, 0.914, 853, 4.177, 979, 3.938, 1000, 1.792, 1005, 3.28, 1008,
          4.575, 1010, 1.792, 1093, 1.792, 1124, 2.81, 1127, 2.988, 1128, 1.792,
          1129, 1.373, 1130, 1.644, 1131, 1.792, 1132, 1.644, 1133, 1.534, 1134,
          1.792, 1135, 1.206, 1136, 1.792, 1137, 1.644, 1138, 1.534, 1139,
          1.534, 1140, 1.446, 1141, 1.446, 1142, 2.988, 1143, 1.792, 1144,
          1.446, 1145, 1.792, 1159, 1.644, 1160, 1.534, 1180, 1.792, 1181,
          1.792, 1395, 1.644, 1396, 1.31, 1401, 1.446, 1529, 1.939, 1837, 1.534,
          1975, 1.644, 1980, 1.792, 1982, 1.644, 1984, 1.644, 1990, 5.242, 1993,
          4.942, 2172, 3.62, 2175, 3.62, 2267, 4.377, 2297, 5.713, 2299, 5.713,
          2432, 4.377, 2466, 4.377, 2480, 4.377, 2654, 2.289, 2655, 1.792, 2656,
          2.988, 2657, 4.486, 2658, 2.988, 2659, 3.843, 2660, 3.843, 2661,
          3.843, 2662, 2.988, 2663, 3.843, 2664, 3.843, 2665, 3.843, 2666,
          3.843, 2667, 3.843, 2668, 2.015, 2669, 5.608, 2670, 3.361, 2671,
          2.015, 2672, 3.361, 2673, 2.015, 2674, 2.015, 2675, 3.361, 2676,
          2.015, 2677, 2.015, 2678, 3.361, 2679, 2.015, 2680, 2.015, 2681,
          3.361, 2682, 2.015, 2683, 2.015, 2684, 2.015, 2685, 2.015, 2686,
          2.015, 2687, 2.015, 2688, 2.015, 2689, 2.015, 2690, 2.015, 2691,
          2.015, 2692, 2.015, 2693, 2.015, 2694, 2.015, 2695, 2.015, 2696,
          2.015, 2697, 2.015, 2698, 2.015, 2699, 2.015, 2700, 2.015, 2701,
          2.015, 2702, 1.792, 2703, 2.988, 2704, 2.988, 2705, 1.792, 2706,
          1.792, 2707, 2.015, 2708, 3.361, 2709, 2.015, 2710, 1.792, 2711,
          1.792, 2712, 3.361, 2713, 2.015, 2714, 2.015, 2715, 2.015, 2716,
          1.792, 2717, 2.015, 2718, 2.015, 2719, 3.361, 2720, 1.792, 2721,
          2.015, 2722, 2.015, 2723, 2.015, 2724, 1.792, 2725, 2.015, 2726,
          1.792, 2727, 2.015, 2728, 2.015, 2729, 2.015, 2730, 2.015, 2731,
          1.792, 2732, 2.015, 2733, 2.015, 2734, 4.324, 2735, 1.792, 2736,
          1.792, 2737, 1.792, 2738, 2.015, 2739, 2.015, 2740, 1.792,
        ],
      ],
      [
        'title/controllers/UserController-1.html',
        [157, 1.113, 431, 0.942, 2654, 2.728],
      ],
      [
        'body/controllers/UserController-1.html',
        [
          3, 0.038, 4, 0.034, 5, 0.03, 8, 0.106, 12, 0.603, 13, 1.673, 14,
          1.172, 20, 0.451, 21, 0.007, 23, 1.268, 30, 0.53, 32, 1.397, 35,
          0.788, 62, 0.207, 72, 0.045, 73, 0.095, 79, 0.003, 80, 0.003, 88,
          0.859, 89, 2.684, 100, 1.887, 101, 1.136, 104, 3.056, 107, 1.873, 113,
          2.676, 123, 0.352, 126, 1.207, 129, 1.954, 133, 0.662, 134, 1.33, 141,
          1.71, 157, 1.072, 159, 0.789, 194, 1.028, 195, 0.773, 237, 1.846, 279,
          2.304, 320, 1.11, 323, 1.11, 397, 1.033, 445, 1.484, 494, 1.623, 515,
          0.773, 532, 4.139, 537, 1.327, 554, 5.034, 558, 4.462, 560, 5.144,
          567, 5.085, 572, 2.767, 591, 1.898, 595, 1.207, 640, 3.428, 643,
          3.146, 648, 3.428, 826, 4.436, 853, 3.63, 856, 2.309, 1040, 2.767,
          1159, 1.944, 1401, 1.709, 1510, 2.118, 1511, 2.118, 2172, 1.709, 2175,
          1.709, 2267, 2.507, 2432, 2.507, 2466, 2.507, 2480, 2.507, 2531,
          2.118, 2532, 2.118, 2654, 2.627, 2656, 3.428, 2657, 4.964, 2658,
          3.428, 2659, 4.319, 2660, 4.319, 2661, 4.319, 2662, 3.428, 2663,
          3.428, 2664, 3.428, 2665, 4.319, 2666, 3.428, 2667, 3.428, 2702,
          2.118, 2703, 3.428, 2704, 3.428, 2705, 2.118, 2706, 2.118, 2710,
          3.428, 2711, 3.428, 2716, 3.428, 2720, 3.428, 2724, 3.428, 2726,
          3.428, 2731, 3.428, 2735, 3.428, 2736, 3.428, 2737, 3.428, 2740,
          3.428, 2741, 2.118, 2742, 3.857, 2743, 3.857, 2744, 3.857, 2745,
          3.857, 2746, 2.383, 2747, 2.383, 2748, 2.383, 2749, 2.383, 2750,
          2.383, 2751, 3.857, 2752, 2.383, 2753, 2.383, 2754, 2.383, 2755,
          2.383, 2756, 2.383, 2757, 2.383, 2758, 2.383, 2759, 2.383, 2760,
          2.383, 2761, 2.383, 2762, 2.383, 2763, 2.383, 2764, 2.383, 2765,
          3.857, 2766, 2.383, 2767, 2.383, 2768, 2.383, 2769, 2.383, 2770,
          2.383, 2771, 2.383, 2772, 2.383, 2773, 2.383, 2774, 2.383, 2775,
          2.383, 2776, 2.383, 2777, 2.383, 2778, 2.383, 2779, 3.964, 2780,
          2.383, 2781, 2.383, 2782, 2.383, 2783, 2.383, 2784, 2.383, 2785,
          2.383, 2786, 2.383, 2787, 2.383, 2788, 2.383, 2789, 2.383, 2790,
          2.383, 2791, 2.383, 2792, 2.383, 2793, 2.383, 2794, 2.383, 2795,
          2.383, 2796, 2.383, 2797, 2.383, 2798, 2.383, 2799, 2.383, 2800,
          2.383, 2801, 2.383, 2802, 2.383, 2803, 2.383, 2804, 2.383, 2805,
          2.383, 2806, 2.383, 2807, 2.383, 2808, 2.383, 2809, 2.383, 2810,
          2.383, 2811, 2.383,
        ],
      ],
      ['title/modules/UserModule.html', [205, 1.551, 2812, 3.637]],
      [
        'body/modules/UserModule.html',
        [
          3, 0.103, 4, 0.093, 5, 0.083, 12, 1.647, 14, 0.906, 21, 0.007, 62,
          0.256, 72, 0.124, 73, 0.259, 79, 0.006, 80, 0.006, 84, 1.12, 123,
          0.962, 159, 2.622, 205, 2.57, 207, 2.876, 412, 3.396, 515, 2.111, 517,
          3.113, 601, 4.43, 602, 5.393, 607, 4.43, 608, 4.43, 609, 4.43, 610,
          3.396, 611, 4.43, 612, 3.894, 637, 5.147, 2325, 6.026, 2654, 5.814,
          2812, 6.026, 2813, 6.504, 2814, 6.504,
        ],
      ],
      ['title/interfaces/UserPayload.html', [438, 2.168, 590, 3.255]],
      [
        'body/interfaces/UserPayload.html',
        [
          3, 0.098, 4, 0.088, 5, 0.079, 8, 0.273, 9, 1.199, 20, 0.4, 21, 0.007,
          32, 1.461, 35, 0.969, 62, 0.24, 72, 0.146, 73, 0.245, 79, 0.006, 80,
          0.006, 81, 1.446, 101, 1.045, 123, 0.91, 194, 2.654, 279, 3.272, 340,
          3.853, 346, 3.877, 438, 3.471, 440, 3.832, 472, 3.316, 504, 2.866,
          518, 3.117, 582, 4.683, 583, 3.213, 584, 5.019, 586, 5.187, 588,
          5.019, 589, 4.191, 590, 5.673, 591, 4.288, 592, 3.999, 593, 3.683,
          594, 3.999, 595, 3.117, 596, 4.683,
        ],
      ],
      ['title/interfaces/UserQuery.html', [438, 2.168, 2815, 3.428]],
      [
        'body/interfaces/UserQuery.html',
        [
          3, 0.108, 4, 0.097, 5, 0.087, 8, 0.301, 9, 1.272, 20, 0.417, 21,
          0.007, 32, 1.64, 35, 0.921, 79, 0.006, 80, 0.006, 84, 1.167, 101,
          1.231, 320, 4.195, 323, 4.195, 438, 3.075, 440, 4.222, 591, 4.433,
          855, 4.406, 2815, 5.824, 2816, 6.026,
        ],
      ],
      [
        'title/interfaces/UserQuery-1.html',
        [431, 0.942, 438, 1.817, 2815, 2.874],
      ],
      [
        'body/interfaces/UserQuery-1.html',
        [
          3, 0.108, 4, 0.097, 5, 0.087, 8, 0.301, 9, 1.272, 20, 0.417, 21,
          0.007, 32, 1.64, 35, 0.921, 79, 0.006, 80, 0.006, 101, 1.231, 320,
          4.195, 323, 4.195, 438, 3.075, 440, 4.222, 591, 4.433, 826, 3.54, 855,
          4.406, 2815, 5.824, 2817, 6.026,
        ],
      ],
      ['title/coverage.html', [2818, 5.295]],
      [
        'body/coverage.html',
        [
          0, 2.503, 1, 1.098, 5, 0.049, 6, 3.44, 7, 1.502, 20, 0.343, 21, 0.007,
          43, 1.098, 52, 1.67, 53, 2.281, 69, 2.562, 73, 0.37, 79, 0.002, 80,
          0.002, 81, 1.622, 82, 1.151, 84, 1.602, 85, 3.499, 86, 2.362, 87,
          1.502, 105, 1.212, 109, 1.151, 118, 1.286, 120, 1.098, 139, 0.548,
          157, 2.272, 158, 1.286, 160, 2.203, 161, 1.502, 170, 1.151, 181,
          1.212, 190, 1.151, 211, 2.993, 221, 1.502, 231, 2.573, 239, 1.151,
          245, 1.151, 266, 0.941, 274, 2.362, 293, 1.502, 303, 1.286, 304,
          1.378, 305, 1.502, 312, 1.212, 334, 1.212, 340, 0.747, 342, 0.856,
          344, 1.098, 346, 0.856, 348, 1.011, 350, 0.856, 362, 1.151, 414,
          1.502, 438, 2.827, 439, 1.286, 441, 2.362, 447, 1.378, 448, 1.502,
          455, 1.212, 468, 3.594, 486, 1.502, 490, 1.972, 491, 1.502, 500,
          1.882, 504, 1.769, 505, 1.882, 516, 1.151, 524, 1.378, 552, 1.502,
          568, 1.212, 582, 2.891, 590, 1.151, 595, 0.856, 599, 1.212, 604,
          1.286, 613, 1.502, 619, 1.151, 637, 1.098, 650, 4.458, 664, 0.974,
          666, 1.502, 673, 1.378, 674, 1.502, 675, 2.891, 685, 1.286, 686, 3.23,
          687, 2.362, 697, 2.362, 705, 1.502, 706, 2.362, 707, 2.362, 721,
          1.151, 722, 1.378, 723, 2.362, 745, 1.212, 746, 1.502, 747, 2.362,
          814, 1.151, 815, 1.502, 816, 2.362, 817, 1.803, 818, 1.502, 819, 3.23,
          820, 4.741, 826, 3.818, 827, 1.502, 828, 1.286, 829, 2.362, 830,
          1.502, 849, 1.378, 850, 1.502, 853, 1.882, 854, 1.502, 855, 3.59, 856,
          1.011, 876, 1.212, 884, 1.502, 887, 1.378, 888, 1.502, 889, 2.891,
          942, 1.378, 943, 1.502, 944, 1.882, 945, 2.573, 963, 1.972, 964,
          1.502, 987, 1.151, 993, 1.286, 996, 1.011, 1018, 3.449, 1019, 1.502,
          1030, 1.212, 1044, 1.286, 1046, 1.502, 1059, 1.378, 1101, 1.972, 1102,
          1.502, 1129, 1.151, 1141, 1.212, 1144, 1.212, 1146, 1.512, 1149,
          1.733, 1192, 3.633, 1193, 1.502, 1225, 2.804, 1226, 2.573, 1227,
          3.672, 1243, 2.573, 1262, 1.502, 1346, 1.502, 1356, 1.378, 1357,
          1.378, 1358, 2.891, 1359, 2.362, 1368, 2.077, 1375, 1.378, 1376,
          1.502, 1377, 2.891, 1384, 2.891, 1428, 2.573, 1449, 2.203, 1450,
          1.502, 1491, 1.151, 1492, 1.151, 1495, 1.212, 1518, 2.891, 1519,
          1.286, 1521, 2.891, 1531, 1.972, 1545, 1.378, 1546, 1.378, 1547,
          1.378, 1548, 1.378, 1559, 1.378, 1560, 1.378, 1562, 2.362, 1643,
          1.502, 1667, 1.378, 1747, 2.362, 1748, 1.502, 1754, 1.378, 1762,
          1.502, 1769, 1.286, 1770, 2.891, 1780, 1.378, 1781, 1.502, 1794,
          1.378, 1795, 1.502, 1796, 1.502, 1799, 1.502, 1816, 1.286, 1817,
          1.502, 1836, 1.212, 1840, 1.151, 1859, 2.077, 1862, 1.502, 1888,
          1.502, 1903, 1.502, 1913, 1.502, 1943, 1.151, 1944, 1.502, 1966,
          1.972, 1967, 1.502, 1999, 1.502, 2012, 1.212, 2029, 1.502, 2067,
          1.378, 2068, 1.502, 2076, 1.378, 2077, 1.502, 2088, 1.378, 2089,
          1.502, 2097, 1.502, 2098, 1.502, 2103, 1.502, 2109, 1.286, 2110,
          1.502, 2116, 1.212, 2119, 1.151, 2127, 2.573, 2165, 1.502, 2171,
          1.502, 2192, 1.151, 2195, 1.502, 2219, 5.251, 2260, 1.502, 2264,
          1.502, 2267, 1.882, 2268, 1.502, 2269, 3.23, 2271, 1.502, 2272, 1.502,
          2279, 1.972, 2280, 1.502, 2290, 1.803, 2303, 1.502, 2315, 1.212, 2325,
          1.286, 2327, 1.502, 2351, 1.502, 2358, 1.378, 2366, 1.286, 2367,
          1.502, 2384, 1.212, 2385, 3.73, 2386, 1.502, 2387, 1.502, 2394, 1.502,
          2406, 2.362, 2408, 1.502, 2417, 2.362, 2432, 1.882, 2433, 1.502, 2436,
          1.502, 2437, 1.502, 2464, 1.502, 2466, 1.882, 2467, 2.362, 2468,
          2.362, 2477, 2.362, 2478, 1.502, 2479, 1.502, 2480, 1.882, 2481,
          1.972, 2482, 2.891, 2488, 1.502, 2494, 1.378, 2514, 1.286, 2518,
          1.212, 2521, 1.212, 2547, 1.502, 2575, 1.378, 2576, 1.378, 2634,
          1.502, 2639, 1.502, 2654, 1.972, 2655, 1.502, 2741, 1.502, 2779,
          1.378, 2815, 2.077, 2816, 1.502, 2817, 1.502, 2818, 1.378, 2819,
          1.502, 2820, 1.689, 2821, 1.689, 2822, 1.502, 2823, 9.396, 2824, 6.96,
          2825, 3.799, 2826, 7.821, 2827, 8.247, 2828, 7.821, 2829, 3.799, 2830,
          3.799, 2831, 4.502, 2832, 2.895, 2833, 1.689, 2834, 1.689, 2835,
          1.689, 2836, 2.895, 2837, 1.689, 2838, 7.821, 2839, 2.895, 2840, 4.91,
          2841, 1.689, 2842, 1.689, 2843, 1.689, 2844, 1.689, 2845, 1.689, 2846,
          1.689, 2847, 1.689, 2848, 7.041, 2849, 8.488, 2850, 1.502, 2851,
          1.502, 2852, 1.502, 2853, 1.502, 2854, 1.502, 2855, 1.502, 2856,
          1.502, 2857, 1.502, 2858, 1.689, 2859, 1.689, 2860, 1.689, 2861,
          1.689, 2862, 2.573, 2863, 1.502, 2864, 5.309, 2865, 1.502, 2866,
          1.502, 2867, 1.502, 2868, 1.502, 2869, 1.502, 2870, 1.378, 2871,
          1.502, 2872, 1.502, 2873, 2.573, 2874, 1.502, 2875, 1.689, 2876,
          1.689,
        ],
      ],
      ['title/dependencies.html', [208, 2.907, 2877, 3.56]],
      [
        'body/dependencies.html',
        [
          21, 0.007, 67, 2.047, 73, 0.294, 79, 0.005, 80, 0.005, 123, 0.859,
          125, 2.861, 189, 1.419, 208, 2.945, 472, 3.133, 474, 5.167, 475,
          5.167, 515, 1.886, 518, 3.741, 521, 3.133, 589, 3.959, 622, 4.742,
          633, 4.742, 636, 5.167, 681, 3.133, 684, 1.711, 1132, 4.742, 1137,
          4.742, 1140, 4.17, 1282, 4.742, 1393, 5.167, 1808, 5.167, 1922, 5.167,
          2079, 4.742, 2196, 5.167, 2225, 4.742, 2233, 5.167, 2357, 5.167, 2411,
          4.742, 2412, 4.742, 2878, 5.813, 2879, 5.167, 2880, 5.813, 2881,
          5.813, 2882, 5.813, 2883, 5.813, 2884, 5.813, 2885, 8.114, 2886,
          5.813, 2887, 8.114, 2888, 5.813, 2889, 7.383, 2890, 5.813, 2891,
          5.813, 2892, 5.813, 2893, 5.813, 2894, 5.813, 2895, 5.813, 2896,
          5.813, 2897, 5.813, 2898, 7.383, 2899, 5.813, 2900, 5.813, 2901,
          5.813, 2902, 5.813, 2903, 5.813, 2904, 5.813, 2905, 5.813, 2906,
          5.813, 2907, 5.813, 2908, 5.813, 2909, 5.813, 2910, 5.813, 2911,
          5.813, 2912, 5.813, 2913, 5.813, 2914, 5.813, 2915, 5.813, 2916,
          5.813, 2917, 5.813, 2918, 5.813,
        ],
      ],
      ['title/miscellaneous/enumerations.html', [2919, 2.495, 2920, 5.101]],
      [
        'body/miscellaneous/enumerations.html',
        [
          8, 0.12, 21, 0.007, 79, 0.003, 80, 0.003, 237, 2.045, 248, 2.661, 257,
          2.061, 258, 2.061, 342, 2.165, 431, 0.637, 595, 2.165, 735, 4.281,
          824, 2.777, 846, 3.252, 871, 3.066, 924, 2.91, 1129, 2.91, 1230, 3.44,
          1237, 3.252, 1411, 4.317, 1552, 3.798, 1740, 3.486, 1741, 3.252, 1743,
          3.486, 1919, 3.798, 2879, 3.798, 2919, 1.687, 2920, 2.408, 2921,
          3.486, 2922, 7.759, 2923, 4.273, 2924, 4.273, 2925, 4.273, 2926,
          3.798, 2927, 4.273, 2928, 2.708, 2929, 2.708, 2930, 2.708, 2931,
          4.273, 2932, 2.708, 2933, 4.273, 2934, 6.897, 2935, 4.273, 2936,
          6.008, 2937, 4.273, 2938, 4.273, 2939, 3.798, 2940, 3.798, 2941,
          3.798, 2942, 3.798, 2943, 3.798, 2944, 3.798, 2945, 3.798, 2946,
          3.798, 2947, 3.798, 2948, 3.798, 2949, 3.798, 2950, 4.273, 2951,
          4.273, 2952, 6.008, 2953, 4.273, 2954, 6.008, 2955, 4.273, 2956,
          4.273, 2957, 4.704, 2958, 5.292, 2959, 5.292, 2960, 6.177, 2961,
          5.341, 2962, 3.798, 2963, 3.798, 2964, 3.798, 2965, 4.273, 2966,
          3.798, 2967, 4.273, 2968, 6.177, 2969, 3.798, 2970, 4.273, 2971,
          5.341, 2972, 3.798, 2973, 4.273, 2974, 3.798, 2975, 4.273, 2976,
          3.798, 2977, 4.273, 2978, 3.798, 2979, 4.273, 2980, 4.273, 2981,
          4.273, 2982, 4.273, 2983, 3.798, 2984, 3.798, 2985, 4.704, 2986,
          4.704, 2987, 4.704, 2988, 3.798, 2989, 4.273, 2990, 3.798, 2991,
          4.273, 2992, 3.798, 2993, 3.798, 2994, 3.798, 2995, 3.798, 2996,
          3.798, 2997, 3.798, 2998, 3.798, 2999, 3.798, 3000, 3.798, 3001,
          3.798, 3002, 3.798, 3003, 3.798, 3004, 3.798, 3005, 3.798, 3006,
          3.798, 3007, 4.317, 3008, 4.704, 3009, 4.273, 3010, 4.273, 3011,
          4.273, 3012, 4.273, 3013, 3.798, 3014, 3.798, 3015, 3.798, 3016,
          6.702, 3017, 3.798, 3018, 4.273, 3019, 3.798, 3020, 6.008, 3021,
          4.273, 3022, 4.273, 3023, 6.008, 3024, 3.798, 3025, 3.798, 3026,
          2.708, 3027, 3.798, 3028, 3.798, 3029, 3.798, 3030, 4.273, 3031,
          3.798, 3032, 2.708, 3033, 4.273, 3034, 4.273, 3035, 4.273, 3036,
          4.273, 3037, 2.708, 3038, 4.273, 3039, 4.273, 3040, 4.273, 3041,
          4.273, 3042, 4.273, 3043, 4.273, 3044, 4.273, 3045, 4.273, 3046,
          4.273, 3047, 4.273, 3048, 4.273, 3049, 4.273, 3050, 4.273, 3051,
          4.273, 3052, 4.273, 3053, 4.273, 3054, 4.273, 3055, 4.273, 3056,
          4.273, 3057, 2.708, 3058, 4.273, 3059, 2.708, 3060, 4.273, 3061,
          4.273, 3062, 4.273, 3063, 2.708,
        ],
      ],
      ['title/miscellaneous/functions.html', [2919, 2.495, 3064, 5.101]],
      [
        'body/miscellaneous/functions.html',
        [
          8, 0.302, 21, 0.006, 79, 0.006, 80, 0.006, 84, 1.17, 211, 5.009, 468,
          3.92, 826, 3.548, 1018, 4.629, 1192, 4.875, 1358, 5.172, 2385, 4.068,
          2822, 6.041, 2840, 8.315, 2919, 4.232, 3064, 6.041, 3065, 9.456,
        ],
      ],
      ['title/index.html', [8, 0.178, 3066, 4.005, 3067, 4.005]],
      [
        'body/index.html',
        [
          4, 0.066, 12, 1.159, 21, 0.007, 79, 0.005, 80, 0.005, 97, 2.55, 218,
          4.396, 229, 3.733, 433, 3.483, 453, 5.602, 678, 2.33, 901, 3.733, 940,
          4.068, 1319, 4.797, 1395, 3.733, 1741, 3.483, 2209, 3.483, 2235,
          4.068, 2818, 3.733, 2819, 5.602, 2921, 6.867, 3068, 4.577, 3069,
          4.577, 3070, 7.208, 3071, 6.302, 3072, 4.577, 3073, 4.577, 3074,
          4.577, 3075, 6.302, 3076, 7.208, 3077, 4.577, 3078, 4.577, 3079,
          7.766, 3080, 4.577, 3081, 8.787, 3082, 4.577, 3083, 8.625, 3084,
          4.577, 3085, 4.577, 3086, 4.577, 3087, 6.302, 3088, 4.577, 3089,
          7.208, 3090, 4.068, 3091, 4.577, 3092, 4.577, 3093, 4.577, 3094,
          4.577, 3095, 4.577, 3096, 7.766, 3097, 8.787, 3098, 6.302, 3099,
          4.577, 3100, 4.577, 3101, 4.577, 3102, 4.577, 3103, 8.418, 3104,
          6.302, 3105, 7.766, 3106, 4.577, 3107, 6.302, 3108, 4.577, 3109,
          4.577, 3110, 6.302, 3111, 8.418, 3112, 7.766, 3113, 4.577, 3114,
          6.302, 3115, 4.577, 3116, 4.577, 3117, 4.577, 3118, 4.577, 3119,
          7.766, 3120, 4.577, 3121, 4.577, 3122, 4.577, 3123, 6.302, 3124,
          4.577, 3125, 4.577, 3126, 4.577, 3127, 4.577, 3128, 4.577, 3129,
          6.302, 3130, 4.577, 3131, 4.577, 3132, 4.577, 3133, 6.302, 3134,
          4.577, 3135, 4.577, 3136, 6.904, 3137, 6.302, 3138, 4.577, 3139,
          4.577, 3140, 4.577, 3141, 4.577, 3142, 4.577, 3143, 4.577, 3144,
          4.577, 3145, 6.302, 3146, 4.577, 3147, 4.068, 3148, 4.577, 3149,
          4.577, 3150, 7.208, 3151, 4.577, 3152, 4.577, 3153, 4.577, 3154,
          4.577, 3155, 4.577, 3156, 4.577, 3157, 6.302, 3158, 4.577, 3159,
          4.577, 3160, 4.577, 3161, 4.577, 3162, 6.302, 3163, 4.577, 3164,
          4.577, 3165, 4.577, 3166, 6.302, 3167, 6.302, 3168, 4.577, 3169,
          4.577, 3170, 4.577, 3171, 4.577, 3172, 4.577, 3173, 4.577, 3174,
          4.577, 3175, 4.577, 3176, 4.577, 3177, 4.577, 3178, 4.068, 3179,
          4.577, 3180, 4.577, 3181, 4.577, 3182, 4.577, 3183, 4.577, 3184,
          4.577, 3185, 4.068,
        ],
      ],
      ['title/modules.html', [207, 2.87]],
      [
        'body/modules.html',
        [
          21, 0.005, 79, 0.005, 80, 0.005, 206, 4.209, 207, 2.446, 406, 4.209,
          462, 6.884, 465, 5.131, 466, 3.968, 467, 5.131, 1042, 5.443, 1253,
          5.443, 1257, 5.131, 1555, 4.209, 1854, 4.209, 1906, 4.209, 2160,
          4.209, 2188, 4.209, 2323, 5.443, 2812, 5.443, 3007, 7.924, 3136,
          8.635, 3147, 8.234, 3186, 9.714, 3187, 9.835, 3188, 9.263,
        ],
      ],
      ['title/overview.html', [3189, 5.77]],
      [
        'body/overview.html',
        [
          2, 1.684, 21, 0.007, 79, 0.004, 80, 0.004, 82, 4.375, 83, 1.335, 159,
          1.229, 190, 4.375, 205, 1.205, 206, 5.725, 207, 1.642, 208, 1.881,
          209, 2.001, 210, 2.001, 211, 1.881, 212, 2.001, 213, 1.939, 214, 3.3,
          215, 3.3, 216, 2.927, 217, 2.001, 218, 1.939, 362, 4.375, 406, 6.178,
          407, 3.3, 408, 3.3, 440, 2.312, 455, 4.609, 462, 7.491, 463, 3.3, 464,
          3.3, 465, 6.19, 466, 6.346, 467, 5.638, 568, 4.609, 597, 3.3, 598,
          3.3, 599, 4.609, 619, 5.528, 665, 0.874, 744, 2.312, 1030, 4.609,
          1042, 5.98, 1146, 4.506, 1149, 4.231, 1179, 3.3, 1253, 6.855, 1254,
          3.3, 1255, 3.3, 1256, 3.3, 1257, 6.462, 1368, 4.609, 1495, 4.609,
          1520, 2.826, 1540, 3.3, 1541, 3.3, 1542, 3.3, 1555, 6.178, 1840,
          4.375, 1854, 5.725, 1855, 3.3, 1856, 3.3, 1902, 3.029, 1906, 6.461,
          1907, 3.3, 1908, 3.3, 1909, 3.3, 2012, 4.609, 2119, 4.375, 2160,
          5.725, 2161, 3.3, 2162, 3.3, 2188, 5.98, 2189, 3.3, 2190, 3.3, 2191,
          3.3, 2192, 5.528, 2315, 4.609, 2323, 5.98, 2521, 4.609, 2779, 6.621,
          2812, 6.178, 3189, 3.3, 3190, 3.713, 3191, 3.713, 3192, 3.713, 3193,
          3.713, 3194, 3.713, 3195, 3.713, 3196, 3.713, 3197, 3.713, 3198,
          3.713, 3199, 3.713, 3200, 3.713, 3201, 3.713, 3202, 3.713, 3203,
          3.713, 3204, 3.713,
        ],
      ],
      ['title/properties.html', [9, 0.899, 2877, 3.56]],
      [
        'body/properties.html',
        [
          9, 1.163, 12, 1.88, 19, 5.649, 21, 0.007, 79, 0.006, 80, 0.006, 3178,
          6.598, 3185, 6.598, 3205, 7.423, 3206, 7.423,
        ],
      ],
      ['title/miscellaneous/typealiases.html', [2919, 2.495, 3207, 5.739]],
      [
        'body/miscellaneous/typealiases.html',
        [
          8, 0.291, 20, 0.315, 21, 0.007, 79, 0.006, 80, 0.006, 84, 1.371, 504,
          3.709, 1384, 4.998, 1521, 4.998, 1531, 6.07, 1770, 4.998, 2385, 3.931,
          2576, 6.497, 2864, 5.357, 2865, 7.62, 2866, 7.62, 2867, 7.62, 2868,
          7.62, 2869, 7.62, 2870, 6.497, 2871, 7.62, 2872, 7.62, 2919, 4.09,
          3208, 6.567, 3209, 8.424, 3210, 6.567, 3211, 6.567, 3212, 6.567,
        ],
      ],
      ['title/miscellaneous/variables.html', [2919, 2.495, 3213, 5.101]],
      [
        'body/miscellaneous/variables.html',
        [
          8, 0.115, 20, 0.427, 21, 0.007, 28, 3.6, 32, 1.471, 35, 0.889, 44,
          1.399, 79, 0.003, 80, 0.003, 133, 1.899, 138, 1.521, 139, 1.344, 141,
          1.658, 163, 6.383, 184, 1.501, 250, 2.579, 340, 2.836, 342, 1.319,
          350, 2.098, 397, 1.109, 399, 1.878, 439, 1.981, 441, 2.123, 442,
          2.388, 443, 1.981, 444, 2.123, 445, 1.621, 446, 1.773, 516, 2.82, 524,
          3.377, 604, 3.151, 637, 2.691, 650, 2.91, 735, 3.992, 740, 1.501, 844,
          6.404, 846, 1.981, 996, 2.478, 1044, 3.151, 1079, 3.68, 1129, 2.82,
          1230, 1.692, 1290, 2.82, 1336, 2.123, 1411, 3.377, 1545, 3.377, 1546,
          3.377, 1547, 3.377, 1548, 3.377, 1667, 3.377, 1740, 3.377, 1741,
          3.151, 1742, 2.314, 1743, 3.377, 1754, 3.377, 2209, 1.981, 2325,
          3.151, 2358, 3.377, 2575, 3.377, 2848, 2.314, 2850, 3.68, 2851, 3.68,
          2852, 3.68, 2853, 3.68, 2854, 3.68, 2855, 3.68, 2856, 3.68, 2857,
          3.68, 2862, 2.314, 2863, 2.314, 2864, 2.123, 2870, 2.123, 2873, 2.314,
          2874, 2.314, 2919, 1.621, 2921, 3.377, 2926, 4.583, 2934, 6.071, 2939,
          2.314, 2940, 2.314, 2941, 2.314, 2942, 2.314, 2943, 2.314, 2944, 3.68,
          2945, 2.314, 2946, 2.314, 2947, 2.314, 2948, 2.314, 2949, 2.314, 2957,
          2.314, 2960, 3.68, 2961, 3.68, 2962, 4.583, 2963, 2.314, 2964, 2.314,
          2966, 2.314, 2968, 4.583, 2969, 2.314, 2971, 3.68, 2972, 3.68, 2974,
          2.314, 2976, 3.68, 2978, 2.314, 2983, 2.314, 2984, 2.314, 2985, 2.314,
          2986, 2.314, 2987, 2.314, 2988, 2.314, 2990, 2.314, 2992, 3.68, 2993,
          2.314, 2994, 2.314, 2995, 2.314, 2996, 2.314, 2997, 2.314, 2998,
          2.314, 2999, 2.314, 3000, 2.314, 3001, 2.314, 3002, 2.314, 3003,
          2.314, 3004, 2.314, 3005, 2.314, 3006, 2.314, 3007, 2.123, 3008,
          2.314, 3013, 2.314, 3014, 2.314, 3015, 2.314, 3016, 2.314, 3017,
          2.314, 3019, 2.314, 3024, 3.68, 3025, 2.314, 3027, 2.314, 3028, 2.314,
          3029, 2.314, 3031, 2.314, 3090, 4.583, 3209, 4.583, 3213, 2.314, 3214,
          8.718, 3215, 2.603, 3216, 2.603, 3217, 4.14, 3218, 2.603, 3219, 2.603,
          3220, 2.603, 3221, 2.603, 3222, 2.603, 3223, 2.603, 3224, 2.603, 3225,
          2.603, 3226, 2.603, 3227, 2.603, 3228, 2.603, 3229, 2.603, 3230,
          2.603, 3231, 2.603, 3232, 2.603, 3233, 2.603, 3234, 2.603, 3235,
          2.603, 3236, 2.603, 3237, 4.14, 3238, 7.66, 3239, 2.603, 3240, 2.603,
          3241, 2.603, 3242, 2.603, 3243, 2.603, 3244, 2.603, 3245, 2.603, 3246,
          2.603, 3247, 2.603, 3248, 5.155, 3249, 2.603, 3250, 2.603, 3251,
          5.155, 3252, 2.603, 3253, 4.14, 3254, 4.14, 3255, 2.603, 3256, 4.14,
          3257, 5.155, 3258, 4.14, 3259, 2.603, 3260, 4.14, 3261, 2.603, 3262,
          4.14, 3263, 2.603, 3264, 4.14, 3265, 2.603, 3266, 2.603, 3267, 2.603,
          3268, 2.603, 3269, 2.603, 3270, 2.603, 3271, 2.603, 3272, 2.603, 3273,
          2.603, 3274, 2.603, 3275, 2.603, 3276, 2.603, 3277, 2.603, 3278,
          2.603, 3279, 2.603, 3280, 2.603, 3281, 2.603, 3282, 2.603, 3283, 4.14,
          3284, 4.14, 3285, 2.603, 3286, 2.603, 3287, 2.603, 3288, 5.155, 3289,
          2.603, 3290, 2.603, 3291, 4.14, 3292, 2.603, 3293, 2.603, 3294, 2.603,
          3295, 2.603, 3296, 4.14, 3297, 2.603, 3298, 2.603, 3299, 2.603, 3300,
          4.14, 3301, 4.14, 3302, 4.14, 3303, 4.14, 3304, 2.603, 3305, 2.603,
          3306, 2.603, 3307, 2.603, 3308, 2.603, 3309, 4.14, 3310, 6.414, 3311,
          2.603, 3312, 2.603, 3313, 4.14, 3314, 2.603, 3315, 2.603, 3316, 2.603,
          3317, 5.155, 3318, 4.14, 3319, 2.603, 3320, 2.603, 3321, 2.603, 3322,
          2.603, 3323, 2.603, 3324, 2.603, 3325, 2.603, 3326, 2.603, 3327, 4.14,
          3328, 2.603, 3329, 2.603, 3330, 2.603, 3331, 2.603, 3332, 2.603, 3333,
          2.603, 3334, 4.14, 3335, 2.603, 3336, 2.603, 3337, 2.603, 3338, 2.603,
          3339, 2.603, 3340, 2.603,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 21,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 650,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'entities/Menu.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-2.html': {},
            'entities/Task.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '0..0',
        {
          _index: 1242,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      ['0.0.1', { _index: 3205, title: {}, body: { 'properties.html': {} } }],
      [
        '0.1',
        {
          _index: 3332,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '0.14.1',
        { _index: 2903, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0.2.2', { _index: 2915, title: {}, body: { 'dependencies.html': {} } }],
      [
        '0.3.20',
        { _index: 2917, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0.5.1', { _index: 2902, title: {}, body: { 'dependencies.html': {} } }],
      [
        '0.7.13',
        { _index: 2883, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['0/1', { _index: 2823, title: {}, body: { 'coverage.html': {} } }],
      ['0/11', { _index: 2841, title: {}, body: { 'coverage.html': {} } }],
      ['0/12', { _index: 2825, title: {}, body: { 'coverage.html': {} } }],
      ['0/13', { _index: 2839, title: {}, body: { 'coverage.html': {} } }],
      ['0/17', { _index: 2833, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 2827, title: {}, body: { 'coverage.html': {} } }],
      ['0/27', { _index: 2836, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 2826, title: {}, body: { 'coverage.html': {} } }],
      ['0/30', { _index: 2837, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 2838, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 2830, title: {}, body: { 'coverage.html': {} } }],
      ['0/6', { _index: 2824, title: {}, body: { 'coverage.html': {} } }],
      ['0/7', { _index: 2828, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 2829, title: {}, body: { 'coverage.html': {} } }],
      ['0/9', { _index: 2831, title: {}, body: { 'coverage.html': {} } }],
      [
        '01',
        {
          _index: 793,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        '01110',
        {
          _index: 781,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        '06',
        {
          _index: 792,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        '1',
        {
          _index: 431,
          title: {
            'controllers/AuthController-1.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateUserDto-1.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileOperationService-1.html': {},
            'classes/LoginDto-1.html': {},
            'controllers/MenuController-1.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request-1.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'controllers/RoleController-1.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserQuery-1.html': {},
          },
          body: {
            'injectables/AiServiceService.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'entities/File.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/RedisService.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'injectables/UploadService.html': {},
            'entities/User.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        "1'})@apiproperty({description",
        {
          _index: 873,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        '1.13.0',
        { _index: 2880, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['1.4.5', { _index: 2906, title: {}, body: { 'dependencies.html': {} } }],
      ['1.8.2', { _index: 2896, title: {}, body: { 'dependencies.html': {} } }],
      ['1/17', { _index: 2844, title: {}, body: { 'coverage.html': {} } }],
      ['1/23', { _index: 2847, title: {}, body: { 'coverage.html': {} } }],
      [
        '10',
        {
          _index: 740,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/RedisService.html': {},
            'classes/UpdateDatasetDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['10/12', { _index: 2843, title: {}, body: { 'coverage.html': {} } }],
      [
        '100',
        {
          _index: 255,
          title: {},
          body: {
            'entities/AiService.html': {},
            'entities/File.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/RedisService.html': {},
          },
        },
      ],
      [
        '100ms',
        {
          _index: 2213,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        '100vh',
        {
          _index: 3321,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '1024',
        {
          _index: 844,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '11.0.0',
        { _index: 2889, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '11.0.1',
        { _index: 2887, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '11.0.11',
        { _index: 2891, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '11.0.5',
        { _index: 2892, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '11.0.6',
        { _index: 2893, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '11.1.0',
        { _index: 2918, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '123456',
        {
          _index: 864,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        '15.1.3',
        { _index: 2913, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '16',
        {
          _index: 1902,
          title: {},
          body: {
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        "16个字母、数字、下划线或破折号组成！'})@apiproperty({description",
        {
          _index: 1895,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        '18888888888',
        {
          _index: 2473,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        '1h',
        {
          _index: 851,
          title: {},
          body: {
            'classes/CreateTempLinkDto.html': {},
            'modules/FileModule.html': {},
          },
        },
      ],
      [
        '2',
        {
          _index: 743,
          title: { 'interfaces/Request-2.html': {} },
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      ['2.1.0', { _index: 2890, title: {}, body: { 'dependencies.html': {} } }],
      [
        '20',
        {
          _index: 861,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        '200',
        {
          _index: 445,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'controllers/AuthController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/MailService.html': {},
            'controllers/UserController-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '201',
        {
          _index: 2794,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        '2021',
        {
          _index: 791,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        '20px',
        {
          _index: 3324,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        "20位'})@apiproperty({description",
        {
          _index: 2435,
          title: {},
          body: {
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
          },
        },
      ],
      [
        "20位！'})@apiproperty({description",
        {
          _index: 863,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      ['21', { _index: 3202, title: {}, body: { 'overview.html': {} } }],
      [
        '25',
        {
          _index: 947,
          title: {},
          body: {
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        '255',
        {
          _index: 38,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/Dataset.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'entities/User.html': {},
          },
        },
      ],
      ['28', { _index: 3203, title: {}, body: { 'overview.html': {} } }],
      ['29', { _index: 3201, title: {}, body: { 'overview.html': {} } }],
      [
        '3',
        {
          _index: 744,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        '3,16',
        {
          _index: 1894,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      ['3.0.0', { _index: 2886, title: {}, body: { 'dependencies.html': {} } }],
      ['3.0.1', { _index: 2901, title: {}, body: { 'dependencies.html': {} } }],
      ['3.0.2', { _index: 2897, title: {}, body: { 'dependencies.html': {} } }],
      [
        '3.12.0',
        { _index: 2909, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        '30',
        {
          _index: 659,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'entities/File.html': {},
          },
        },
      ],
      [
        '30001',
        {
          _index: 3221,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '30002',
        {
          _index: 3236,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '30003',
        {
          _index: 3224,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '30004',
        {
          _index: 3233,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '30005',
        {
          _index: 3227,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '30006',
        {
          _index: 3230,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '3001',
        {
          _index: 3219,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '3002',
        {
          _index: 3234,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '3003',
        {
          _index: 3222,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '3004',
        {
          _index: 3231,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '3005',
        {
          _index: 3225,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '3006',
        {
          _index: 3228,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '30m',
        {
          _index: 647,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        '32',
        {
          _index: 1435,
          title: {},
          body: { 'entities/File.html': {}, 'entities/Task.html': {} },
        },
      ],
      [
        '3gpp',
        {
          _index: 3266,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['4', { _index: 2846, title: {}, body: { 'coverage.html': {} } }],
      ['4.0.0', { _index: 2888, title: {}, body: { 'dependencies.html': {} } }],
      ['4.0.1', { _index: 2911, title: {}, body: { 'dependencies.html': {} } }],
      [
        '4.21.2',
        { _index: 2904, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['4/5', { _index: 2835, title: {}, body: { 'coverage.html': {} } }],
      [
        '400',
        {
          _index: 641,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        '404',
        {
          _index: 2341,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        '465',
        {
          _index: 1929,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        '4caf50',
        {
          _index: 3334,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '4px',
        {
          _index: 3330,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '5',
        {
          _index: 876,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['5.6.0', { _index: 2905, title: {}, body: { 'dependencies.html': {} } }],
      ['50', { _index: 2376, title: {}, body: { 'entities/Task.html': {} } }],
      [
        '500',
        {
          _index: 1942,
          title: {},
          body: {
            'injectables/MailService.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        '5000',
        {
          _index: 2608,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        '5165133@asdf.com',
        {
          _index: 858,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      ['55', { _index: 3204, title: {}, body: { 'overview.html': {} } }],
      [
        '555',
        {
          _index: 3336,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '6',
        {
          _index: 862,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      ['6.0.2', { _index: 2894, title: {}, body: { 'dependencies.html': {} } }],
      [
        '6.10.0',
        { _index: 2910, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['6.4.1', { _index: 2899, title: {}, body: { 'dependencies.html': {} } }],
      ['7.0.1', { _index: 2895, title: {}, body: { 'dependencies.html': {} } }],
      ['7.8.1', { _index: 2916, title: {}, body: { 'dependencies.html': {} } }],
      ['72', { _index: 2860, title: {}, body: { 'coverage.html': {} } }],
      [
        '7z',
        {
          _index: 3283,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '8',
        {
          _index: 1179,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'overview.html': {},
          },
        },
      ],
      ['8/11', { _index: 2861, title: {}, body: { 'coverage.html': {} } }],
      ['80', { _index: 2834, title: {}, body: { 'coverage.html': {} } }],
      ['83', { _index: 2842, title: {}, body: { 'coverage.html': {} } }],
      [
        '8px',
        {
          _index: 3327,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        '9',
        {
          _index: 1415,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      ['9/10', { _index: 2859, title: {}, body: { 'coverage.html': {} } }],
      ['90', { _index: 2858, title: {}, body: { 'coverage.html': {} } }],
      [
        '9_',
        {
          _index: 1893,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        '_',
        {
          _index: 332,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'a.sort',
        {
          _index: 2048,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'aac',
        {
          _index: 2946,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'abstract',
        { _index: 672, title: {}, body: { 'classes/BaseEntity.html': {} } },
      ],
      [
        'access',
        {
          _index: 266,
          title: {},
          body: {
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'entities/Dataset.html': {},
            'entities/File.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileService.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'access(filepath',
        {
          _index: 1635,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'access_token',
        {
          _index: 544,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'accessid',
        {
          _index: 275,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'accesstime',
        {
          _index: 276,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'acquirelock',
        {
          _index: 2197,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'acquirelock(lockkey',
        {
          _index: 2204,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'action',
        {
          _index: 227,
          title: {},
          body: {
            'injectables/AiModelService.html': {},
            'injectables/PlantService.html': {},
          },
        },
      ],
      [
        'active',
        {
          _index: 257,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'add',
        {
          _index: 551,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'addconfig',
        {
          _index: 90,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'addconfig(serviceid',
        {
          _index: 103,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'addconfigs',
        {
          _index: 91,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'addconfigs(serviceid',
        {
          _index: 108,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'address',
        {
          _index: 2172,
          title: {},
          body: {
            'entities/Profile.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'adds',
        {
          _index: 228,
          title: {},
          body: {
            'injectables/AiModelService.html': {},
            'injectables/PlantService.html': {},
          },
        },
      ],
      [
        'admin',
        {
          _index: 824,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'affectedpart',
        {
          _index: 748,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'affectedplant',
        {
          _index: 749,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'ai',
        {
          _index: 69,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'entities/Plant.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aiconfigsservice',
        {
          _index: 82,
          title: { 'injectables/AiConfigsService.html': {} },
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'aimodel',
        {
          _index: 1,
          title: { 'entities/AIModel.html': {} },
          body: {
            'entities/AIModel.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'modules/DiagnosisModule.html': {},
            'entities/Plant.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aimodelcontroller',
        {
          _index: 158,
          title: { 'controllers/AiModelController.html': {} },
          body: {
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aimodelmodule',
        {
          _index: 206,
          title: { 'modules/AiModelModule.html': {} },
          body: {
            'modules/AiModelModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'aimodelservice',
        {
          _index: 190,
          title: { 'injectables/AiModelService.html': {} },
          body: {
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'aiservice',
        {
          _index: 52,
          title: { 'entities/AiService.html': {} },
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aiservice.aiserviceaccesslogs',
        {
          _index: 291,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'aiservice.aiserviceaccesslogs)@joincolumn({name',
        {
          _index: 284,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'aiservice.aiserviceconfigs',
        {
          _index: 302,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'aiservice.aiserviceconfigs)@joincolumn({name',
        {
          _index: 298,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'aiservice.aiservicelogs',
        { _index: 405, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        'aiservice.aiservicelogs)@joincolumn({name',
        { _index: 403, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        'aiserviceaccesslog',
        {
          _index: 239,
          title: { 'entities/AiServiceAccessLog.html': {} },
          body: {
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aiserviceaccesslog.service',
        { _index: 241, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'aiserviceaccesslogrepository',
        {
          _index: 416,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'aiserviceaccesslogs',
        {
          _index: 232,
          title: {},
          body: {
            'entities/AiService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'aiserviceconfig',
        {
          _index: 120,
          title: { 'entities/AiServiceConfig.html': {} },
          body: {
            'injectables/AiConfigsService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aiserviceconfig.service',
        { _index: 243, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'aiserviceconfigrepository',
        {
          _index: 98,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'aiserviceconfigs',
        {
          _index: 137,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'entities/AiService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'aiservicecontroller',
        {
          _index: 303,
          title: { 'controllers/AiServiceController.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aiservicelog',
        {
          _index: 245,
          title: { 'entities/AiServiceLog.html': {} },
          body: {
            'entities/AiService.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aiservicelog.service',
        { _index: 246, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'aiservicelogrepository',
        {
          _index: 415,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'aiservicelogs',
        {
          _index: 233,
          title: {},
          body: {
            'entities/AiService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'aiservicemodule',
        {
          _index: 406,
          title: { 'modules/AiServiceModule.html': {} },
          body: {
            'modules/AiServiceModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'aiservicerepository',
        {
          _index: 102,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'aiserviceservice',
        {
          _index: 362,
          title: { 'injectables/AiServiceService.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'alias',
        {
          _index: 820,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'entities/Role.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'aliases',
        {
          _index: 3208,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'align',
        {
          _index: 3318,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'allowedtypes',
        {
          _index: 1765,
          title: {},
          body: { 'injectables/FileTypeValidationPipe.html': {} },
        },
      ],
      ['allowing', { _index: 3124, title: {}, body: { 'index.html': {} } }],
      ['amazing', { _index: 3172, title: {}, body: { 'index.html': {} } }],
      [
        'amr',
        {
          _index: 2955,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'apiproperty',
        {
          _index: 680,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadSingleDto.html': {},
          },
        },
      ],
      [
        'apiproperty({description',
        {
          _index: 700,
          title: {},
          body: {
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'apiresponse',
        {
          _index: 439,
          title: { 'interfaces/ApiResponse.html': {} },
          body: {
            'interfaces/ApiResponse.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'apitags',
        {
          _index: 188,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'apk',
        {
          _index: 2937,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'app',
        {
          _index: 1742,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'app.service',
        {
          _index: 456,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/DownloadController.html': {},
            'controllers/UploadController.html': {},
          },
        },
      ],
      [
        'app/database',
        { _index: 470, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'app/database/entities',
        {
          _index: 121,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'injectables/DatasetService.html': {},
            'entities/DiagnosisHistory.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'app/file',
        {
          _index: 1211,
          title: {},
          body: {
            'controllers/DiagnosisController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'app/mail',
        {
          _index: 632,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'app/redis',
        {
          _index: 2574,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'appcontroller',
        {
          _index: 447,
          title: { 'controllers/AppController.html': {} },
          body: { 'controllers/AppController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'application',
        {
          _index: 2921,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/caffe',
        {
          _index: 3256,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/darknet',
        {
          _index: 3258,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/font',
        {
          _index: 3288,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/gzip',
        {
          _index: 2959,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'application/huggingface',
        {
          _index: 3262,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/java',
        {
          _index: 3286,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/javascript',
        {
          _index: 3036,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'application/json',
        {
          _index: 2985,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/msword',
        {
          _index: 2966,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/mxnet',
        {
          _index: 3260,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/octet',
        {
          _index: 3264,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/onnx',
        {
          _index: 3254,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/pdf',
        {
          _index: 2964,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/pytorch',
        {
          _index: 3248,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/rtf',
        {
          _index: 2980,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'application/tensorflow',
        {
          _index: 3251,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'application/vnd.android.package',
        {
          _index: 2938,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'application/vnd.ms',
        {
          _index: 2971,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/vnd.openxmlformats',
        {
          _index: 2968,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/x',
        {
          _index: 2934,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/xml',
        {
          _index: 2987,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'application/zip',
        {
          _index: 2957,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['applications', { _index: 3075, title: {}, body: { 'index.html': {} } }],
      [
        'applicationtypevalue',
        {
          _index: 2865,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'appmodule',
        {
          _index: 462,
          title: { 'modules/AppModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'apps/.../app.service.ts',
        {
          _index: 3212,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'apps/.../file.guard.ts',
        {
          _index: 3210,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'apps/.../files.guard.ts',
        {
          _index: 3211,
          title: {},
          body: { 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'apps/.../main.ts',
        {
          _index: 3065,
          title: {},
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'apps/api',
        {
          _index: 84,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateUserDto.html': {},
            'controllers/DatasetController.html': {},
            'modules/DatasetModule.html': {},
            'controllers/DiagnosisController.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'controllers/MenuController.html': {},
            'modules/MenuModule.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'classes/RegisterDto.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserQuery.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'apps/auth',
        {
          _index: 468,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/LoginDto-1.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/RegisterDto-1.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'apps/diagnosis',
        {
          _index: 1192,
          title: {},
          body: {
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService-1.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'apps/download',
        {
          _index: 1358,
          title: {},
          body: {
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'apps/file',
        {
          _index: 1018,
          title: {},
          body: {
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'apps/upload',
        {
          _index: 2385,
          title: {},
          body: {
            'classes/TaskCreateDto.html': {},
            'classes/UploadChunkDto.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'apps/user',
        {
          _index: 826,
          title: {},
          body: {
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto-1.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        'appservice',
        {
          _index: 455,
          title: { 'injectables/AppService.html': {} },
          body: {
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'apptypes',
        {
          _index: 1732,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'apptypevalue',
        {
          _index: 2866,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'archive',
        {
          _index: 2939,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'archiver',
        {
          _index: 1393,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        "archiver('zip",
        {
          _index: 1412,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'argumentmetadata',
        {
          _index: 2080,
          title: {},
          body: {
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
          },
        },
      ],
      [
        'argumentshost',
        {
          _index: 893,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'argv[1',
        {
          _index: 2254,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'arial',
        {
          _index: 3306,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'array.isarray(fileids',
        {
          _index: 1774,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'array.isarray(value',
        {
          _index: 2086,
          title: {},
          body: {
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
          },
        },
      ],
      [
        'arrayminsize',
        {
          _index: 880,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'arrayminsize(1',
        {
          _index: 869,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'asc',
        {
          _index: 2045,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'async',
        {
          _index: 89,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'audio',
        {
          _index: 1743,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'audio/aac',
        {
          _index: 2947,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'audio/amr',
        {
          _index: 2956,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'audio/flac',
        {
          _index: 2949,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'audio/mp4',
        {
          _index: 2951,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'audio/mpeg',
        {
          _index: 2941,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'audio/ogg',
        {
          _index: 2945,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'audio/opus',
        {
          _index: 3271,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'audio/wav',
        {
          _index: 2943,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'audio/webm',
        {
          _index: 3269,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'audio/x',
        {
          _index: 2953,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'audiotypes',
        {
          _index: 1734,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'audiotypevalue',
        {
          _index: 2867,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'auth',
        {
          _index: 492,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        'auth.buttonsget',
        {
          _index: 555,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'auth.controller',
        { _index: 605, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'auth.login',
        {
          _index: 543,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        'auth.notify',
        {
          _index: 536,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        'auth.register',
        {
          _index: 533,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        'auth.service',
        {
          _index: 569,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'auth.strategy',
        { _index: 606, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'auth.verify',
        {
          _index: 548,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        'auth_service',
        {
          _index: 3220,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'auth_service_http_port',
        {
          _index: 2850,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'auth_service_name',
        {
          _index: 516,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'controllers/MenuController.html': {},
            'modules/MenuModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'auth_service_tcp_port',
        {
          _index: 604,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/MenuModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'authclient',
        {
          _index: 528,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/MenuController.html': {},
          },
        },
      ],
      [
        'authcontroller',
        {
          _index: 490,
          title: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'modules/AuthModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'authguard',
        {
          _index: 346,
          title: { 'injectables/AuthGuard.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthGuard.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'interfaces/Request.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'authmodule',
        {
          _index: 465,
          title: { 'modules/AuthModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'author',
        {
          _index: 3178,
          title: {},
          body: { 'index.html': {}, 'properties.html': {} },
        },
      ],
      [
        'authservice',
        {
          _index: 568,
          title: { 'injectables/AuthService.html': {} },
          body: {
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'autoloadentities',
        { _index: 935, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      ['available', { _index: 3188, title: {}, body: { 'modules.html': {} } }],
      [
        'avatar',
        { _index: 2173, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'avatarpath',
        {
          _index: 2719,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'avi',
        {
          _index: 3015,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'await',
        {
          _index: 134,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      ['aws', { _index: 3114, title: {}, body: { 'index.html': {} } }],
      [
        'axios',
        {
          _index: 1282,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'axios.post',
        {
          _index: 1333,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'b',
        {
          _index: 2047,
          title: {},
          body: {
            'injectables/MenuService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'b.sort',
        {
          _index: 2049,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      ['backers', { _index: 3173, title: {}, body: { 'index.html': {} } }],
      [
        'background',
        {
          _index: 3309,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'badgatewayexception',
        {
          _index: 1279,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'badrequestexception',
        {
          _index: 1529,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'base.entity',
        {
          _index: 956,
          title: {},
          body: {
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/File.html': {},
            'entities/Plant.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'base64',
        {
          _index: 2532,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      ['based', { _index: 3109, title: {}, body: { 'index.html': {} } }],
      [
        'baseentity',
        {
          _index: 664,
          title: { 'classes/BaseEntity.html': {} },
          body: {
            'classes/BaseEntity.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/File.html': {},
            'entities/Plant.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'bcryptjs',
        {
          _index: 636,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'between',
        {
          _index: 1679,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'bigint',
        { _index: 1438, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'bin',
        {
          _index: 3261,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'biologicalcontrol',
        {
          _index: 750,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'blob([filestream',
        {
          _index: 1329,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'bmp',
        {
          _index: 3001,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['board', { _index: 3165, title: {}, body: { 'index.html': {} } }],
      [
        'body',
        {
          _index: 184,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'bold',
        {
          _index: 3340,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'boolean',
        { _index: 2356, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'bootstrap',
        {
          _index: 211,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'border',
        {
          _index: 3325,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'box',
        {
          _index: 3328,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['browse', { _index: 3187, title: {}, body: { 'modules.html': {} } }],
      ['browser', { _index: 3186, title: {}, body: { 'modules.html': {} } }],
      [
        'buffer',
        {
          _index: 1593,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'classes/ImageRequest.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'buffer.alloc(0',
        {
          _index: 1402,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'buffer.concat([filedata',
        {
          _index: 1404,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'buffer.concat([zipbuffer',
        {
          _index: 1418,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'buffer.from(file.originalname',
        {
          _index: 1176,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'buffer.from(payload.chunkdata',
        {
          _index: 2540,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'buffer.from(payload.filedata',
        {
          _index: 2531,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      ['building', { _index: 3071, title: {}, body: { 'index.html': {} } }],
      [
        'buildmenutree',
        {
          _index: 2050,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'buildmenutree(menu.id',
        {
          _index: 2059,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'buildmenutree(null',
        {
          _index: 2060,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'buttonsget',
        {
          _index: 493,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      ['cache', { _index: 2898, title: {}, body: { 'dependencies.html': {} } }],
      [
        'caffe',
        {
          _index: 3278,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'caffemodel',
        {
          _index: 3255,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'calculatefilemd5',
        {
          _index: 1563,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'calculatefilemd5(filepath',
        {
          _index: 1571,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'canactivate',
        {
          _index: 1522,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'canactivate(context',
        {
          _index: 1525,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'cascade',
        {
          _index: 1432,
          title: {},
          body: { 'entities/File.html': {}, 'entities/User.html': {} },
        },
      ],
      [
        'case',
        {
          _index: 3238,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'catch',
        {
          _index: 663,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/MailService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RedisService.html': {},
            'classes/TypeormFilter.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'catch(exception',
        {
          _index: 892,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'catch(httpexception',
        {
          _index: 1783,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'catch(typeormerror',
        { _index: 2398, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'category',
        {
          _index: 751,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'cause',
        {
          _index: 752,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'cb',
        {
          _index: 1156,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'cb(null',
        {
          _index: 1173,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'center',
        {
          _index: 3317,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['channel', { _index: 3139, title: {}, body: { 'index.html': {} } }],
      ['char', { _index: 1434, title: {}, body: { 'entities/File.html': {} } }],
      ['check', { _index: 3103, title: {}, body: { 'index.html': {} } }],
      [
        'checkfileexists',
        {
          _index: 1564,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'checkfileexists(filepath',
        {
          _index: 1573,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'chemicalcontrol',
        {
          _index: 753,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'children',
        {
          _index: 1945,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'chunk',
        {
          _index: 1403,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'chunk.dto',
        {
          _index: 2525,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'chunk.dto.ts',
        {
          _index: 675,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'chunk.dto.ts:11',
        {
          _index: 679,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'chunk.dto.ts:2',
        {
          _index: 2486,
          title: {},
          body: { 'classes/UploadChunkDto.html': {} },
        },
      ],
      [
        'chunk.dto.ts:20',
        {
          _index: 2492,
          title: {},
          body: { 'classes/UploadChunkDto-1.html': {} },
        },
      ],
      [
        'chunk.dto.ts:29',
        {
          _index: 2490,
          title: {},
          body: { 'classes/UploadChunkDto-1.html': {} },
        },
      ],
      [
        'chunk.dto.ts:7',
        {
          _index: 2485,
          title: {},
          body: { 'classes/UploadChunkDto.html': {} },
        },
      ],
      [
        'chunkdata',
        {
          _index: 2483,
          title: {},
          body: {
            'classes/UploadChunkDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'chunkdir',
        {
          _index: 2551,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'chunkfile',
        {
          _index: 2495,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'chunkfile(@payload',
        {
          _index: 2537,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'chunkfile(payload',
        {
          _index: 2501,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'chunkfile(taskmeta',
        {
          _index: 2555,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'chunkfilename',
        {
          _index: 2612,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'chunkfilepath',
        {
          _index: 2614,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'chunkindex',
        {
          _index: 2487,
          title: {},
          body: {
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'chunkpath',
        {
          _index: 1583,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'chunkpaths',
        {
          _index: 1586,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'chunks',
        {
          _index: 2568,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'chunkstatus',
        { _index: 2368, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'chunkstream',
        {
          _index: 1608,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        "chunkstream.on('end",
        {
          _index: 1615,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        "chunkstream.on('error",
        {
          _index: 1616,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'chunkstream.pipe(writestream',
        {
          _index: 1613,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'class',
        {
          _index: 73,
          title: {
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadPreloadDto.html': {},
            'classes/UploadSingleDto.html': {},
          },
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'classes',
        {
          _index: 665,
          title: {},
          body: {
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadPreloadDto.html': {},
            'classes/UploadSingleDto.html': {},
            'overview.html': {},
          },
        },
      ],
      ['clicks', { _index: 3123, title: {}, body: { 'index.html': {} } }],
      [
        'client',
        {
          _index: 2196,
          title: {},
          body: {
            'injectables/RedisService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'clientproxy',
        {
          _index: 514,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'controllers/MenuController.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'clientsmodule',
        {
          _index: 601,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'clientsmodule.register',
        {
          _index: 607,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      ['cloud', { _index: 3108, title: {}, body: { 'index.html': {} } }],
      [
        'cluster_aimodelmodule',
        {
          _index: 214,
          title: {},
          body: { 'modules/AiModelModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_aimodelmodule_providers',
        {
          _index: 215,
          title: {},
          body: { 'modules/AiModelModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_aiservicemodule',
        {
          _index: 407,
          title: {},
          body: { 'modules/AiServiceModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_aiservicemodule_providers',
        {
          _index: 408,
          title: {},
          body: { 'modules/AiServiceModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule',
        {
          _index: 463,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule_imports',
        {
          _index: 464,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_appmodule_providers',
        { _index: 3190, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_authmodule',
        {
          _index: 597,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_authmodule_imports',
        { _index: 3191, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_authmodule_providers',
        {
          _index: 598,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_datasetmodule',
        { _index: 3192, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_datasetmodule_providers',
        { _index: 3193, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_diagnosismodule',
        {
          _index: 1254,
          title: {},
          body: { 'modules/DiagnosisModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_diagnosismodule_imports',
        {
          _index: 1255,
          title: {},
          body: { 'modules/DiagnosisModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_diagnosismodule_providers',
        {
          _index: 1256,
          title: {},
          body: { 'modules/DiagnosisModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_filemodule',
        {
          _index: 1540,
          title: {},
          body: { 'modules/FileModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_filemodule_exports',
        {
          _index: 1542,
          title: {},
          body: { 'modules/FileModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_filemodule_providers',
        {
          _index: 1541,
          title: {},
          body: { 'modules/FileModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_fileoperationmodule',
        {
          _index: 1556,
          title: {},
          body: { 'modules/FileOperationModule.html': {} },
        },
      ],
      [
        'cluster_fileoperationmodule_exports',
        {
          _index: 1558,
          title: {},
          body: { 'modules/FileOperationModule.html': {} },
        },
      ],
      [
        'cluster_fileoperationmodule_providers',
        {
          _index: 1557,
          title: {},
          body: { 'modules/FileOperationModule.html': {} },
        },
      ],
      [
        'cluster_knowledgemodule',
        {
          _index: 1855,
          title: {},
          body: { 'modules/KnowledgeModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_knowledgemodule_providers',
        {
          _index: 1856,
          title: {},
          body: { 'modules/KnowledgeModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_mailmodule',
        {
          _index: 1907,
          title: {},
          body: { 'modules/MailModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_mailmodule_exports',
        {
          _index: 1908,
          title: {},
          body: { 'modules/MailModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_mailmodule_imports',
        { _index: 1910, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'cluster_mailmodule_providers',
        {
          _index: 1909,
          title: {},
          body: { 'modules/MailModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_menumodule',
        { _index: 3194, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_menumodule_providers',
        { _index: 3195, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_plantmodule',
        {
          _index: 2161,
          title: {},
          body: { 'modules/PlantModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_plantmodule_providers',
        {
          _index: 2162,
          title: {},
          body: { 'modules/PlantModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_redismodule',
        {
          _index: 2189,
          title: {},
          body: { 'modules/RedisModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_redismodule_exports',
        {
          _index: 2190,
          title: {},
          body: { 'modules/RedisModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_redismodule_providers',
        {
          _index: 2191,
          title: {},
          body: { 'modules/RedisModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolemodule',
        { _index: 3196, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_rolemodule_providers',
        { _index: 3197, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_usermodule',
        { _index: 3198, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_usermodule_exports',
        { _index: 3199, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cluster_usermodule_providers',
        { _index: 3200, title: {}, body: { 'overview.html': {} } },
      ],
      [
        'cmd',
        {
          _index: 532,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'code',
        {
          _index: 442,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'injectables/FileService.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/MailService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RoleService.html': {},
            'classes/TypeormFilter.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'colletotrichum',
        {
          _index: 802,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'color',
        {
          _index: 3310,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'column',
        {
          _index: 63,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'column({name',
        {
          _index: 287,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'column({nullable',
        { _index: 1959, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'column({type',
        {
          _index: 24,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
          },
        },
      ],
      ['come', { _index: 3130, title: {}, body: { 'index.html': {} } }],
      [
        'comment',
        {
          _index: 2128,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'common/decorator/roles.decorator',
        {
          _index: 341,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'common/dto/dataset/create',
        {
          _index: 990,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'common/dto/dataset/update',
        {
          _index: 992,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'common/dto/file/update',
        {
          _index: 1493,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'common/filters/typeorm.filter',
        {
          _index: 345,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'common/guards/auth.guard',
        {
          _index: 347,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'common/guards/roles.guard',
        {
          _index: 349,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'common/pipe/string',
        {
          _index: 994,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'compare',
        {
          _index: 635,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'compare(password',
        {
          _index: 652,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'completechunkdto',
        {
          _index: 673,
          title: { 'classes/CompleteChunkDto.html': {} },
          body: { 'classes/CompleteChunkDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'completed',
        {
          _index: 3061,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'completefile',
        {
          _index: 2496,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'completefile(@payload',
        {
          _index: 2541,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'completefile(payload',
        {
          _index: 2504,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'completeupload',
        {
          _index: 2553,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'completeupload(taskid',
        {
          _index: 2557,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'compressed',
        {
          _index: 2962,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'compression',
        {
          _index: 2923,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'computefilesizebytype',
        {
          _index: 1716,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'computefilesizebytype(userid',
        {
          _index: 1746,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'config',
        {
          _index: 148,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.configkey',
        {
          _index: 153,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.configvalue',
        {
          _index: 154,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.dto',
        {
          _index: 127,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'config.dto.ts',
        {
          _index: 697,
          title: {},
          body: {
            'classes/CreateAiConfigDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'config.dto.ts:13',
        {
          _index: 698,
          title: {},
          body: {
            'classes/CreateAiConfigDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
          },
        },
      ],
      [
        'config.dto.ts:22',
        {
          _index: 699,
          title: {},
          body: {
            'classes/CreateAiConfigDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
          },
        },
      ],
      [
        'config.entity',
        {
          _index: 268,
          title: {},
          body: {
            'entities/AiService.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'config.entity.ts',
        {
          _index: 293,
          title: {},
          body: { 'entities/AiServiceConfig.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'config.entity.ts:13',
        {
          _index: 294,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'config.entity.ts:17',
        {
          _index: 299,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'config.entity.ts:20',
        {
          _index: 295,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'config.entity.ts:23',
        {
          _index: 296,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'config.entity.ts:26',
        {
          _index: 297,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'config.entity.ts:33',
        {
          _index: 300,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        'config.service',
        {
          _index: 361,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
          },
        },
      ],
      [
        'config.service.ts',
        {
          _index: 87,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'config.service.ts:10',
        {
          _index: 99,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.service.ts:20',
        {
          _index: 112,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.service.ts:32',
        {
          _index: 106,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.service.ts:48',
        {
          _index: 110,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.service.ts:66',
        {
          _index: 119,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config.service.ts:84',
        {
          _index: 115,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'config/.../microservice.config.ts',
        {
          _index: 3214,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'config/microservice.config',
        {
          _index: 517,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'modules/DatasetModule.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'guards/FilesGuard.html': {},
            'controllers/MenuController.html': {},
            'modules/MenuModule.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'config/microservice.config.ts',
        {
          _index: 2848,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'configdto',
        {
          _index: 685,
          title: { 'classes/ConfigDto.html': {} },
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'configenum',
        {
          _index: 924,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'modules/FileModule.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/RedisService.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'configenum.mail_host',
        {
          _index: 1926,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'configenum.mail_user',
        {
          _index: 1937,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'configid',
        {
          _index: 116,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'configkey',
        {
          _index: 150,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'entities/AiServiceConfig.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
          },
        },
      ],
      [
        'configmodule',
        {
          _index: 471,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/FileModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      [
        'configmodule.forroot',
        {
          _index: 478,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      [
        'configs',
        {
          _index: 390,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
          },
        },
      ],
      [
        'configs.dto',
        {
          _index: 128,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'configs.dto.ts',
        {
          _index: 687,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'configs.dto.ts:14',
        { _index: 692, title: {}, body: { 'classes/ConfigDto.html': {} } },
      ],
      [
        'configs.dto.ts:23',
        { _index: 694, title: {}, body: { 'classes/ConfigDto.html': {} } },
      ],
      [
        'configs.dto.ts:41',
        {
          _index: 704,
          title: {},
          body: { 'classes/CreateAiConfigsDto.html': {} },
        },
      ],
      [
        'configservice',
        {
          _index: 586,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'modules/DatabaseModule.html': {},
            'modules/FileModule.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'configservice.get(configenum.db_database',
        { _index: 934, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.db_host',
        { _index: 929, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.db_password',
        { _index: 932, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.db_port',
        { _index: 930, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.db_sync',
        { _index: 937, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.db_type',
        { _index: 928, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.db_username',
        { _index: 931, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'configservice.get(configenum.secret',
        {
          _index: 1553,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'injectables/JwtStrategy.html': {},
          },
        },
      ],
      [
        'configvalue',
        {
          _index: 151,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'entities/AiServiceConfig.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
          },
        },
      ],
      [
        'confirmpassword',
        {
          _index: 2434,
          title: {},
          body: {
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
          },
        },
      ],
      [
        'console.error',
        {
          _index: 1761,
          title: {},
          body: {
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/MailService.html': {},
          },
        },
      ],
      [
        "console.log('message",
        {
          _index: 1938,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        "console.log('task",
        {
          _index: 2621,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'const',
        {
          _index: 133,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'constants',
        {
          _index: 1598,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'constants.f_ok',
        {
          _index: 1636,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'constants.r_ok',
        {
          _index: 1637,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'constructor',
        {
          _index: 95,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'constructor(aiservicerepository',
        {
          _index: 96,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'constructor(allowedtypes',
        {
          _index: 1763,
          title: {},
          body: { 'injectables/FileTypeValidationPipe.html': {} },
        },
      ],
      [
        'constructor(configservice',
        {
          _index: 585,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/RedisService.html': {},
          },
        },
      ],
      [
        'constructor(datasetrepository',
        {
          _index: 1047,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'constructor(diagnosisrepository',
        {
          _index: 1264,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'constructor(fileclient',
        {
          _index: 1523,
          title: {},
          body: { 'guards/FileGuard.html': {}, 'guards/FilesGuard.html': {} },
        },
      ],
      [
        'constructor(filerepository',
        {
          _index: 1644,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'constructor(jwt',
        {
          _index: 616,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'constructor(knowledgerepository',
        {
          _index: 1864,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'constructor(maxsize',
        {
          _index: 1749,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'constructor(menurepository',
        {
          _index: 2031,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'constructor(private',
        {
          _index: 194,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/PlantController.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request.html': {},
            'controllers/RoleController-1.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'constructor(protected',
        {
          _index: 1809,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'constructor(reflector',
        { _index: 2352, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'constructor(rolerepository',
        {
          _index: 2329,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'container',
        {
          _index: 3322,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'content',
        {
          _index: 1336,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'context',
        {
          _index: 1528,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'context.getclass',
        { _index: 2363, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'context.gethandler',
        { _index: 2362, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'context.switchtohttp().getrequest',
        {
          _index: 1532,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'controller',
        {
          _index: 157,
          title: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "controller('ai",
        {
          _index: 193,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        "controller('auth",
        {
          _index: 526,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "controller('dataset",
        {
          _index: 997,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "controller('diagnosis",
        {
          _index: 1151,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "controller('knowledge",
        {
          _index: 1842,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        "controller('menu",
        {
          _index: 1985,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        "controller('plant",
        {
          _index: 2121,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        "controller('role",
        {
          _index: 2293,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        "controller('user",
        {
          _index: 2707,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'controllers',
        {
          _index: 159,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'modules/AuthModule.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'modules/DiagnosisModule.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'modules/FileModule.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'controllers/PlantController.html': {},
            'modules/PlantModule.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'count',
        {
          _index: 1711,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      ['courses', { _index: 3144, title: {}, body: { 'index.html': {} } }],
      [
        'coverage',
        {
          _index: 2818,
          title: { 'coverage.html': {} },
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'create',
        {
          _index: 164,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdatePlantDto.html': {},
          },
        },
      ],
      [
        'create(@body',
        {
          _index: 196,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'create(@payload',
        {
          _index: 2019,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'create(createaimodeldto',
        {
          _index: 169,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
          },
        },
      ],
      [
        'create(createplantdto',
        {
          _index: 2111,
          title: {},
          body: {
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
          },
        },
      ],
      [
        'create(data',
        {
          _index: 2000,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'create(dto',
        {
          _index: 311,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'create(menudata',
        {
          _index: 1969,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'create(payload',
        {
          _index: 2305,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'create.dto',
        {
          _index: 2523,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'create.dto.ts',
        {
          _index: 2387,
          title: {},
          body: { 'classes/TaskCreateDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'create.dto.ts:11',
        { _index: 2389, title: {}, body: { 'classes/TaskCreateDto.html': {} } },
      ],
      [
        'create.dto.ts:19',
        { _index: 2390, title: {}, body: { 'classes/TaskCreateDto.html': {} } },
      ],
      [
        'create.dto.ts:27',
        { _index: 2391, title: {}, body: { 'classes/TaskCreateDto.html': {} } },
      ],
      [
        'create.dto.ts:35',
        { _index: 2388, title: {}, body: { 'classes/TaskCreateDto.html': {} } },
      ],
      [
        'create.dto.ts:43',
        { _index: 2392, title: {}, body: { 'classes/TaskCreateDto.html': {} } },
      ],
      [
        'create.dto.ts:44',
        { _index: 2393, title: {}, body: { 'classes/TaskCreateDto.html': {} } },
      ],
      [
        'createaiconfigdto',
        {
          _index: 105,
          title: { 'classes/CreateAiConfigDto.html': {} },
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'classes/CreateAiConfigDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createaiconfigsdto',
        {
          _index: 109,
          title: { 'classes/CreateAiConfigsDto.html': {} },
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createaimodeldto',
        {
          _index: 170,
          title: { 'classes/CreateAiModelDto.html': {} },
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createaiservicedto',
        {
          _index: 312,
          title: { 'classes/CreateAiServiceDto.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createdat',
        {
          _index: 10,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'classes/BaseEntity.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
          },
        },
      ],
      [
        'createdataset',
        {
          _index: 965,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'createdataset(@req',
        {
          _index: 1011,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'createdataset(payload',
        {
          _index: 1020,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'createdataset(req',
        {
          _index: 970,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'createdataset(userid',
        {
          _index: 1051,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'createdatasetdto',
        {
          _index: 721,
          title: { 'classes/CreateDatasetDto.html': {} },
          body: {
            'classes/CreateDatasetDto.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createdatecolumn',
        { _index: 667, title: {}, body: { 'classes/BaseEntity.html': {} } },
      ],
      [
        'createdby',
        {
          _index: 11,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'injectables/FileService.html': {},
            'entities/Task.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'createdend',
        {
          _index: 975,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'createdstart',
        {
          _index: 974,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'createplantdiseaseknowledgedto',
        {
          _index: 745,
          title: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createplantdto',
        {
          _index: 814,
          title: { 'classes/CreatePlantDto.html': {} },
          body: {
            'classes/CreatePlantDto.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'classes/UpdatePlantDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "createquerybuilder('file",
        {
          _index: 1719,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'createreadstream',
        {
          _index: 1394,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'createreadstream(chunkpath',
        {
          _index: 1609,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'createreadstream(filepath',
        {
          _index: 1400,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'createroledto',
        {
          _index: 817,
          title: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
          },
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createtask',
        {
          _index: 2497,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'createtask(@payload',
        {
          _index: 2543,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'createtask(payload',
        {
          _index: 2507,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'createtask(taskmeta',
        {
          _index: 2559,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'createtaskdto',
        {
          _index: 828,
          title: { 'classes/CreateTaskDto.html': {} },
          body: {
            'classes/CreateTaskDto.html': {},
            'injectables/UploadService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createtemplinkdto',
        {
          _index: 849,
          title: { 'classes/CreateTempLinkDto.html': {} },
          body: { 'classes/CreateTempLinkDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'createuserdto',
        {
          _index: 853,
          title: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
          },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createwritestream',
        {
          _index: 1597,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'createwritestream(finalpath',
        {
          _index: 1611,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'crypto',
        {
          _index: 1283,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        "crypto.createhash('md5",
        {
          _index: 1289,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        "crypto.randombytes(16).tostring('hex",
        {
          _index: 2599,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'css',
        {
          _index: 3034,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'csv',
        {
          _index: 2983,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ctx',
        {
          _index: 1784,
          title: {},
          body: {
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'ctx.getresponse',
        {
          _index: 1786,
          title: {},
          body: {
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'culturalpractices',
        {
          _index: 754,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'current_timestamp',
        {
          _index: 29,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
          },
        },
      ],
      [
        'customrpcexceptionfilter',
        {
          _index: 887,
          title: { 'classes/CustomRpcExceptionFilter.html': {} },
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'd+)(kb|mb|gb|tb)$/i',
        {
          _index: 3295,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'd41d8cd98f00b204e9800998ecf8427e',
        {
          _index: 839,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'darknet',
        {
          _index: 3279,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'data',
        {
          _index: 443,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController-1.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RedisService.html': {},
            'classes/TypeormFilter.html': {},
            'injectables/UploadService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'data.file',
        {
          _index: 1214,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'data.filemeta.filepath',
        {
          _index: 1397,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'data.filesmeta',
        {
          _index: 1409,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'data.filesmeta.length',
        {
          _index: 1410,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'data.menudata',
        {
          _index: 2024,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'data.page',
        {
          _index: 1223,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'data.pagesize',
        {
          _index: 1224,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'data.userid',
        {
          _index: 1218,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'database',
        { _index: 933, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'databasemodule',
        {
          _index: 466,
          title: { 'modules/DatabaseModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'databasemodule.register',
        { _index: 484, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'databaseservice',
        {
          _index: 942,
          title: { 'injectables/DatabaseService.html': {} },
          body: { 'injectables/DatabaseService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'dataset',
        {
          _index: 944,
          title: { 'entities/Dataset.html': {} },
          body: {
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'modules/DiagnosisModule.html': {},
            'entities/File.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'dataset.controller',
        { _index: 1045, title: {}, body: { 'modules/DatasetModule.html': {} } },
      ],
      [
        'dataset.create',
        {
          _index: 1012,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'dataset.createdby',
        {
          _index: 1099,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'dataset.delete',
        {
          _index: 1016,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'dataset.description',
        {
          _index: 1096,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'dataset.detail',
        {
          _index: 1013,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'dataset.dto',
        {
          _index: 991,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'dataset.dto.ts',
        {
          _index: 723,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'dataset.dto.ts:12',
        {
          _index: 2416,
          title: {},
          body: { 'classes/UpdateDatasetDto.html': {} },
        },
      ],
      [
        'dataset.dto.ts:18',
        {
          _index: 734,
          title: {},
          body: { 'classes/CreateDatasetDto.html': {} },
        },
      ],
      [
        'dataset.dto.ts:20',
        {
          _index: 2413,
          title: {},
          body: { 'classes/UpdateDatasetDto.html': {} },
        },
      ],
      [
        'dataset.dto.ts:26',
        {
          _index: 727,
          title: {},
          body: { 'classes/CreateDatasetDto.html': {} },
        },
      ],
      [
        'dataset.dto.ts:38',
        {
          _index: 2414,
          title: {},
          body: { 'classes/UpdateDatasetDto.html': {} },
        },
      ],
      [
        'dataset.dto.ts:44',
        {
          _index: 731,
          title: {},
          body: { 'classes/CreateDatasetDto.html': {} },
        },
      ],
      [
        'dataset.entity',
        { _index: 1445, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'dataset.files',
        {
          _index: 1086,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'entities/File.html': {},
          },
        },
      ],
      [
        'dataset.files?.length',
        {
          _index: 1076,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'dataset.files?.map((file',
        {
          _index: 1091,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'dataset.files?.reduce((totalsize',
        {
          _index: 1078,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'dataset.get.list',
        {
          _index: 1007,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'dataset.name',
        {
          _index: 1094,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'dataset.service',
        {
          _index: 1031,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'dataset.update',
        {
          _index: 1014,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
        },
      ],
      [
        'dataset.updatedby',
        {
          _index: 1098,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasetcontroller',
        {
          _index: 963,
          title: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
          },
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'datasetdata',
        {
          _index: 1083,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasetdata.description',
        {
          _index: 1097,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasetdata.name',
        {
          _index: 1095,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasetid',
        {
          _index: 961,
          title: {},
          body: {
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'datasetmodule',
        {
          _index: 1042,
          title: { 'modules/DatasetModule.html': {} },
          body: {
            'modules/DatasetModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'datasetrepository',
        {
          _index: 1050,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasets',
        { _index: 1429, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'datasets_files',
        { _index: 952, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'datasetservice',
        {
          _index: 1030,
          title: { 'injectables/DatasetService.html': {} },
          body: {
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'datasetsize',
        {
          _index: 1077,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasetslistget',
        {
          _index: 966,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'datasetslistget(@payload',
        {
          _index: 1033,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'datasetslistget(page',
        {
          _index: 1053,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'datasetslistget(payload',
        {
          _index: 1022,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'datasetslistget(req',
        {
          _index: 973,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'datasource',
        {
          _index: 1265,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'date',
        {
          _index: 22,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'classes/BaseEntity.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
          },
        },
      ],
      [
        'date().toisostring',
        { _index: 2402, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'date(filters.createdend',
        {
          _index: 1681,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'date(filters.createdstart',
        {
          _index: 1680,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'date(filters.updatedend',
        {
          _index: 1685,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'date(filters.updatedstart',
        {
          _index: 1684,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'date(value',
        {
          _index: 2102,
          title: {},
          body: { 'injectables/ParseStringDatePipe.html': {} },
        },
      ],
      [
        'date.now',
        {
          _index: 459,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'date.pipe',
        {
          _index: 995,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'date.pipe.ts',
        {
          _index: 2098,
          title: {},
          body: {
            'injectables/ParseStringDatePipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'date.pipe.ts:6',
        {
          _index: 2099,
          title: {},
          body: { 'injectables/ParseStringDatePipe.html': {} },
        },
      ],
      [
        'datetime',
        {
          _index: 25,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        'db',
        {
          _index: 2239,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'db_database',
        {
          _index: 3041,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'db_host',
        {
          _index: 3039,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'db_password',
        {
          _index: 3043,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'db_port',
        {
          _index: 3040,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'db_sync',
        {
          _index: 3044,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'db_type',
        {
          _index: 3038,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'db_username',
        {
          _index: 3042,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'declarations',
        {
          _index: 210,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'declare',
        {
          _index: 592,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'decoration',
        {
          _index: 3337,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'decorator/roles.decorator',
        { _index: 2359, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'decorators',
        {
          _index: 23,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'controllers/AiModelController.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'controllers/KnowledgeController.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      ['deeper', { _index: 3141, title: {}, body: { 'index.html': {} } }],
      [
        'default',
        {
          _index: 28,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'entities/Menu.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'entities/Task.html': {},
            'injectables/UploadService.html': {},
            'entities/User.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'defaultifempty',
        {
          _index: 1984,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'defined',
        {
          _index: 30,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'del',
        {
          _index: 2198,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'del(key',
        {
          _index: 2214,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'delete',
        {
          _index: 185,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "delete(':datasetid",
        {
          _index: 1015,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "delete(':datasetid')@httpcode(httpstatus.no_content",
        {
          _index: 981,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "delete(':id",
        {
          _index: 178,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "delete(':id(\\d+)')@httpcode(httpstatus.no_content",
        {
          _index: 1828,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        "delete(':id(\\d+)')@httpcode(httpstatus.no_content)@roles(role.admin)@useguards(rolesguard",
        {
          _index: 2288,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        "delete(':id(\\d+)')@roles(role.admin)@useguards(rolesguard)@httpcode(httpstatus.no_content",
        {
          _index: 1980,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "delete(':serviceid",
        {
          _index: 383,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "delete(':serviceid')@httpcode(httpstatus.no_content",
        {
          _index: 327,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "delete(':serviceid/config/:configid",
        {
          _index: 393,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "delete(':serviceid/config/:configid')@httpcode(httpstatus.no_content",
        {
          _index: 330,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'deletedataset',
        {
          _index: 967,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'deletedataset(datasetid',
        {
          _index: 980,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'deletedataset(payload',
        {
          _index: 1024,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'deletefile',
        {
          _index: 1451,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'deletefile(@payload',
        {
          _index: 1503,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'deletefile(fileid',
        {
          _index: 1646,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'deletefile(filepath',
        {
          _index: 1575,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'deletefile(payload',
        {
          _index: 1461,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'deletefiles',
        {
          _index: 1452,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'deletefiles(@payload',
        {
          _index: 1514,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'deletefiles(fileids',
        {
          _index: 1648,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'deletefiles(payload',
        {
          _index: 1464,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'deletionpromises',
        {
          _index: 1713,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'delta',
        {
          _index: 2223,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'dependencies',
        {
          _index: 208,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'dependencies.html': {},
            'overview.html': {},
          },
        },
      ],
      ['deploy', { _index: 3096, title: {}, body: { 'index.html': {} } }],
      ['deploying', { _index: 3113, title: {}, body: { 'index.html': {} } }],
      ['deployment', { _index: 3104, title: {}, body: { 'index.html': {} } }],
      ['deploywith', { _index: 3122, title: {}, body: { 'index.html': {} } }],
      [
        'desc',
        {
          _index: 1344,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'description',
        {
          _index: 12,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/Dataset.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/FileOperationService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'entities/Plant.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'index.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        "description必须是字符串！'})@apiproperty({description",
        {
          _index: 726,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'destination',
        {
          _index: 1155,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'development',
        {
          _index: 940,
          title: {},
          body: { 'modules/DatabaseModule.html': {}, 'index.html': {} },
        },
      ],
      [
        "development'}.local",
        {
          _index: 483,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      ['devtools', { _index: 3152, title: {}, body: { 'index.html': {} } }],
      [
        'diagnosis',
        {
          _index: 714,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'diagnosis.controller',
        {
          _index: 1260,
          title: {},
          body: { 'modules/DiagnosisModule.html': {} },
        },
      ],
      [
        'diagnosis.createdby',
        {
          _index: 1321,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosis.diagnosisresult',
        {
          _index: 1339,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosis.file',
        {
          _index: 1324,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosis.history',
        {
          _index: 1195,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosis.history.list',
        {
          _index: 1198,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosis.service',
        {
          _index: 1150,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'modules/DiagnosisModule.html': {},
          },
        },
      ],
      [
        'diagnosis.start',
        {
          _index: 1206,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosis.status',
        {
          _index: 1203,
          title: {},
          body: {
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosis.support',
        {
          _index: 1200,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosis.upload',
        {
          _index: 1209,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosis_service',
        {
          _index: 3223,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'diagnosis_service_http_port',
        {
          _index: 2851,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'diagnosis_service_name',
        {
          _index: 2852,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'diagnosis_service_tcp_port',
        {
          _index: 2853,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'diagnosiscontroller',
        {
          _index: 1101,
          title: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
          },
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'modules/DiagnosisModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'diagnosishistory',
        {
          _index: 1225,
          title: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'diagnosishistory.file',
        {
          _index: 1311,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosishistoryget',
        {
          _index: 1103,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosishistoryget(@payload',
        {
          _index: 1221,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosishistoryget(@req',
        {
          _index: 1188,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'diagnosishistoryget(data',
        {
          _index: 1194,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosishistoryget(req',
        {
          _index: 1109,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'diagnosishistoryget(userid',
        {
          _index: 1268,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosishistorylistget',
        {
          _index: 1104,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosishistorylistget(data',
        {
          _index: 1197,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'diagnosishistorylistget(page',
        {
          _index: 1270,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosishistorylistget(req',
        {
          _index: 1112,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'diagnosismodule',
        {
          _index: 1253,
          title: { 'modules/DiagnosisModule.html': {} },
          body: {
            'modules/DiagnosisModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'diagnosisrepository',
        {
          _index: 1267,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'diagnosisresult',
        {
          _index: 1228,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        'diagnosisservice',
        {
          _index: 1149,
          title: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'diagnosissupportget',
        {
          _index: 1105,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'dict',
        {
          _index: 2281,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'dirpath',
        {
          _index: 1579,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      ['discord', { _index: 3138, title: {}, body: { 'index.html': {} } }],
      [
        'diseasecode',
        {
          _index: 755,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'diseasecycle',
        {
          _index: 756,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'diseasename',
        {
          _index: 757,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'diseasetype',
        {
          _index: 758,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'diskstorage',
        {
          _index: 1136,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'display',
        {
          _index: 3314,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['dive', { _index: 3140, title: {}, body: { 'index.html': {} } }],
      [
        'doc',
        {
          _index: 2965,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'docs',
        {
          _index: 1744,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'doctypes',
        {
          _index: 1736,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'document',
        {
          _index: 2925,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'documentation',
        {
          _index: 2819,
          title: {},
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'documenturl',
        {
          _index: 759,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'docx',
        {
          _index: 2967,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'download_service',
        {
          _index: 3226,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'download_service_http_port',
        {
          _index: 2854,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'download_service_name',
        {
          _index: 1545,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'download_service_tcp_port',
        {
          _index: 1546,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'downloadcontroller',
        {
          _index: 1357,
          title: { 'controllers/DownloadController.html': {} },
          body: {
            'controllers/DownloadController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'downloadfile',
        {
          _index: 1360,
          title: {},
          body: {
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
          },
        },
      ],
      [
        'downloadfile(@payload',
        {
          _index: 1369,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'downloadfile(data',
        {
          _index: 1387,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'downloadfile(payload',
        {
          _index: 1362,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'downloadfiles',
        {
          _index: 1361,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'downloadfiles(@payload',
        {
          _index: 1372,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'downloadfiles(payload',
        {
          _index: 1365,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'downloadfilesaszip',
        {
          _index: 1386,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'downloadfilesaszip(data',
        {
          _index: 1389,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'downloadfilesdto',
        {
          _index: 1375,
          title: { 'classes/DownloadFilesDto.html': {} },
          body: { 'classes/DownloadFilesDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'downloadrequest',
        {
          _index: 1531,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'downloadservice',
        {
          _index: 1368,
          title: { 'injectables/DownloadService.html': {} },
          body: {
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'dto',
        {
          _index: 104,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'dto.configs.map((config',
        {
          _index: 147,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'dto.email',
        {
          _index: 538,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'dto.name',
        {
          _index: 2342,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'dto/change',
        {
          _index: 2702,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'dto/create',
        {
          _index: 126,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'dto/login.dto',
        {
          _index: 522,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        'dto/register.dto',
        {
          _index: 523,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        'dto/reset',
        {
          _index: 2705,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'dto/task',
        {
          _index: 2522,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'dto/update',
        {
          _index: 129,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'dto/upload',
        {
          _index: 2524,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'dynamicmodule',
        { _index: 918, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      ['e2e', { _index: 3091, title: {}, body: { 'index.html': {} } }],
      [
        'each',
        {
          _index: 742,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      ['efficient', { _index: 3072, title: {}, body: { 'index.html': {} } }],
      ['efficiently', { _index: 3101, title: {}, body: { 'index.html': {} } }],
      [
        'email',
        {
          _index: 537,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'end',
        {
          _index: 1614,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/RedisService.html': {},
          },
        },
      ],
      [
        'endpointurl',
        {
          _index: 234,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      ['ensure', { _index: 3099, title: {}, body: { 'index.html': {} } }],
      [
        'ensuredirectoryexists',
        {
          _index: 1565,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'ensuredirectoryexists(dirpath',
        {
          _index: 1577,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      ['enterprise', { _index: 3156, title: {}, body: { 'index.html': {} } }],
      [
        'entities',
        {
          _index: 2,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'entity',
        {
          _index: 0,
          title: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
          },
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "entity('ai_model",
        { _index: 71, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        "entity('ai_service_access_logs",
        {
          _index: 290,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        "entity('ai_service_configs",
        {
          _index: 301,
          title: {},
          body: { 'entities/AiServiceConfig.html': {} },
        },
      ],
      [
        "entity('ai_service_logs",
        { _index: 404, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        "entity('ai_services",
        { _index: 270, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        "entity('dataset",
        { _index: 958, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        "entity('diagnosis_history",
        {
          _index: 1240,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        "entity('file",
        { _index: 1446, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        "entity('menu",
        { _index: 1964, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        "entity('plant_disease_knowledge",
        {
          _index: 2158,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        "entity('plants",
        { _index: 2108, title: {}, body: { 'entities/Plant.html': {} } },
      ],
      [
        "entity('profile",
        { _index: 2187, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        "entity('role",
        { _index: 2278, title: {}, body: { 'entities/Role.html': {} } },
      ],
      [
        "entity('task",
        { _index: 2383, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        "entity('user",
        { _index: 2652, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'entityclassorschema',
        { _index: 916, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'enum',
        {
          _index: 260,
          title: {},
          body: {
            'entities/AiService.html': {},
            'entities/AiServiceLog.html': {},
          },
        },
      ],
      [
        'enumerations',
        {
          _index: 2920,
          title: { 'miscellaneous/enumerations.html': {} },
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'env',
        {
          _index: 481,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      [
        'env.${process.env.node_env',
        {
          _index: 482,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      [
        'envfilepath',
        {
          _index: 480,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      [
        'err',
        {
          _index: 1406,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'err.message',
        {
          _index: 1408,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'error',
        {
          _index: 399,
          title: {},
          body: {
            'entities/AiServiceLog.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/MailService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "error('ai",
        {
          _index: 434,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'error(`无法获取锁：${lockkey',
        {
          _index: 2250,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'error.message',
        {
          _index: 2598,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'errorhttpstatuscode',
        {
          _index: 379,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'errorresponse',
        {
          _index: 898,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'ex',
        {
          _index: 2243,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'example',
        {
          _index: 678,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'excel',
        {
          _index: 2972,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'excelopenxml',
        {
          _index: 3274,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'exception',
        {
          _index: 895,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'exception.code',
        {
          _index: 2073,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'exception.data',
        {
          _index: 2074,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'exception.drivererror.errno',
        { _index: 2400, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'exception.filter.ts',
        {
          _index: 889,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'exception.filter.ts:12',
        {
          _index: 894,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/HttpExceptionFilter.html': {},
          },
        },
      ],
      [
        'exception.filter.ts:13',
        {
          _index: 2069,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'exception.geterror',
        {
          _index: 905,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'exception.getresponse',
        {
          _index: 1789,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'exception.getstatus',
        {
          _index: 1787,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'exception.message',
        {
          _index: 911,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'exception?.code',
        {
          _index: 2070,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'exception?.data',
        {
          _index: 2072,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'exception?.message',
        {
          _index: 2071,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'exceptionfilter',
        {
          _index: 1782,
          title: {},
          body: {
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'exe',
        {
          _index: 2933,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'executewithlock',
        {
          _index: 2199,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'executewithlock(lockkey',
        {
          _index: 2216,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'executioncontext',
        {
          _index: 1526,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'existssync',
        {
          _index: 1133,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService-1.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'existssync(avatarpath',
        {
          _index: 2721,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'existssync(filepath',
        {
          _index: 1398,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'existssync(folder',
        {
          _index: 1170,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      ['experience', { _index: 3143, title: {}, body: { 'index.html': {} } }],
      [
        'expert',
        {
          _index: 3058,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'expiresin',
        {
          _index: 646,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateTempLinkDto.html': {},
            'modules/FileModule.html': {},
          },
        },
      ],
      [
        'export',
        {
          _index: 72,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'exports',
        {
          _index: 213,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'express',
        {
          _index: 518,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthGuard.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/UserController.html': {},
            'interfaces/UserPayload.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'express.multer.file',
        {
          _index: 1124,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'extends',
        {
          _index: 583,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/File.html': {},
            'injectables/JwtStrategy.html': {},
            'entities/Plant.html': {},
            'interfaces/Request.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'entities/User.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'extension',
        {
          _index: 3245,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'extname',
        {
          _index: 2701,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'extractjwt',
        {
          _index: 1806,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'extractjwt.fromauthheaderasbearertoken',
        {
          _index: 1811,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'f4f4f9',
        {
          _index: 3311,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'failed',
        {
          _index: 3062,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'false',
        {
          _index: 1399,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/JwtStrategy.html': {},
            'entities/Task.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'family',
        {
          _index: 3305,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['fast', { _index: 3117, title: {}, body: { 'index.html': {} } }],
      ['features', { _index: 3126, title: {}, body: { 'index.html': {} } }],
      ['few', { _index: 3119, title: {}, body: { 'index.html': {} } }],
      [
        'file',
        {
          _index: 5,
          title: { 'entities/File.html': {} },
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'file.access',
        {
          _index: 1536,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        "file.buffer.tostring('base64",
        {
          _index: 2717,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'file.controller',
        { _index: 1549, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'file.createdat',
        {
          _index: 1678,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'file.createdby',
        {
          _index: 1538,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'file.datasets',
        { _index: 951, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'file.delete',
        {
          _index: 1462,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'file.download',
        {
          _index: 1363,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'file.dto',
        {
          _index: 1494,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'file.dto.ts',
        {
          _index: 1377,
          title: {},
          body: {
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'file.dto.ts:17',
        {
          _index: 1381,
          title: {},
          body: { 'classes/DownloadFilesDto.html': {} },
        },
      ],
      [
        'file.dto.ts:22',
        { _index: 2422, title: {}, body: { 'classes/UpdateFileDto.html': {} } },
      ],
      [
        'file.dto.ts:33',
        { _index: 2423, title: {}, body: { 'classes/UpdateFileDto.html': {} } },
      ],
      [
        'file.dto.ts:44',
        { _index: 2419, title: {}, body: { 'classes/UpdateFileDto.html': {} } },
      ],
      [
        'file.dto.ts:59',
        {
          _index: 2431,
          title: {},
          body: { 'classes/UpdateFilesAccessDto.html': {} },
        },
      ],
      [
        'file.dto.ts:69',
        {
          _index: 2426,
          title: {},
          body: { 'classes/UpdateFilesAccessDto.html': {} },
        },
      ],
      [
        'file.entity',
        { _index: 957, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'file.filemd5',
        {
          _index: 1703,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'file.filename',
        {
          _index: 1308,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'file.filepath',
        {
          _index: 1327,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'file.filesize',
        {
          _index: 1080,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'file.get',
        {
          _index: 1468,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'file.get.byid',
        {
          _index: 1471,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'file.id',
        {
          _index: 1092,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'file.mimetype',
        {
          _index: 1160,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'file.originalfilename',
        {
          _index: 1332,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'file.originalname',
        {
          _index: 1175,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'file.path',
        {
          _index: 1310,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileSizeValidationPipe.html': {},
          },
        },
      ],
      [
        'file.service',
        {
          _index: 1496,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'file.size',
        {
          _index: 1309,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileSizeValidationPipe.html': {},
          },
        },
      ],
      [
        'file.update',
        {
          _index: 1486,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'file.updatedat',
        {
          _index: 1683,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'file.updatedby',
        {
          _index: 1695,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'file.version',
        {
          _index: 1696,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'file/file.module',
        {
          _index: 1259,
          title: {},
          body: { 'modules/DiagnosisModule.html': {} },
        },
      ],
      [
        'file/pipe/file',
        {
          _index: 1142,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'file/services/file',
        {
          _index: 1147,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
          },
        },
      ],
      [
        'file_service',
        {
          _index: 3229,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'file_service_http_port',
        {
          _index: 2855,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'file_service_name',
        {
          _index: 996,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'modules/DatasetModule.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'file_service_tcp_port',
        {
          _index: 1044,
          title: {},
          body: {
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'fileblob',
        {
          _index: 1328,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'fileclient',
        {
          _index: 999,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'filecontroller',
        {
          _index: 1449,
          title: { 'controllers/FileController-1.html': {} },
          body: {
            'controllers/FileController-1.html': {},
            'modules/FileModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'filecount',
        {
          _index: 1075,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'filedata',
        {
          _index: 1401,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'filedata.length',
        {
          _index: 2597,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        "filedata.tostring('base64",
        {
          _index: 1405,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'fileentity',
        {
          _index: 1232,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'fileguard',
        {
          _index: 1519,
          title: { 'guards/FileGuard.html': {} },
          body: {
            'guards/FileGuard.html': {},
            'interfaces/Request-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'fileid',
        {
          _index: 962,
          title: {},
          body: {
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'interfaces/Request-1.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'fileids',
        {
          _index: 724,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'injectables/DatasetService.html': {},
            'classes/DownloadFilesDto.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'interfaces/Request-2.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'fileids.length',
        {
          _index: 1775,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'fileids?.length',
        {
          _index: 1085,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'fileinterceptor',
        {
          _index: 1131,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "fileinterceptor('file",
        {
          _index: 1153,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'filemd5',
        {
          _index: 831,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'injectables/FileService.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'filemd5s',
        {
          _index: 1706,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filemeta',
        {
          _index: 1370,
          title: {},
          body: {
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'interfaces/Request-1.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
          },
        },
      ],
      [
        'filemeta.filepath',
        {
          _index: 1422,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'filemeta.mimetype',
        {
          _index: 2586,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'filemeta.originalfilename',
        {
          _index: 1424,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'filemeta.originalname',
        {
          _index: 2591,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'filemodule',
        {
          _index: 1257,
          title: { 'modules/FileModule.html': {} },
          body: {
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'filename',
        {
          _index: 832,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'controllers/DiagnosisController.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'fileoperationmodule',
        {
          _index: 1555,
          title: { 'modules/FileOperationModule.html': {} },
          body: {
            'modules/FileOperationModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'fileoperationservice',
        {
          _index: 1146,
          title: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'filepath',
        {
          _index: 1285,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'filerepository',
        {
          _index: 1048,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'files',
        {
          _index: 946,
          title: {},
          body: {
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'files.delete',
        {
          _index: 1465,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'files.download',
        {
          _index: 1366,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'files.filter((file',
        {
          _index: 1710,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'files.get',
        {
          _index: 1474,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'files.get.byid',
        {
          _index: 1477,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'files.get.list',
        {
          _index: 1480,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'files.length',
        {
          _index: 1699,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'files.map((file',
        {
          _index: 1707,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'files.statistic.usage',
        {
          _index: 1483,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'files.update.access',
        {
          _index: 1489,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'fileservice',
        {
          _index: 1495,
          title: { 'injectables/FileService.html': {} },
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'filesguard',
        {
          _index: 1769,
          title: { 'guards/FilesGuard.html': {} },
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'filesize',
        {
          _index: 833,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'filesizevalidationpipe',
        {
          _index: 1141,
          title: { 'injectables/FileSizeValidationPipe.html': {} },
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "filesizevalidationpipe('10mb",
        {
          _index: 1182,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "filesizevalidationpipe('1mb",
        {
          _index: 2715,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'filesmeta',
        {
          _index: 1373,
          title: {},
          body: {
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'filestodelete',
        {
          _index: 1709,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filestodelete.map((file',
        {
          _index: 1714,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filestream',
        {
          _index: 1325,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
          },
        },
      ],
      [
        'fileswithaccess',
        {
          _index: 1777,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'fileswithaccess.push(file',
        {
          _index: 1778,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'filetype',
        {
          _index: 834,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'filetypes',
        {
          _index: 1717,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filetypes.length',
        {
          _index: 1726,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filetypevalidationpipe',
        {
          _index: 1144,
          title: { 'injectables/FileTypeValidationPipe.html': {} },
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'filetypevalidationpipe([mime_type.png',
        {
          _index: 1180,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'filter((item',
        {
          _index: 2094,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      [
        'filter((menu',
        {
          _index: 2051,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'filters',
        {
          _index: 1054,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'filters.category',
        {
          _index: 1881,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'filters.createdend',
        {
          _index: 1676,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filters.createdstart',
        {
          _index: 1070,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'filters.filetype',
        {
          _index: 1672,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filters.name',
        {
          _index: 1067,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'filters.originalfilename',
        {
          _index: 1674,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filters.updatedend',
        {
          _index: 1682,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'filters.updatedstart',
        {
          _index: 1072,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'filters?.createdend',
        {
          _index: 1071,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'filters?.createdstart',
        {
          _index: 1068,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'filters?.name',
        {
          _index: 1065,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'filters?.updatedend',
        {
          _index: 1073,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'finalfilename',
        {
          _index: 2623,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'finalfilepath',
        {
          _index: 2624,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'finally',
        {
          _index: 1315,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'finalpath',
        {
          _index: 1581,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'findall',
        {
          _index: 165,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'findauthroutes',
        {
          _index: 2030,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'findauthroutes(roleid',
        {
          _index: 2036,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'findbyemail',
        {
          _index: 2742,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyemail(@payload',
        {
          _index: 2810,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyemail(payload',
        {
          _index: 2746,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyemailandusername',
        {
          _index: 2743,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyemailandusername(@payload',
        {
          _index: 2806,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyemailandusername(payload',
        {
          _index: 2748,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyid',
        {
          _index: 1863,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'findbyid(id',
        {
          _index: 1869,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'findbyusername',
        {
          _index: 2744,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyusername(@payload',
        {
          _index: 2808,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'findbyusername(payload',
        {
          _index: 2750,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'finddict',
        {
          _index: 2328,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'findone',
        {
          _index: 166,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        "findone(@param('id",
        {
          _index: 199,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
          },
        },
      ],
      [
        'findone(@payload',
        {
          _index: 2017,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'findone(data',
        {
          _index: 2003,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'findone(id',
        {
          _index: 174,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'findone(payload',
        {
          _index: 2308,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'findone(serviceid',
        {
          _index: 316,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'findpaginated',
        {
          _index: 306,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'findpaginated(page',
        {
          _index: 319,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'findserviceconfigs',
        {
          _index: 92,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'findserviceconfigs(serviceid',
        {
          _index: 111,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'firstreported',
        {
          _index: 760,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'firstvaluefrom',
        {
          _index: 519,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'flac',
        {
          _index: 2948,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'flags',
        {
          _index: 1612,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'flex',
        {
          _index: 3315,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'flv',
        {
          _index: 3023,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'fn',
        {
          _index: 2217,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      ['focus', { _index: 3125, title: {}, body: { 'index.html': {} } }],
      [
        'folder',
        {
          _index: 1157,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      ['follow', { _index: 3159, title: {}, body: { 'index.html': {} } }],
      [
        'font',
        {
          _index: 2926,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'font/otf',
        {
          _index: 2991,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'font/ttf',
        {
          _index: 2989,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'font/woff',
        {
          _index: 2993,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'font/woff2',
        {
          _index: 2995,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'fontotf',
        {
          _index: 3290,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'fontttf',
        {
          _index: 3289,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'fonttypevalue',
        {
          _index: 2868,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'fontwoff',
        {
          _index: 3287,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'forbiddenexception',
        {
          _index: 1530,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'forfeature',
        { _index: 914, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'forfeature(entities',
        { _index: 915, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'formatresponse',
        {
          _index: 350,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'formatresponse(200',
        {
          _index: 373,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'formatresponse(201',
        {
          _index: 370,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'formatresponse(204',
        {
          _index: 1017,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'formatresponse(404',
        {
          _index: 1093,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'formdata',
        {
          _index: 1330,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        "formdata.append('image",
        {
          _index: 1331,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'found',
        {
          _index: 435,
          title: {},
          body: {
            'injectables/AiServiceService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'found.filemd5',
        {
          _index: 2596,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'found.filepath',
        {
          _index: 2593,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'found.filesize',
        {
          _index: 2595,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'found.filetype',
        {
          _index: 2594,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'found.storagefilename',
        {
          _index: 2592,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      ['framework', { _index: 3070, title: {}, body: { 'index.html': {} } }],
      [
        'fs',
        {
          _index: 1135,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'fs.createreadstream(filepath',
        {
          _index: 1291,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'fs.createwritestream(finalfilepath',
        {
          _index: 2625,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs.existssync(this.chunkdir',
        {
          _index: 2577,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs.existssync(this.uploaddir',
        {
          _index: 2581,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs.mkdirsync(this.chunkdir',
        {
          _index: 2578,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs.mkdirsync(this.uploaddir',
        {
          _index: 2582,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs.promises.writefile(chunkfilepath',
        {
          _index: 2616,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs.promises.writefile(filepath',
        {
          _index: 2588,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'fs/promises',
        {
          _index: 1602,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      ['full', { _index: 3155, title: {}, body: { 'index.html': {} } }],
      [
        'function',
        {
          _index: 2219,
          title: {},
          body: { 'injectables/RedisService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'functions',
        {
          _index: 3064,
          title: { 'miscellaneous/functions.html': {} },
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      ['g', { _index: 3121, title: {}, body: { 'index.html': {} } }],
      [
        'gateway/src/main.ts',
        {
          _index: 2822,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'gateway/src/modules/ai',
        {
          _index: 85,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/app.controller.ts',
        {
          _index: 448,
          title: {},
          body: { 'controllers/AppController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/app.controller.ts:10',
        {
          _index: 451,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'gateway/src/modules/app.controller.ts:16',
        {
          _index: 454,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'gateway/src/modules/app.service.ts',
        {
          _index: 486,
          title: {},
          body: { 'injectables/AppService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/app.service.ts:5',
        { _index: 487, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'gateway/src/modules/auth/auth.controller.ts',
        {
          _index: 491,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.controller.ts:33',
        {
          _index: 507,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.controller.ts:46',
        {
          _index: 502,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.controller.ts:59',
        {
          _index: 511,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.controller.ts:69',
        {
          _index: 498,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.module.ts',
        { _index: 600, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'gateway/src/modules/auth/auth.strategy.ts',
        {
          _index: 1799,
          title: {},
          body: { 'injectables/JwtStrategy.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.strategy.ts:18',
        {
          _index: 1804,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/auth.strategy.ts:9',
        {
          _index: 1802,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/dto/login.dto.ts',
        {
          _index: 1888,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/dto/login.dto.ts:23',
        { _index: 1896, title: {}, body: { 'classes/LoginDto.html': {} } },
      ],
      [
        'gateway/src/modules/auth/dto/login.dto.ts:31',
        { _index: 1897, title: {}, body: { 'classes/LoginDto.html': {} } },
      ],
      [
        'gateway/src/modules/auth/dto/register.dto.ts',
        {
          _index: 2260,
          title: {},
          body: { 'classes/RegisterDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/auth/dto/register.dto.ts:11',
        { _index: 2262, title: {}, body: { 'classes/RegisterDto.html': {} } },
      ],
      [
        'gateway/src/modules/auth/dto/register.dto.ts:19',
        { _index: 2263, title: {}, body: { 'classes/RegisterDto.html': {} } },
      ],
      [
        'gateway/src/modules/dataset/dataset.controller.ts',
        {
          _index: 964,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/dataset/dataset.controller.ts:115',
        {
          _index: 989,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'gateway/src/modules/dataset/dataset.controller.ts:142',
        {
          _index: 982,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'gateway/src/modules/dataset/dataset.controller.ts:45',
        {
          _index: 978,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'gateway/src/modules/dataset/dataset.controller.ts:76',
        {
          _index: 972,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'gateway/src/modules/dataset/dataset.controller.ts:93',
        {
          _index: 985,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'gateway/src/modules/dataset/dataset.module.ts',
        { _index: 1043, title: {}, body: { 'modules/DatasetModule.html': {} } },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts',
        {
          _index: 1102,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts:101',
        {
          _index: 1119,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts:113',
        {
          _index: 1111,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts:119',
        {
          _index: 1116,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts:125',
        {
          _index: 1114,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts:70',
        {
          _index: 1126,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.controller.ts:88',
        {
          _index: 1122,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.module.ts',
        {
          _index: 1258,
          title: {},
          body: { 'modules/DiagnosisModule.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts',
        {
          _index: 1262,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:121',
        {
          _index: 1273,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:131',
        {
          _index: 1269,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:140',
        {
          _index: 1272,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:152',
        {
          _index: 1271,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:18',
        {
          _index: 1266,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:26',
        {
          _index: 1278,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:36',
        {
          _index: 1277,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/diagnosis/diagnosis.service.ts:70',
        {
          _index: 1275,
          title: {},
          body: { 'injectables/DiagnosisService.html': {} },
        },
      ],
      [
        'gateway/src/modules/file/file.controller.ts',
        { _index: 2832, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'gateway/src/modules/file/file.module.ts',
        { _index: 1543, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'gateway/src/modules/file/guards/file.guard.ts',
        {
          _index: 1521,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'interfaces/Request-1.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/file/guards/file.guard.ts:26',
        { _index: 1524, title: {}, body: { 'guards/FileGuard.html': {} } },
      ],
      [
        'gateway/src/modules/file/guards/file.guard.ts:31',
        { _index: 1527, title: {}, body: { 'guards/FileGuard.html': {} } },
      ],
      [
        'gateway/src/modules/file/guards/files.guard.ts',
        {
          _index: 1770,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/file/guards/files.guard.ts:26',
        { _index: 1771, title: {}, body: { 'guards/FilesGuard.html': {} } },
      ],
      [
        'gateway/src/modules/file/guards/files.guard.ts:31',
        { _index: 1772, title: {}, body: { 'guards/FilesGuard.html': {} } },
      ],
      [
        'gateway/src/modules/file/models/file.entity',
        {
          _index: 1252,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'gateway/src/modules/file/pipe/delete.pipe.ts',
        {
          _index: 2077,
          title: {},
          body: {
            'injectables/ParseFileIdsPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/file/pipe/delete.pipe.ts:10',
        {
          _index: 2081,
          title: {},
          body: { 'injectables/ParseFileIdsPipe.html': {} },
        },
      ],
      [
        'gateway/src/modules/file/pipe/file',
        {
          _index: 1747,
          title: {},
          body: {
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/file/pipe/type.pipe.ts',
        {
          _index: 2089,
          title: {},
          body: {
            'injectables/ParseFileTypePipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/file/pipe/type.pipe.ts:10',
        {
          _index: 2090,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      [
        'gateway/src/modules/file/services/file',
        {
          _index: 1356,
          title: {},
          body: {
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/knowledge/dto/create',
        {
          _index: 746,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/knowledge/dto/update',
        {
          _index: 2437,
          title: {},
          body: {
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts',
        {
          _index: 1817,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts:35',
        {
          _index: 1826,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts:42',
        {
          _index: 1832,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts:49',
        {
          _index: 1834,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts:73',
        {
          _index: 1831,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts:80',
        {
          _index: 1838,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.controller.ts:91',
        {
          _index: 1829,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts',
        {
          _index: 2127,
          title: {},
          body: {
            'entities/PlantDiseaseKnowledge.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:10',
        {
          _index: 2139,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:107',
        {
          _index: 2141,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:115',
        {
          _index: 2157,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:118',
        {
          _index: 2132,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:126',
        {
          _index: 2151,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:129',
        {
          _index: 2155,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:132',
        {
          _index: 2144,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:135',
        {
          _index: 2148,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:18',
        {
          _index: 2137,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:26',
        {
          _index: 2150,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:29',
        {
          _index: 2154,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:32',
        {
          _index: 2153,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:35',
        {
          _index: 2133,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:38',
        {
          _index: 2140,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:41',
        {
          _index: 2130,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:44',
        {
          _index: 2129,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:47',
        {
          _index: 2138,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:50',
        {
          _index: 2152,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:58',
        {
          _index: 2143,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:61',
        {
          _index: 2142,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:68',
        {
          _index: 2135,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:7',
        {
          _index: 2145,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:76',
        {
          _index: 2156,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:79',
        {
          _index: 2147,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:82',
        {
          _index: 2134,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:85',
        {
          _index: 2131,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:88',
        {
          _index: 2136,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:91',
        {
          _index: 2149,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.entity.ts:99',
        {
          _index: 2146,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.module.ts',
        {
          _index: 1857,
          title: {},
          body: { 'modules/KnowledgeModule.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts',
        {
          _index: 1862,
          title: {},
          body: {
            'injectables/KnowledgeService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:10',
        {
          _index: 1865,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:17',
        {
          _index: 1867,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:23',
        {
          _index: 1868,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:28',
        {
          _index: 1872,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:49',
        {
          _index: 1871,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:54',
        {
          _index: 1870,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:63',
        {
          _index: 1874,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/knowledge/knowledge.service.ts:73',
        {
          _index: 1873,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts',
        {
          _index: 1967,
          title: {},
          body: { 'controllers/MenuController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts:103',
        {
          _index: 1981,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts:35',
        {
          _index: 1979,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts:49',
        {
          _index: 1974,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts:62',
        {
          _index: 1976,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts:76',
        {
          _index: 1971,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.controller.ts:89',
        {
          _index: 1983,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gateway/src/modules/menu/menu.module.ts',
        { _index: 2027, title: {}, body: { 'modules/MenuModule.html': {} } },
      ],
      [
        'gateway/src/modules/plant/dto/create',
        {
          _index: 815,
          title: {},
          body: { 'classes/CreatePlantDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/dto/update',
        {
          _index: 2464,
          title: {},
          body: { 'classes/UpdatePlantDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.controller.ts',
        {
          _index: 2110,
          title: {},
          body: { 'controllers/PlantController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.controller.ts:21',
        {
          _index: 2112,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.controller.ts:26',
        {
          _index: 2113,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.controller.ts:31',
        {
          _index: 2114,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.controller.ts:36',
        {
          _index: 2117,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.controller.ts:41',
        {
          _index: 2115,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.module.ts',
        { _index: 2163, title: {}, body: { 'modules/PlantModule.html': {} } },
      ],
      [
        'gateway/src/modules/plant/plant.service.ts',
        {
          _index: 2165,
          title: {},
          body: { 'injectables/PlantService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.service.ts:11',
        {
          _index: 2167,
          title: {},
          body: { 'injectables/PlantService.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.service.ts:15',
        {
          _index: 2168,
          title: {},
          body: { 'injectables/PlantService.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.service.ts:19',
        {
          _index: 2170,
          title: {},
          body: { 'injectables/PlantService.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.service.ts:23',
        {
          _index: 2169,
          title: {},
          body: { 'injectables/PlantService.html': {} },
        },
      ],
      [
        'gateway/src/modules/plant/plant.service.ts:7',
        {
          _index: 2166,
          title: {},
          body: { 'injectables/PlantService.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/dto/create',
        {
          _index: 818,
          title: {},
          body: { 'classes/CreateRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/dto/update',
        {
          _index: 2478,
          title: {},
          body: { 'classes/UpdateRoleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts',
        {
          _index: 2280,
          title: {},
          body: { 'controllers/RoleController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts:106',
        {
          _index: 2289,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts:39',
        {
          _index: 2285,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts:49',
        {
          _index: 2286,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts:59',
        {
          _index: 2287,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts:76',
        {
          _index: 2283,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.controller.ts:88',
        {
          _index: 2291,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'gateway/src/modules/role/role.module.ts',
        { _index: 2324, title: {}, body: { 'modules/RoleModule.html': {} } },
      ],
      [
        'gateway/src/modules/user/dto/change',
        {
          _index: 2433,
          title: {},
          body: { 'classes/UpdatePasswordDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/dto/create',
        {
          _index: 854,
          title: {},
          body: { 'classes/CreateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/dto/get',
        {
          _index: 2816,
          title: {},
          body: { 'interfaces/UserQuery.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/dto/reset',
        {
          _index: 2268,
          title: {},
          body: { 'classes/ResetPasswordDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/dto/update',
        {
          _index: 2467,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateUserDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts',
        {
          _index: 2655,
          title: {},
          body: { 'controllers/UserController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:109',
        {
          _index: 2671,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:128',
        {
          _index: 2682,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:143',
        {
          _index: 2673,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:156',
        {
          _index: 2695,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:176',
        {
          _index: 2688,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:189',
        {
          _index: 2692,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:208',
        {
          _index: 2690,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:225',
        {
          _index: 2700,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:246',
        {
          _index: 2698,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:55',
        {
          _index: 2676,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:65',
        {
          _index: 2679,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.controller.ts:80',
        {
          _index: 2685,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'gateway/src/modules/user/user.module.ts',
        { _index: 2813, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'gb',
        {
          _index: 3302,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'gender',
        {
          _index: 2174,
          title: {},
          body: {
            'entities/Profile.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'geographicalarea',
        {
          _index: 761,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        "get(':datasetid",
        {
          _index: 984,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "get(':id",
        {
          _index: 175,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get(':id(\\d+)')@roles(role.admin)@useguards(rolesguard",
        {
          _index: 1975,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get(':id/status",
        {
          _index: 1118,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "get(':serviceid",
        {
          _index: 317,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "get(':serviceid/config",
        {
          _index: 324,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "get('avatar",
        {
          _index: 2670,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "get('buttons",
        {
          _index: 549,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "get('buttons')@useguards(authguard)@httpcode(httpstatus.ok",
        {
          _index: 497,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "get('dict",
        {
          _index: 2284,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        "get('history",
        {
          _index: 1110,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "get('history/list",
        {
          _index: 1113,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "get('list",
        {
          _index: 321,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "get('list')@roles(role.admin)@useguards(rolesguard",
        {
          _index: 2694,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "get('profile",
        {
          _index: 2675,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "get('routes",
        {
          _index: 1978,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        "get('speed",
        {
          _index: 458,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        "get('support",
        {
          _index: 1115,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'get()@roles(role.admin)@useguards(rolesguard',
        {
          _index: 1973,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'get(key',
        {
          _index: 2220,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'getavatar',
        {
          _index: 2656,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'getavatar(@payload',
        {
          _index: 2786,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'getavatar(@req',
        {
          _index: 2718,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'getavatar(payload',
        {
          _index: 2753,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'getavatar(req',
        {
          _index: 2668,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'getdatasetdetail',
        {
          _index: 968,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'getdatasetdetail(@payload',
        {
          _index: 1036,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'getdatasetdetail(datasetid',
        {
          _index: 983,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'getdatasetdetail(payload',
        {
          _index: 1026,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'getdiagnosisstatus',
        {
          _index: 1106,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'getdiagnosisstatus(@payload',
        {
          _index: 1219,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'getdiagnosisstatus(data',
        {
          _index: 1202,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'getdiagnosisstatus(id',
        {
          _index: 1117,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'geterror',
        {
          _index: 902,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'getfile',
        {
          _index: 1453,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'getfile(@payload',
        {
          _index: 1497,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfile(fileid',
        {
          _index: 1650,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'getfile(payload',
        {
          _index: 1467,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfilebyid',
        {
          _index: 1454,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'getfilebyid(@payload',
        {
          _index: 1499,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfilebyid(fileid',
        {
          _index: 1652,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'getfilebyid(payload',
        {
          _index: 1470,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfiles',
        {
          _index: 1455,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'getfiles(@payload',
        {
          _index: 1505,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfiles(payload',
        {
          _index: 1473,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfiles(userid',
        {
          _index: 1654,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'getfilesbyid',
        {
          _index: 1456,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'getfilesbyid(@payload',
        {
          _index: 1507,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfilesbyid(fileids',
        {
          _index: 1656,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'getfilesbyid(payload',
        {
          _index: 1476,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfileslist',
        {
          _index: 1457,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'getfileslist(page',
        {
          _index: 1658,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'getfileslist(payload',
        {
          _index: 1479,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfilesstatisticusage',
        {
          _index: 1458,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'getfilesstatisticusage(@payload',
        {
          _index: 1516,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfilesstatisticusage(payload',
        {
          _index: 1482,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'getfilesstatisticusage(userid',
        {
          _index: 1660,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'getfiletype',
        {
          _index: 1667,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "getfiletype('app",
        {
          _index: 1733,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "getfiletype('application",
        {
          _index: 1737,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "getfiletype('audio",
        {
          _index: 1735,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "getfiletype('image",
        {
          _index: 1729,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "getfiletype('other",
        {
          _index: 1739,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "getfiletype('video",
        {
          _index: 1731,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'gethello',
        {
          _index: 449,
          title: {},
          body: {
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
          },
        },
      ],
      [
        'getmanyandcount',
        {
          _index: 1689,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'getmodelmimetype',
        {
          _index: 2575,
          title: {},
          body: {
            'injectables/UploadService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'getmodelmimetype(path.extname(filemeta.originalname',
        {
          _index: 2587,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'getroledict',
        {
          _index: 2304,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'getroutes',
        {
          _index: 1968,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'getroutes(@payload',
        {
          _index: 2014,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'getroutes(@req',
        {
          _index: 1986,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'getroutes(data',
        {
          _index: 2005,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'getroutes(req',
        {
          _index: 1977,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'gettask',
        {
          _index: 2498,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'gettask(@payload',
        {
          _index: 2545,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'gettask(payload',
        {
          _index: 2510,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'gettask(taskid',
        {
          _index: 2561,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'gettimestamp',
        {
          _index: 450,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      ['getting', { _index: 3066, title: { 'index.html': {} }, body: {} }],
      [
        'gif',
        {
          _index: 2999,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'global',
        {
          _index: 593,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'modules/DatabaseModule.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'modules/RedisModule.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'gloeosporioides',
        {
          _index: 803,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'graph',
        {
          _index: 3147,
          title: {},
          body: { 'index.html': {}, 'modules.html': {} },
        },
      ],
      ['grow', { _index: 3169, title: {}, body: { 'index.html': {} } }],
      [
        'grpc/grpc',
        { _index: 2878, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'grpc/proto',
        { _index: 2881, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'guard',
        {
          _index: 1518,
          title: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'guards/RolesGuard.html': {},
          },
          body: { 'coverage.html': {} },
        },
      ],
      [
        'guards',
        {
          _index: 1520,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'guards/RolesGuard.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'gz',
        {
          _index: 2958,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'h1',
        {
          _index: 3333,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'h5',
        {
          _index: 3250,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'handlefilemd5',
        {
          _index: 1263,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      ['hands', { _index: 3142, title: {}, body: { 'index.html': {} } }],
      ['handy', { _index: 3131, title: {}, body: { 'index.html': {} } }],
      [
        'haojingxin0121@qq.com',
        {
          _index: 2261,
          title: {},
          body: {
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
          },
        },
      ],
      [
        'hash',
        {
          _index: 1288,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'hash.update(data',
        {
          _index: 1293,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'headers',
        {
          _index: 1335,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'heic',
        {
          _index: 3011,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'heif',
        {
          _index: 3009,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'height',
        {
          _index: 3320,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'hello',
        { _index: 488, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      ['help', { _index: 3145, title: {}, body: { 'index.html': {} } }],
      ['here', { _index: 3176, title: {}, body: { 'index.html': {} } }],
      [
        'historicalcases',
        {
          _index: 762,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'history.entity.ts',
        {
          _index: 1227,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'history.entity.ts:10',
        {
          _index: 1236,
          title: {},
          body: { 'entities/DiagnosisHistory.html': {} },
        },
      ],
      [
        'history.entity.ts:13',
        {
          _index: 1231,
          title: {},
          body: { 'entities/DiagnosisHistory.html': {} },
        },
      ],
      [
        'history.entity.ts:15',
        {
          _index: 1248,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:19',
        {
          _index: 1247,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:20',
        {
          _index: 1238,
          title: {},
          body: { 'entities/DiagnosisHistory.html': {} },
        },
      ],
      [
        'history.entity.ts:22',
        {
          _index: 1246,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:23',
        {
          _index: 1229,
          title: {},
          body: { 'entities/DiagnosisHistory.html': {} },
        },
      ],
      [
        'history.entity.ts:26',
        {
          _index: 1239,
          title: {},
          body: { 'entities/DiagnosisHistory.html': {} },
        },
      ],
      [
        'history.entity.ts:29',
        {
          _index: 1249,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:32',
        {
          _index: 1245,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:35',
        {
          _index: 1251,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:42',
        {
          _index: 1244,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'history.entity.ts:50',
        {
          _index: 1250,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {} },
        },
      ],
      [
        'host',
        {
          _index: 610,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/MailService.html': {},
            'modules/MenuModule.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RedisService.html': {},
            'modules/RoleModule.html': {},
            'classes/TypeormFilter.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'host.switchtohttp',
        {
          _index: 1785,
          title: {},
          body: {
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'host.switchtohttp().getrequest',
        { _index: 2399, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'html',
        {
          _index: 1919,
          title: {},
          body: {
            'injectables/MailService.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'http',
        {
          _index: 292,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'classes/HttpExceptionFilter.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'http://localhost:5001',
        {
          _index: 710,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'http://localhost:5001/yolo11/plant/classify',
        {
          _index: 1334,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'httpcode',
        {
          _index: 352,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpcode(httpstatus.created',
        {
          _index: 368,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpcode(httpstatus.no_content',
        {
          _index: 384,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpcode(httpstatus.ok',
        {
          _index: 540,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpd',
        {
          _index: 3292,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'httpexception',
        {
          _index: 910,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
          },
        },
      ],
      [
        'httpexceptionfilter',
        {
          _index: 1780,
          title: { 'classes/HttpExceptionFilter.html': {} },
          body: { 'classes/HttpExceptionFilter.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'https://example.com/document.pdf',
        {
          _index: 788,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'https://example.com/image.jpg',
        {
          _index: 797,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'https://example.com/video.mp4',
        {
          _index: 810,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'https://nestjs.com',
        { _index: 3182, title: {}, body: { 'index.html': {} } },
      ],
      [
        'httpstatus',
        {
          _index: 353,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpstatus.forbidden',
        {
          _index: 1693,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'httpstatus.internal_server_error',
        {
          _index: 899,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
          },
        },
      ],
      [
        'httpstatus.not_acceptable',
        {
          _index: 380,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'httpstatus.not_found',
        {
          _index: 1692,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'huggingface',
        {
          _index: 3281,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'icon',
        {
          _index: 1946,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'id',
        {
          _index: 13,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'interfaces/Request-1.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'identifier',
        { _index: 2820, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        "id不能为空！'})@apiproperty({description",
        {
          _index: 2493,
          title: {},
          body: { 'classes/UploadChunkDto-1.html': {} },
        },
      ],
      [
        "id不能为空！'})@isarray({message",
        {
          _index: 2427,
          title: {},
          body: { 'classes/UpdateFilesAccessDto.html': {} },
        },
      ],
      [
        "id不能为空！'})@isint({message",
        { _index: 2420, title: {}, body: { 'classes/UpdateFileDto.html': {} } },
      ],
      [
        "id必须为数字类型！'})@apiproperty({description",
        {
          _index: 2430,
          title: {},
          body: { 'classes/UpdateFilesAccessDto.html': {} },
        },
      ],
      [
        "id必须为数字类型！'})@type(undefined)@apiproperty({description",
        { _index: 2421, title: {}, body: { 'classes/UpdateFileDto.html': {} } },
      ],
      [
        "id必须为数组类型！'})@arrayminsize(1",
        {
          _index: 2428,
          title: {},
          body: { 'classes/UpdateFilesAccessDto.html': {} },
        },
      ],
      [
        'id数组长度至少为1',
        {
          _index: 2425,
          title: {},
          body: {
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        "id数组长度至少为1！'})@transform",
        {
          _index: 2429,
          title: {},
          body: { 'classes/UpdateFilesAccessDto.html': {} },
        },
      ],
      [
        'ignoreexpiration',
        {
          _index: 1812,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'image',
        {
          _index: 1740,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/bmp',
        {
          _index: 3002,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/gif',
        {
          _index: 3000,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/heic',
        {
          _index: 3012,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'image/heif',
        {
          _index: 3010,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'image/jpeg',
        {
          _index: 846,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/png',
        {
          _index: 2998,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/svg+xml',
        {
          _index: 3008,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/tiff',
        {
          _index: 3004,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image/webp',
        {
          _index: 3006,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'image_data',
        { _index: 1797, title: {}, body: { 'classes/ImageRequest.html': {} } },
      ],
      [
        'imagerequest',
        {
          _index: 1794,
          title: { 'classes/ImageRequest.html': {} },
          body: { 'classes/ImageRequest.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'imagetypes',
        {
          _index: 1728,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'imagetypevalue',
        {
          _index: 2869,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'imageurl',
        {
          _index: 763,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'implements',
        {
          _index: 890,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'import',
        {
          _index: 62,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'imports',
        {
          _index: 412,
          title: {},
          body: {
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RedisModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'in(fileids',
        {
          _index: 1088,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'in(filemd5s',
        {
          _index: 1708,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'in_progress',
        {
          _index: 3060,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'inactive',
        {
          _index: 258,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'incrby',
        {
          _index: 2226,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'increment',
        {
          _index: 2200,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'increment(key',
        {
          _index: 2222,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'index',
        {
          _index: 8,
          title: { 'index.html': {} },
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "index('dataset_user_id_fk",
        { _index: 959, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        "index('dataset_user_id_fk_2",
        { _index: 960, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        "index('diagnosis_history_created_by_idx",
        {
          _index: 1241,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        "index('diseasecode",
        {
          _index: 2159,
          title: {},
          body: { 'entities/PlantDiseaseKnowledge.html': {} },
        },
      ],
      [
        "index('file_user_id_fk",
        { _index: 1447, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        "index('file_user_id_fk_2",
        { _index: 1448, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        "index('servicenameidx",
        { _index: 271, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
        },
      ],
      [
        'info.messageid',
        {
          _index: 1941,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      ['information', { _index: 3106, title: {}, body: { 'index.html': {} } }],
      [
        'infrastructure',
        { _index: 3128, title: {}, body: { 'index.html': {} } },
      ],
      [
        'inject',
        {
          _index: 513,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatasetController.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'guards/FilesGuard.html': {},
            'controllers/MenuController.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'inject(auth_service_name',
        {
          _index: 527,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/MenuController.html': {},
          },
        },
      ],
      [
        'inject(file_service_name',
        {
          _index: 998,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'inject(user_service_name',
        {
          _index: 638,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'injectable',
        {
          _index: 81,
          title: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiModelService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/AppService.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatabaseService.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'injectables/MenuService.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
          },
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiModelService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/AppService.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatabaseService.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'injectables/MenuService.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/UploadService.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'injectables',
        {
          _index: 83,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiModelService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/AppService.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatabaseService.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'injectables/MenuService.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'injectrepository',
        {
          _index: 124,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MenuService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'injectrepository(aiservice',
        {
          _index: 130,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'injectrepository(aiserviceaccesslog',
        {
          _index: 426,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'injectrepository(aiserviceconfig',
        {
          _index: 132,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'injectrepository(aiservicelog',
        {
          _index: 425,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'injectrepository(dataset',
        {
          _index: 1060,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'injectrepository(diagnosishistory',
        {
          _index: 1284,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'injectrepository(file',
        {
          _index: 1061,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'injectrepository(fileentity',
        {
          _index: 1669,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'injectrepository(menu',
        {
          _index: 2042,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'injectrepository(plantdiseaseknowledge',
        {
          _index: 1875,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'injectrepository(role',
        {
          _index: 2338,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'install',
        {
          _index: 2235,
          title: {},
          body: { 'injectables/RedisService.html': {}, 'index.html': {} },
        },
      ],
      [
        'installcompile',
        { _index: 3082, title: {}, body: { 'index.html': {} } },
      ],
      [
        'instanceof',
        {
          _index: 903,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'injectables/FileOperationService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'int',
        {
          _index: 33,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Task.html': {},
          },
        },
      ],
      ['interact', { _index: 3148, title: {}, body: { 'index.html': {} } }],
      [
        'interface',
        {
          _index: 438,
          title: {
            'interfaces/ApiResponse.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
          body: {
            'interfaces/ApiResponse.html': {},
            'injectables/AuthGuard.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'interfaces',
        {
          _index: 440,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'internal',
        {
          _index: 900,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
          },
        },
      ],
      [
        'internalservererrorexception',
        {
          _index: 1642,
          title: {},
          body: { 'injectables/FileOperationService-1.html': {} },
        },
      ],
      [
        'inversejoincolumn',
        {
          _index: 50,
          title: {},
          body: { 'entities/AIModel.html': {}, 'entities/Dataset.html': {} },
        },
      ],
      [
        'ioredis',
        {
          _index: 2233,
          title: {},
          body: {
            'injectables/RedisService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'isarray',
        {
          _index: 695,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isarray({message',
        {
          _index: 702,
          title: {},
          body: {
            'classes/CreateAiConfigsDto.html': {},
            'classes/DownloadFilesDto.html': {},
          },
        },
      ],
      [
        'isdate',
        {
          _index: 2100,
          title: {},
          body: { 'injectables/ParseStringDatePipe.html': {} },
        },
      ],
      [
        'isdate(new',
        {
          _index: 2101,
          title: {},
          body: { 'injectables/ParseStringDatePipe.html': {} },
        },
      ],
      [
        'isdatestring',
        {
          _index: 812,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'isemail',
        {
          _index: 881,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isenum',
        {
          _index: 719,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        "isenum(['active",
        {
          _index: 716,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'isenum(userstatus',
        {
          _index: 883,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isglobal',
        {
          _index: 479,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/MailModule.html': {},
            'modules/RedisModule.html': {},
          },
        },
      ],
      [
        'isin',
        {
          _index: 2424,
          title: {},
          body: {
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        "isin(['public",
        {
          _index: 2418,
          title: {},
          body: {
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'isint',
        {
          _index: 682,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'isint({each',
        {
          _index: 730,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'isint({message',
        {
          _index: 2489,
          title: {},
          body: { 'classes/UploadChunkDto-1.html': {} },
        },
      ],
      [
        'islink',
        {
          _index: 1947,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'isnan(numberid',
        {
          _index: 2085,
          title: {},
          body: { 'injectables/ParseFileIdsPipe.html': {} },
        },
      ],
      [
        'isnotempty',
        {
          _index: 683,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'isnotempty()@apiproperty({description',
        {
          _index: 677,
          title: {},
          body: { 'classes/CompleteChunkDto.html': {} },
        },
      ],
      [
        'isnotempty()@isstring()@apiproperty({description',
        {
          _index: 823,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
          },
        },
      ],
      [
        'isnotempty({message',
        {
          _index: 689,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'isnumber',
        {
          _index: 843,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'isobject',
        {
          _index: 882,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isobject({message',
        {
          _index: 885,
          title: {},
          body: { 'classes/CreateUserDto-1.html': {} },
        },
      ],
      [
        'isoptional',
        {
          _index: 720,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@apiproperty({description',
        {
          _index: 867,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@isarray({message',
        {
          _index: 728,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@isdatestring()@apiproperty({description',
        {
          _index: 790,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'isoptional()@isemail',
        {
          _index: 857,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@isenum(userstatus',
        {
          _index: 872,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@isobject({message',
        {
          _index: 866,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@isstring()@apiproperty({description',
        {
          _index: 708,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@isstring()@isurl()@apiproperty({description',
        {
          _index: 787,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'isoptional()@isstring({message',
        {
          _index: 725,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'isoptional()@type(undefined)@apiproperty({description',
        {
          _index: 2407,
          title: {},
          body: { 'classes/UpdateAiConfigDto.html': {} },
        },
      ],
      [
        'isphonenumber',
        {
          _index: 2475,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        "isphonenumber('cn",
        {
          _index: 2476,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        "isphonenumber('cn')@isoptional()@apiproperty({description",
        {
          _index: 2472,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'isstring',
        {
          _index: 696,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'isstring()@apiproperty({description',
        {
          _index: 712,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'isstring()@isnotempty()@apiproperty({description',
        {
          _index: 784,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'isstring({message',
        {
          _index: 688,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'isurl',
        {
          _index: 813,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'isvalid',
        {
          _index: 651,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'item',
        {
          _index: 2095,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      [
        'item.trim',
        {
          _index: 2093,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      [
        'items',
        {
          _index: 3319,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'jar',
        {
          _index: 3285,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['job', { _index: 3162, title: {}, body: { 'index.html': {} } }],
      ['jobs', { _index: 3164, title: {}, body: { 'index.html': {} } }],
      [
        'join',
        {
          _index: 1395,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'controllers/UserController.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'joincolumn',
        {
          _index: 48,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/Menu.html': {},
            'entities/Profile.html': {},
          },
        },
      ],
      [
        'jointable',
        {
          _index: 64,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/Dataset.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'jpeg',
        {
          _index: 2996,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'js',
        {
          _index: 2879,
          title: {},
          body: {
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'json',
        {
          _index: 1230,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RedisService.html': {},
            'entities/Task.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'json.parse(data',
        {
          _index: 2245,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'json.stringify(value',
        {
          _index: 2241,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'justify',
        {
          _index: 3316,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'jwt',
        {
          _index: 622,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/JwtStrategy.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'jwtfromrequest',
        {
          _index: 1810,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'jwtmodule',
        { _index: 1544, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'jwtmodule.registerasync',
        { _index: 1551, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'jwtservice',
        {
          _index: 617,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'jwtstrategy',
        {
          _index: 599,
          title: { 'injectables/JwtStrategy.html': {} },
          body: {
            'modules/AuthModule.html': {},
            'injectables/JwtStrategy.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['kamil', { _index: 3179, title: {}, body: { 'index.html': {} } }],
      [
        'kb',
        {
          _index: 3300,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'key',
        {
          _index: 2209,
          title: {},
          body: {
            'injectables/RedisService.html': {},
            'injectables/RoleService.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'keys[1',
        {
          _index: 2253,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'knowledge',
        {
          _index: 1818,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'knowledge.controller',
        {
          _index: 1858,
          title: {},
          body: { 'modules/KnowledgeModule.html': {} },
        },
      ],
      [
        'knowledge.dto',
        {
          _index: 1839,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'knowledge.dto.ts',
        {
          _index: 747,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'knowledge.dto.ts:105',
        {
          _index: 795,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:107',
        {
          _index: 2450,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:11',
        {
          _index: 2447,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:113',
        {
          _index: 794,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:115',
        {
          _index: 2454,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:121',
        {
          _index: 799,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:123',
        {
          _index: 2443,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:129',
        {
          _index: 779,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:131',
        {
          _index: 2440,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:137',
        {
          _index: 776,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:139',
        {
          _index: 2444,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:145',
        {
          _index: 780,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:147',
        {
          _index: 2456,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:153',
        {
          _index: 801,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:156',
        {
          _index: 2453,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:162',
        {
          _index: 798,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:165',
        {
          _index: 2449,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:17',
        {
          _index: 785,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:171',
        {
          _index: 789,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:174',
        {
          _index: 2463,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:180',
        {
          _index: 811,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:182',
        {
          _index: 2441,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:188',
        {
          _index: 777,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:19',
        {
          _index: 2445,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:190',
        {
          _index: 2458,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:196',
        {
          _index: 805,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:198',
        {
          _index: 2462,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:204',
        {
          _index: 809,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:206',
        {
          _index: 2452,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:212',
        {
          _index: 796,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:214',
        {
          _index: 2455,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:220',
        {
          _index: 800,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:25',
        {
          _index: 782,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:27',
        {
          _index: 2457,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:33',
        {
          _index: 804,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:35',
        {
          _index: 2461,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:41',
        {
          _index: 808,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:43',
        {
          _index: 2460,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:49',
        {
          _index: 807,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:51',
        {
          _index: 2442,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:57',
        {
          _index: 778,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:59',
        {
          _index: 2448,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:65',
        {
          _index: 786,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:67',
        {
          _index: 2439,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:73',
        {
          _index: 775,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:75',
        {
          _index: 2438,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:81',
        {
          _index: 774,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:83',
        {
          _index: 2446,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:89',
        {
          _index: 783,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:91',
        {
          _index: 2459,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:97',
        {
          _index: 806,
          title: {},
          body: { 'classes/CreatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.dto.ts:99',
        {
          _index: 2451,
          title: {},
          body: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
        },
      ],
      [
        'knowledge.entity',
        {
          _index: 1860,
          title: {},
          body: {
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'knowledge.service',
        {
          _index: 1841,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
          },
        },
      ],
      [
        'knowledgecontroller',
        {
          _index: 1816,
          title: { 'controllers/KnowledgeController.html': {} },
          body: {
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'knowledgecreate',
        {
          _index: 1819,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgecreate(@body',
        {
          _index: 1843,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgecreate(dto',
        {
          _index: 1825,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgedelete',
        {
          _index: 1820,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        "knowledgedelete(@param('id",
        {
          _index: 1852,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgedelete(id',
        {
          _index: 1827,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgedetailget',
        {
          _index: 1821,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        "knowledgedetailget(@param('id",
        {
          _index: 1848,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgedetailget(id',
        {
          _index: 1830,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgeget',
        {
          _index: 1822,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'knowledgelistget',
        {
          _index: 1823,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'knowledgelistget(page',
        {
          _index: 1833,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'knowledgemodule',
        {
          _index: 1854,
          title: { 'modules/KnowledgeModule.html': {} },
          body: {
            'modules/KnowledgeModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'knowledgerepository',
        {
          _index: 1866,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'knowledgeservice',
        {
          _index: 1840,
          title: { 'injectables/KnowledgeService.html': {} },
          body: {
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'knowledgeupdate',
        {
          _index: 1824,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'knowledgeupdate(id',
        {
          _index: 1835,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'last_updated',
        {
          _index: 1724,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'lastvaluefrom',
        {
          _index: 520,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "latin1').tostring",
        {
          _index: 1177,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      ['learn', { _index: 3134, title: {}, body: { 'index.html': {} } }],
      [
        'legend',
        {
          _index: 209,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'length',
        {
          _index: 37,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'length(5',
        {
          _index: 875,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'length(6',
        {
          _index: 860,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'level',
        {
          _index: 1414,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'libs/database/src/database.module.ts',
        { _index: 912, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'libs/database/src/database.module.ts:10',
        { _index: 920, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'libs/database/src/database.module.ts:44',
        { _index: 917, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'libs/database/src/database.service.ts',
        {
          _index: 943,
          title: {},
          body: { 'injectables/DatabaseService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities',
        {
          _index: 1355,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'libs/database/src/entities/ai',
        {
          _index: 6,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'libs/database/src/entities/base.entity.ts',
        {
          _index: 666,
          title: {},
          body: { 'classes/BaseEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/base.entity.ts:12',
        { _index: 668, title: {}, body: { 'classes/BaseEntity.html': {} } },
      ],
      [
        'libs/database/src/entities/base.entity.ts:15',
        { _index: 671, title: {}, body: { 'classes/BaseEntity.html': {} } },
      ],
      [
        'libs/database/src/entities/base.entity.ts:9',
        { _index: 669, title: {}, body: { 'classes/BaseEntity.html': {} } },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts',
        {
          _index: 945,
          title: {},
          body: { 'entities/Dataset.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts:10',
        { _index: 954, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts:13',
        { _index: 950, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts:16',
        { _index: 948, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts:19',
        { _index: 949, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts:22',
        { _index: 955, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'libs/database/src/entities/dataset.entity.ts:30',
        { _index: 953, title: {}, body: { 'entities/Dataset.html': {} } },
      ],
      [
        'libs/database/src/entities/diagnosis',
        {
          _index: 1226,
          title: {},
          body: { 'entities/DiagnosisHistory.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/file.entity.ts',
        {
          _index: 1428,
          title: {},
          body: { 'entities/File.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/file.entity.ts:16',
        { _index: 1441, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:19',
        { _index: 1442, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:22',
        { _index: 1437, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:25',
        { _index: 1439, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:28',
        { _index: 1440, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:31',
        { _index: 1436, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:34',
        { _index: 1430, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:37',
        { _index: 1431, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:40',
        { _index: 1443, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:43',
        { _index: 1444, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/file.entity.ts:49',
        { _index: 1433, title: {}, body: { 'entities/File.html': {} } },
      ],
      [
        'libs/database/src/entities/plant.entity.ts',
        {
          _index: 2103,
          title: {},
          body: { 'entities/Plant.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/plant.entity.ts:11',
        { _index: 2104, title: {}, body: { 'entities/Plant.html': {} } },
      ],
      [
        'libs/database/src/entities/plant.entity.ts:14',
        { _index: 2107, title: {}, body: { 'entities/Plant.html': {} } },
      ],
      [
        'libs/database/src/entities/plant.entity.ts:8',
        { _index: 2105, title: {}, body: { 'entities/Plant.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts',
        {
          _index: 2171,
          title: {},
          body: { 'entities/Profile.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:13',
        { _index: 2180, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:16',
        { _index: 2179, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:19',
        { _index: 2177, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:22',
        { _index: 2181, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:25',
        { _index: 2182, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:28',
        { _index: 2176, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/profile.entity.ts:33',
        { _index: 2184, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'libs/database/src/entities/role.entity.ts',
        {
          _index: 2272,
          title: {},
          body: { 'entities/Role.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/role.entity.ts:11',
        { _index: 2274, title: {}, body: { 'entities/Role.html': {} } },
      ],
      [
        'libs/database/src/entities/role.entity.ts:14',
        { _index: 2277, title: {}, body: { 'entities/Role.html': {} } },
      ],
      [
        'libs/database/src/entities/role.entity.ts:8',
        { _index: 2275, title: {}, body: { 'entities/Role.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts',
        {
          _index: 2367,
          title: {},
          body: { 'entities/Task.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/task.entity.ts:10',
        { _index: 2375, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:13',
        { _index: 2374, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:16',
        { _index: 2372, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:19',
        { _index: 2378, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:22',
        { _index: 2380, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:25',
        { _index: 2377, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:28',
        { _index: 2370, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:31',
        { _index: 2371, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:34',
        { _index: 2379, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:37',
        { _index: 2382, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/task.entity.ts:7',
        { _index: 2373, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'libs/database/src/entities/user.entity.ts',
        {
          _index: 2639,
          title: {},
          body: { 'entities/User.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/database/src/entities/user.entity.ts:12',
        { _index: 2649, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'libs/database/src/entities/user.entity.ts:15',
        { _index: 2641, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'libs/database/src/entities/user.entity.ts:18',
        { _index: 2648, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'libs/database/src/entities/user.entity.ts:23',
        { _index: 2647, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'libs/database/src/entities/user.entity.ts:27',
        { _index: 2644, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'libs/database/src/entities/user.entity.ts:9',
        { _index: 2640, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'libs/file',
        {
          _index: 1559,
          title: {},
          body: {
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'libs/mail/src/mail.module.ts',
        { _index: 1911, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'libs/mail/src/mail.service.ts',
        {
          _index: 1913,
          title: {},
          body: { 'injectables/MailService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/mail/src/mail.service.ts:25',
        {
          _index: 1920,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'libs/mail/src/mail.service.ts:8',
        {
          _index: 1916,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.module.ts',
        { _index: 2193, title: {}, body: { 'modules/RedisModule.html': {} } },
      ],
      [
        'libs/redis/src/redis.service.ts',
        {
          _index: 2195,
          title: {},
          body: { 'injectables/RedisService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:109',
        {
          _index: 2229,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:131',
        {
          _index: 2218,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:149',
        {
          _index: 2227,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:28',
        {
          _index: 2232,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:43',
        {
          _index: 2221,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:59',
        {
          _index: 2215,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:70',
        {
          _index: 2224,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:83',
        {
          _index: 2208,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'libs/redis/src/redis.service.ts:9',
        {
          _index: 2203,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'license',
        {
          _index: 3185,
          title: {},
          body: { 'index.html': {}, 'properties.html': {} },
        },
      ],
      ['licensed', { _index: 3167, title: {}, body: { 'index.html': {} } }],
      [
        'link',
        {
          _index: 534,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'link.dto.ts',
        {
          _index: 850,
          title: {},
          body: { 'classes/CreateTempLinkDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'link.dto.ts:11',
        {
          _index: 852,
          title: {},
          body: { 'classes/CreateTempLinkDto.html': {} },
        },
      ],
      ['linkedin', { _index: 3161, title: {}, body: { 'index.html': {} } }],
      [
        'list',
        {
          _index: 376,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
          },
        },
      ],
      [
        'literal',
        {
          _index: 558,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
            'classes/UploadChunkDto.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'loader',
        { _index: 2882, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'localhost',
        {
          _index: 611,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'lock',
        {
          _index: 1318,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'lockkey',
        {
          _index: 2212,
          title: {},
          body: {
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'log.entity',
        {
          _index: 267,
          title: {},
          body: {
            'entities/AiService.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'log.entity.ts',
        {
          _index: 274,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceLog.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'log.entity.ts:13',
        {
          _index: 280,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceLog.html': {},
          },
        },
      ],
      [
        'log.entity.ts:17',
        {
          _index: 285,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceLog.html': {},
          },
        },
      ],
      [
        'log.entity.ts:20',
        {
          _index: 288,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'log.entity.ts:23',
        {
          _index: 281,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'log.entity.ts:24',
        { _index: 401, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        'log.entity.ts:26',
        {
          _index: 282,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'log.entity.ts:27',
        { _index: 402, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        'log.entity.ts:29',
        {
          _index: 286,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'log.entity.ts:30',
        { _index: 398, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        'log_level',
        {
          _index: 3055,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'log_on',
        {
          _index: 3056,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'logenum',
        {
          _index: 2927,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'logger',
        {
          _index: 1385,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'logger(downloadservice.name',
        {
          _index: 1391,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'logger(uploadservice.name',
        {
          _index: 2571,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'logging',
        { _index: 938, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'logid',
        { _index: 395, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      [
        'login',
        {
          _index: 494,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'login(@body',
        {
          _index: 541,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'login(@payload',
        {
          _index: 574,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'login(dto',
        {
          _index: 499,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'login(login',
        {
          _index: 624,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'login(payload',
        {
          _index: 557,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'logindto',
        {
          _index: 500,
          title: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'logout',
        {
          _index: 2657,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'logtype',
        { _index: 396, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      ['looking', { _index: 3107, title: {}, body: { 'index.html': {} } }],
      ['loop', { _index: 3158, title: {}, body: { 'index.html': {} } }],
      ['lts.1', { _index: 2907, title: {}, body: { 'dependencies.html': {} } }],
      [
        'lua',
        {
          _index: 2230,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'm4a',
        {
          _index: 2950,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mail',
        {
          _index: 618,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'mail.service',
        { _index: 1912, title: {}, body: { 'modules/MailModule.html': {} } },
      ],
      [
        'mail_from',
        {
          _index: 3054,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mail_host',
        {
          _index: 3049,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mail_pass',
        {
          _index: 3053,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mail_port',
        {
          _index: 3050,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mail_secure',
        {
          _index: 3051,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mail_user',
        {
          _index: 3052,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mailmodule',
        {
          _index: 1906,
          title: { 'modules/MailModule.html': {} },
          body: {
            'modules/MailModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'mailservice',
        {
          _index: 619,
          title: { 'injectables/MailService.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['makes', { _index: 3115, title: {}, body: { 'index.html': {} } }],
      [
        'manager',
        { _index: 2885, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'manageservice',
        {
          _index: 1032,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      ['managing', { _index: 3127, title: {}, body: { 'index.html': {} } }],
      [
        'manytomany',
        {
          _index: 65,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/Dataset.html': {},
            'entities/File.html': {},
            'entities/Plant.html': {},
            'entities/Role.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'manytomany(undefined',
        {
          _index: 45,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/Dataset.html': {},
            'entities/File.html': {},
            'entities/Plant.html': {},
            'entities/Role.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'manytoone',
        {
          _index: 289,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/Menu.html': {},
          },
        },
      ],
      [
        'manytoone(undefined',
        {
          _index: 283,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/Menu.html': {},
          },
        },
      ],
      [
        'map((item',
        {
          _index: 2092,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      [
        'map((menu',
        {
          _index: 2054,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'margin',
        {
          _index: 3312,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'match',
        {
          _index: 3296,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'match[2].tolowercase',
        {
          _index: 3299,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'matches',
        {
          _index: 1898,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'matches(/^[a',
        {
          _index: 1890,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'matching',
        {
          _index: 80,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'matroska',
        {
          _index: 3022,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['mau', { _index: 3111, title: {}, body: { 'index.html': {} } }],
      [
        'max(file.updatedat',
        {
          _index: 1723,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'maxretries',
        {
          _index: 2207,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'maxsize',
        {
          _index: 1751,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'mb',
        {
          _index: 3301,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'md5',
        {
          _index: 838,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        "md5不能为空！'})@isstring({message",
        {
          _index: 836,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        "md5必须为字符串类型！'})@apiproperty({description",
        {
          _index: 837,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
          },
        },
      ],
      [
        "md5必须为字符串类型！'})@type(undefined)@apiproperty({description",
        {
          _index: 2491,
          title: {},
          body: { 'classes/UploadChunkDto-1.html': {} },
        },
      ],
      [
        'menu',
        {
          _index: 1943,
          title: { 'entities/Menu.html': {} },
          body: {
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'menu.children',
        { _index: 1965, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'menu.children)@joincolumn({name',
        { _index: 1957, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'menu.controller',
        { _index: 2028, title: {}, body: { 'modules/MenuModule.html': {} } },
      ],
      [
        'menu.create',
        {
          _index: 1996,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'menu.entity',
        {
          _index: 2011,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'menu.findall',
        {
          _index: 1994,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'menu.findone',
        {
          _index: 1995,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'menu.getroutes',
        {
          _index: 1991,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'menu.icon',
        {
          _index: 2055,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menu.islink',
        {
          _index: 2058,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menu.parent',
        { _index: 1952, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'menu.parentid',
        {
          _index: 2052,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menu.path',
        {
          _index: 2057,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menu.remove',
        {
          _index: 1998,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'menu.service',
        {
          _index: 2013,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'menu.title',
        {
          _index: 2056,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menu.update',
        {
          _index: 1997,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
        },
      ],
      [
        'menucontroller',
        {
          _index: 1966,
          title: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
          },
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'menudata',
        {
          _index: 1972,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'menumodule',
        {
          _index: 467,
          title: { 'modules/MenuModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/MenuModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'menurepository',
        {
          _index: 2033,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menus',
        {
          _index: 2043,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menus.sort((a',
        {
          _index: 2046,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'menuservice',
        {
          _index: 2012,
          title: { 'injectables/MenuService.html': {} },
          body: {
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'mergefile',
        {
          _index: 1566,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'mergefile(chunkpath',
        {
          _index: 1580,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'mergefiles',
        {
          _index: 1567,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'mergefiles(chunkpaths',
        {
          _index: 1584,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'message',
        {
          _index: 397,
          title: {},
          body: {
            'entities/AiServiceLog.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'injectables/AuthService.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileService.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/MailService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'injectables/RoleService.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'messagepattern',
        {
          _index: 567,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'messagepattern({cmd',
        {
          _index: 554,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'metadata',
        {
          _index: 2079,
          title: {},
          body: {
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'method',
        { _index: 2404, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'methods',
        {
          _index: 88,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'mime',
        {
          _index: 1161,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/FileTypeValidationPipe.html': {},
          },
        },
      ],
      [
        'mime_type',
        {
          _index: 1129,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'mime_type.jpeg',
        {
          _index: 1181,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'mimetype',
        {
          _index: 1159,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        "mimetype.startswith('application",
        {
          _index: 1166,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "mimetype.startswith('audio",
        {
          _index: 1168,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "mimetype.startswith('image",
        {
          _index: 1162,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "mimetype.startswith('video",
        {
          _index: 1164,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'mimetypevalue',
        {
          _index: 2870,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'miscellaneous',
        {
          _index: 2919,
          title: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['mit', { _index: 3166, title: {}, body: { 'index.html': {} } }],
      [
        'mkdir',
        {
          _index: 1599,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'mkdir(dirpath',
        {
          _index: 1603,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'mkdirsync',
        {
          _index: 1134,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'mkdirsync(folder',
        {
          _index: 1171,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'mkv',
        {
          _index: 3021,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'mode',
        {
          _index: 1319,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'model',
        {
          _index: 163,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'entities/AiService.html': {},
            'entities/Plant.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'model.controller',
        { _index: 220, title: {}, body: { 'modules/AiModelModule.html': {} } },
      ],
      [
        'model.controller.ts',
        {
          _index: 161,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'model.controller.ts:21',
        {
          _index: 172,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'model.controller.ts:26',
        {
          _index: 173,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'model.controller.ts:31',
        {
          _index: 176,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'model.controller.ts:36',
        {
          _index: 183,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'model.controller.ts:41',
        {
          _index: 179,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'model.dto',
        {
          _index: 192,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'classes/UpdateAiModelDto.html': {},
          },
        },
      ],
      [
        'model.dto.ts',
        {
          _index: 706,
          title: {},
          body: {
            'classes/CreateAiModelDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'model.entity',
        {
          _index: 269,
          title: {},
          body: { 'entities/AiService.html': {}, 'entities/Plant.html': {} },
        },
      ],
      [
        'model.entity.ts',
        {
          _index: 7,
          title: {},
          body: { 'entities/AIModel.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'model.entity.ts:14',
        { _index: 41, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:17',
        { _index: 42, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:20',
        { _index: 61, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:23',
        { _index: 39, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:31',
        { _index: 51, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:41',
        { _index: 57, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:44',
        { _index: 34, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:47',
        { _index: 60, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:54',
        { _index: 31, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.entity.ts:62',
        { _index: 59, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'model.module.ts',
        { _index: 219, title: {}, body: { 'modules/AiModelModule.html': {} } },
      ],
      [
        'model.service',
        {
          _index: 191,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
          },
        },
      ],
      [
        'model.service.ts',
        {
          _index: 221,
          title: {},
          body: { 'injectables/AiModelService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'model.service.ts:11',
        {
          _index: 223,
          title: {},
          body: { 'injectables/AiModelService.html': {} },
        },
      ],
      [
        'model.service.ts:15',
        {
          _index: 224,
          title: {},
          body: { 'injectables/AiModelService.html': {} },
        },
      ],
      [
        'model.service.ts:19',
        {
          _index: 226,
          title: {},
          body: { 'injectables/AiModelService.html': {} },
        },
      ],
      [
        'model.service.ts:23',
        {
          _index: 225,
          title: {},
          body: { 'injectables/AiModelService.html': {} },
        },
      ],
      [
        'model.service.ts:7',
        {
          _index: 222,
          title: {},
          body: { 'injectables/AiModelService.html': {} },
        },
      ],
      [
        'model.supportplants',
        { _index: 2106, title: {}, body: { 'entities/Plant.html': {} } },
      ],
      [
        'model.supportservices',
        { _index: 262, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'model/ai',
        {
          _index: 160,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'model/dto/create',
        {
          _index: 705,
          title: {},
          body: { 'classes/CreateAiModelDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'model/dto/update',
        {
          _index: 2408,
          title: {},
          body: { 'classes/UpdateAiModelDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'model_path',
        {
          _index: 691,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
          },
        },
      ],
      [
        'modelid',
        {
          _index: 75,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'modelmimetypes',
        {
          _index: 3246,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'modelmimetypes[extension.tolowercase',
        {
          _index: 3263,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'models_aiservices',
        { _index: 56, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'models_plants',
        { _index: 47, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'module',
        {
          _index: 205,
          title: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/MenuModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/MenuModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules',
        {
          _index: 207,
          title: { 'modules.html': {} },
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/MenuModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules/auth/auth.module',
        { _index: 476, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'modules/menu/menu.module',
        { _index: 477, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      ['more', { _index: 3105, title: {}, body: { 'index.html': {} } }],
      [
        'mov',
        {
          _index: 3018,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'movefile',
        {
          _index: 1568,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'movefile(oldpath',
        {
          _index: 1587,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'mp3',
        {
          _index: 2940,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'mp4',
        {
          _index: 3013,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'mpeg',
        {
          _index: 3028,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ms',
        {
          _index: 2954,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'msdownload',
        {
          _index: 2935,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'msi',
        {
          _index: 2936,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'msvideo',
        {
          _index: 3017,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'multer',
        {
          _index: 1137,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'multipart/form',
        {
          _index: 1337,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'mxnet',
        {
          _index: 3280,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'mysql2',
        { _index: 2908, title: {}, body: { 'dependencies.html': {} } },
      ],
      ['myśliwiec', { _index: 3180, title: {}, body: { 'index.html': {} } }],
      [
        'name',
        {
          _index: 14,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'namespace',
        {
          _index: 594,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        "name不能为空！'})@apiproperty({description",
        {
          _index: 733,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        "name必须是字符串！'})@isnotempty({message",
        {
          _index: 732,
          title: {},
          body: { 'classes/CreateDatasetDto.html': {} },
        },
      ],
      [
        "name必须是字符串！'})@isoptional({message",
        {
          _index: 2415,
          title: {},
          body: { 'classes/UpdateDatasetDto.html': {} },
        },
      ],
      ['need', { _index: 3153, title: {}, body: { 'index.html': {} } }],
      ['nest', { _index: 3076, title: {}, body: { 'index.html': {} } }],
      [
        'nestframework',
        { _index: 3184, title: {}, body: { 'index.html': {} } },
      ],
      ['nestjs', { _index: 3097, title: {}, body: { 'index.html': {} } }],
      [
        'nestjs/cache',
        { _index: 2884, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'nestjs/common',
        {
          _index: 123,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'controllers/PlantController.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/config',
        {
          _index: 472,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/AuthGuard.html': {},
            'modules/DatabaseModule.html': {},
            'modules/FileModule.html': {},
            'injectables/JwtStrategy.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/core',
        {
          _index: 2357,
          title: {},
          body: { 'guards/RolesGuard.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nestjs/jwt',
        {
          _index: 633,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'modules/FileModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/mapped',
        {
          _index: 2411,
          title: {},
          body: {
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/microservices',
        {
          _index: 515,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/passport',
        {
          _index: 589,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/JwtStrategy.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/platform',
        {
          _index: 1132,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/swagger',
        {
          _index: 189,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'classes/DownloadFilesDto.html': {},
            'controllers/KnowledgeController.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'controllers/RoleController.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadSingleDto.html': {},
            'controllers/UserController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/typeorm',
        {
          _index: 125,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatasetService.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MenuService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/typeorm/dist/interfaces/entity',
        { _index: 922, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'new',
        {
          _index: 139,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/TypeormFilter.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'newconfig',
        {
          _index: 143,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'newconfigs',
        {
          _index: 146,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'newpath',
        {
          _index: 1588,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'newuser',
        {
          _index: 642,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'newuser.id',
        {
          _index: 645,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      ['node.js', { _index: 3069, title: {}, body: { 'index.html': {} } }],
      [
        'nodemailer',
        {
          _index: 1922,
          title: {},
          body: { 'injectables/MailService.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'nodemailer.createtransport',
        {
          _index: 1924,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'nodemailer.transporter',
        {
          _index: 1921,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'none',
        {
          _index: 3338,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'notfoundexception',
        {
          _index: 122,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        "notfoundexception('ai",
        {
          _index: 140,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'notify',
        {
          _index: 553,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'notify(@payload',
        {
          _index: 576,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'notify(payload',
        {
          _index: 561,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'notifyaccount',
        {
          _index: 614,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'notifyaccount(email',
        {
          _index: 626,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'npm',
        {
          _index: 2234,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'null',
        {
          _index: 44,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'controllers/AiServiceController.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AuthController.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'injectables/FileService.html': {},
            'classes/HttpExceptionFilter.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'injectables/UploadService.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "null'})@joincolumn({name",
        {
          _index: 1235,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        'nullable',
        {
          _index: 26,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 32,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'injectables/AuthGuard.html': {},
            'classes/BaseEntity.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'number(file.filesize',
        {
          _index: 1081,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'number(id',
        {
          _index: 2084,
          title: {},
          body: { 'injectables/ParseFileIdsPipe.html': {} },
        },
      ],
      [
        'number(v',
        {
          _index: 1383,
          title: {},
          body: {
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'numberid',
        {
          _index: 2083,
          title: {},
          body: { 'injectables/ParseFileIdsPipe.html': {} },
        },
      ],
      [
        'nx',
        {
          _index: 2210,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'object',
        {
          _index: 906,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        'object.assign(aiservice',
        {
          _index: 436,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'object.assign(file',
        {
          _index: 1694,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'object.assign(role',
        {
          _index: 2345,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'object.values(mime_type.application',
        {
          _index: 3241,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'object.values(mime_type.audio',
        {
          _index: 3242,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'object.values(mime_type.font',
        {
          _index: 3244,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'object.values(mime_type.image',
        {
          _index: 3239,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'object.values(mime_type.other',
        {
          _index: 3243,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'object.values(mime_type.video',
        {
          _index: 3240,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'observable',
        {
          _index: 896,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'occurred',
        {
          _index: 1792,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'octetstream',
        {
          _index: 3293,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['offer', { _index: 3163, title: {}, body: { 'index.html': {} } }],
      [
        'officedocument.presentationml.presentation',
        {
          _index: 2978,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'officedocument.spreadsheetml.sheet',
        {
          _index: 2974,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'officedocument.wordprocessingml.document',
        {
          _index: 2969,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['official', { _index: 3112, title: {}, body: { 'index.html': {} } }],
      [
        'ogg',
        {
          _index: 2944,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ogg_audio',
        {
          _index: 3032,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'ogg_video',
        {
          _index: 3026,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'oldpath',
        {
          _index: 1590,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'ondelete',
        {
          _index: 1233,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
          },
        },
      ],
      [
        'onetomany',
        {
          _index: 265,
          title: {},
          body: { 'entities/AiService.html': {}, 'entities/Menu.html': {} },
        },
      ],
      [
        'onetomany(undefined',
        {
          _index: 240,
          title: {},
          body: { 'entities/AiService.html': {}, 'entities/Menu.html': {} },
        },
      ],
      [
        'onetoone',
        {
          _index: 2185,
          title: {},
          body: { 'entities/Profile.html': {}, 'entities/User.html': {} },
        },
      ],
      [
        'onetoone(undefined',
        { _index: 2642, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'onetoone(undefined)@joincolumn',
        { _index: 2183, title: {}, body: { 'entities/Profile.html': {} } },
      ],
      [
        'onmoduledestroy',
        {
          _index: 2201,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'onnx',
        {
          _index: 3253,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'onupdate',
        {
          _index: 58,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
          },
        },
      ],
      ['open', { _index: 3168, title: {}, body: { 'index.html': {} } }],
      [
        'operation',
        {
          _index: 1212,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'operation.module.ts',
        {
          _index: 1561,
          title: {},
          body: { 'modules/FileOperationModule.html': {} },
        },
      ],
      [
        'operation.service',
        {
          _index: 1148,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'operation.service.ts',
        {
          _index: 1562,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'operation.service.ts:107',
        {
          _index: 1585,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:13',
        {
          _index: 1641,
          title: {},
          body: { 'injectables/FileOperationService-1.html': {} },
        },
      ],
      [
        'operation.service.ts:135',
        {
          _index: 1589,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:150',
        {
          _index: 1595,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:161',
        {
          _index: 1574,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:21',
        {
          _index: 1578,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:26',
        {
          _index: 1639,
          title: {},
          body: { 'injectables/FileOperationService-1.html': {} },
        },
      ],
      [
        'operation.service.ts:34',
        {
          _index: 1592,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:44',
        {
          _index: 1640,
          title: {},
          body: { 'injectables/FileOperationService-1.html': {} },
        },
      ],
      [
        'operation.service.ts:48',
        {
          _index: 1576,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:61',
        {
          _index: 1638,
          title: {},
          body: { 'injectables/FileOperationService-1.html': {} },
        },
      ],
      [
        'operation.service.ts:65',
        {
          _index: 1572,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation.service.ts:90',
        {
          _index: 1582,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'operation/file',
        {
          _index: 1666,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'operation/src/file',
        {
          _index: 1560,
          title: {},
          body: {
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'optional',
        {
          _index: 101,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
        },
      ],
      [
        'options',
        {
          _index: 609,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'opus',
        {
          _index: 3270,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'order',
        {
          _index: 1343,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        "orderby('file.id",
        {
          _index: 1686,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'originalfilename',
        {
          _index: 1306,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'otf',
        {
          _index: 2990,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'otherexceptionsfilter',
        {
          _index: 2067,
          title: { 'classes/OtherExceptionsFilter.html': {} },
          body: {
            'classes/OtherExceptionsFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'othertypes',
        {
          _index: 1738,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'othertypevalue',
        {
          _index: 2871,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'out',
        {
          _index: 218,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'overview',
        {
          _index: 3189,
          title: { 'overview.html': {} },
          body: { 'overview.html': {} },
        },
      ],
      [
        'p',
        {
          _index: 3335,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'package',
        {
          _index: 2877,
          title: { 'dependencies.html': {}, 'properties.html': {} },
          body: {},
        },
      ],
      [
        'packages/.../config.enum.ts',
        {
          _index: 2924,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/.../html.ts',
        {
          _index: 3218,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/.../mime.enum.ts',
        {
          _index: 2922,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/.../mime.ts',
        {
          _index: 3209,
          title: {},
          body: {
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'packages/.../parse.ts',
        {
          _index: 3216,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/.../response.helper.ts',
        {
          _index: 3215,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/.../role.enum.ts',
        {
          _index: 2928,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/.../roles.decorator.ts',
        {
          _index: 3217,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/.../status.enum.ts',
        {
          _index: 2929,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/.../user.enum.ts',
        {
          _index: 2930,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/common/src/decorator/roles.decorator.ts',
        {
          _index: 2862,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/common/src/dto/dataset/create',
        {
          _index: 722,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'injectables/DatasetService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/dto/dataset/update',
        {
          _index: 1059,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'classes/UpdateDatasetDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/dto/file/complete',
        {
          _index: 674,
          title: {},
          body: { 'classes/CompleteChunkDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/dto/file/create',
        {
          _index: 829,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/dto/file/download',
        {
          _index: 1376,
          title: {},
          body: { 'classes/DownloadFilesDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/dto/file/update',
        {
          _index: 2417,
          title: {},
          body: {
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/dto/file/upload',
        {
          _index: 2488,
          title: {},
          body: { 'classes/UploadChunkDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/dto/image',
        {
          _index: 1795,
          title: {},
          body: { 'classes/ImageRequest.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/filters/http',
        {
          _index: 1781,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/filters/other',
        {
          _index: 2068,
          title: {},
          body: {
            'classes/OtherExceptionsFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/filters/rpc',
        {
          _index: 888,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/filters/typeorm.filter.ts',
        {
          _index: 2394,
          title: {},
          body: { 'classes/TypeormFilter.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/filters/typeorm.filter.ts:7',
        { _index: 2396, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'packages/common/src/guards/auth.guard.ts',
        {
          _index: 582,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/common/src/guards/auth.guard.ts:20',
        { _index: 587, title: {}, body: { 'injectables/AuthGuard.html': {} } },
      ],
      [
        'packages/common/src/guards/roles.guard.ts',
        {
          _index: 2351,
          title: {},
          body: { 'guards/RolesGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'packages/common/src/guards/roles.guard.ts:10',
        { _index: 2355, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'packages/common/src/guards/roles.guard.ts:7',
        { _index: 2354, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'packages/common/src/pipe/string',
        {
          _index: 2097,
          title: {},
          body: {
            'injectables/ParseStringDatePipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'packages/shared/src/constants/html.ts',
        {
          _index: 2863,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/shared/src/constants/mime.ts',
        {
          _index: 2864,
          title: {},
          body: {
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'packages/shared/src/enum/config.enum.ts',
        {
          _index: 3037,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/shared/src/enum/mime.enum.ts',
        {
          _index: 2932,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/shared/src/enum/role.enum.ts',
        {
          _index: 3057,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/shared/src/enum/status.enum.ts',
        {
          _index: 3059,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/shared/src/enum/user.enum.ts',
        {
          _index: 3063,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'packages/shared/src/helpers/response.helper.ts',
        {
          _index: 441,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'packages/shared/src/utils/mime.ts',
        {
          _index: 2873,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'packages/shared/src/utils/parse.ts',
        {
          _index: 2874,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'padding',
        {
          _index: 3313,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'page',
        {
          _index: 323,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
        },
      ],
      [
        'pagesize',
        {
          _index: 320,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
        },
      ],
      [
        'param',
        {
          _index: 186,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'injectables/RedisService.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "param('id",
        {
          _index: 1850,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'parameters',
        {
          _index: 100,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'params',
        {
          _index: 3259,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'parent',
        {
          _index: 1948,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'parentid',
        {
          _index: 1949,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'parsedsize',
        {
          _index: 1757,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'parsefileidspipe',
        {
          _index: 2076,
          title: { 'injectables/ParseFileIdsPipe.html': {} },
          body: {
            'injectables/ParseFileIdsPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'parsefiletypepipe',
        {
          _index: 2088,
          title: { 'injectables/ParseFileTypePipe.html': {} },
          body: {
            'injectables/ParseFileTypePipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'parseint(item',
        {
          _index: 739,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'parseint(match[1',
        {
          _index: 3298,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'parseintpipe',
        {
          _index: 354,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'parsesize',
        {
          _index: 1754,
          title: {},
          body: {
            'injectables/FileSizeValidationPipe.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'parsesize(this.maxsize',
        {
          _index: 1758,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'parsestringdatepipe',
        {
          _index: 993,
          title: { 'injectables/ParseStringDatePipe.html': {} },
          body: {
            'controllers/DatasetController.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['part', { _index: 3154, title: {}, body: { 'index.html': {} } }],
      [
        'partial',
        {
          _index: 2020,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'partialtype',
        {
          _index: 2410,
          title: {},
          body: {
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdatePlantDto.html': {},
          },
        },
      ],
      [
        'partialtype(createaimodeldto',
        {
          _index: 2409,
          title: {},
          body: { 'classes/UpdateAiModelDto.html': {} },
        },
      ],
      [
        'partialtype(createplantdto',
        {
          _index: 2465,
          title: {},
          body: { 'classes/UpdatePlantDto.html': {} },
        },
      ],
      [
        'pass',
        {
          _index: 1933,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'pass.dto',
        {
          _index: 2703,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'pass.dto.ts',
        {
          _index: 2269,
          title: {},
          body: {
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'pass.dto.ts:12',
        {
          _index: 2270,
          title: {},
          body: {
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
          },
        },
      ],
      [
        'passport',
        {
          _index: 1808,
          title: {},
          body: { 'injectables/JwtStrategy.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'passportauthguard',
        {
          _index: 588,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        "passportauthguard('jwt",
        {
          _index: 584,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'passportmodule',
        { _index: 603, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'passportstrategy',
        {
          _index: 1805,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'passportstrategy(strategy',
        {
          _index: 1800,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'password',
        {
          _index: 571,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'modules/DatabaseModule.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'patch',
        {
          _index: 187,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/PlantController.html': {},
          },
        },
      ],
      [
        "patch(':id",
        {
          _index: 182,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/PlantController.html': {},
          },
        },
      ],
      [
        'path',
        {
          _index: 1396,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
            'classes/TypeormFilter.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'path.join(__dirname',
        {
          _index: 2567,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'path.join(this.chunkdir',
        {
          _index: 2615,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'path.join(this.uploaddir',
        {
          _index: 2585,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'path.resolve(filepath',
        {
          _index: 1633,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'path/to/model',
        {
          _index: 693,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
          },
        },
      ],
      [
        'payload',
        {
          _index: 560,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController-1.html': {},
            'controllers/DownloadController.html': {},
            'controllers/FileController-1.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'payload.datasetid',
        {
          _index: 1039,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'payload.dto',
        {
          _index: 572,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/FileController-1.html': {},
            'controllers/RoleController-1.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'payload.dto.confirmpassword',
        {
          _index: 2789,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'payload.dto.password',
        {
          _index: 2805,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'payload.filemd5',
        {
          _index: 2535,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'payload.filemeta',
        {
          _index: 2530,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'payload.filters',
        {
          _index: 1512,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'payload.mimetype',
        {
          _index: 2785,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'payload.originalfilename',
        {
          _index: 2536,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'payload.page',
        {
          _index: 1510,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'payload.pagesize',
        {
          _index: 1511,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'payload.roles',
        {
          _index: 1815,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'payload.taskmeta',
        {
          _index: 2539,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'payload.token',
        {
          _index: 578,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'payload.userid',
        {
          _index: 1040,
          title: {},
          body: {
            'controllers/DatasetController-1.html': {},
            'controllers/FileController-1.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/UploadController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'payload.username',
        {
          _index: 1814,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'pb',
        {
          _index: 3252,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'pdf',
        {
          _index: 2963,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'pending',
        {
          _index: 1237,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/Task.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'pessimistic_write',
        {
          _index: 1320,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'phone',
        {
          _index: 2175,
          title: {},
          body: {
            'entities/Profile.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'php',
        {
          _index: 3291,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'pick',
        {
          _index: 2636,
          title: {},
          body: { 'classes/UploadSingleDto.html': {} },
        },
      ],
      [
        'pipe(defaultifempty',
        {
          _index: 1992,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'pipe(defaultifempty(null',
        {
          _index: 2299,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'pipetransform',
        {
          _index: 1755,
          title: {},
          body: {
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
          },
        },
      ],
      [
        'plant',
        {
          _index: 43,
          title: { 'entities/Plant.html': {} },
          body: {
            'entities/AIModel.html': {},
            'modules/DiagnosisModule.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'plant.controller',
        { _index: 2164, title: {}, body: { 'modules/PlantModule.html': {} } },
      ],
      [
        'plant.dto',
        {
          _index: 2118,
          title: {},
          body: {
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'classes/UpdatePlantDto.html': {},
          },
        },
      ],
      [
        'plant.dto.ts',
        {
          _index: 816,
          title: {},
          body: {
            'classes/CreatePlantDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'plant.entity',
        { _index: 68, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'plant.service',
        {
          _index: 2120,
          title: {},
          body: {
            'controllers/PlantController.html': {},
            'modules/PlantModule.html': {},
          },
        },
      ],
      [
        'plant.supportmodels',
        { _index: 74, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'plant.supportmodels)@jointable({name',
        { _index: 46, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'plant_disease_knowledge',
        {
          _index: 1880,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'plantcontroller',
        {
          _index: 2109,
          title: { 'controllers/PlantController.html': {} },
          body: {
            'controllers/PlantController.html': {},
            'modules/PlantModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'plantdiseaseknowledge',
        {
          _index: 1859,
          title: { 'entities/PlantDiseaseKnowledge.html': {} },
          body: {
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'plantid',
        {
          _index: 77,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'plantmodule',
        {
          _index: 2160,
          title: { 'modules/PlantModule.html': {} },
          body: {
            'modules/PlantModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'plantservice',
        {
          _index: 2119,
          title: { 'injectables/PlantService.html': {} },
          body: {
            'controllers/PlantController.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['platform', { _index: 3110, title: {}, body: { 'index.html': {} } }],
      ['please', { _index: 3137, title: {}, body: { 'index.html': {} } }],
      [
        'png',
        {
          _index: 2997,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['pnpm', { _index: 3081, title: {}, body: { 'index.html': {} } }],
      [
        'port',
        {
          _index: 612,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'injectables/MailService.html': {},
            'modules/MenuModule.html': {},
            'injectables/RedisService.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      ['possible', { _index: 3102, title: {}, body: { 'index.html': {} } }],
      [
        'post',
        {
          _index: 171,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post(':id/start",
        {
          _index: 1121,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "post(':serviceid/config",
        {
          _index: 386,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "post(':serviceid/config')@httpcode(httpstatus.created",
        {
          _index: 307,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "post(':serviceid/configs",
        {
          _index: 388,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "post(':serviceid/configs')@httpcode(httpstatus.created",
        {
          _index: 309,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "post('avatar",
        {
          _index: 2713,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "post('avatar')@httpcode(httpstatus.ok)@useinterceptors(undefined",
        {
          _index: 2684,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "post('create",
        {
          _index: 1010,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "post('create')@httpcode(httpstatus.created",
        {
          _index: 971,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "post('create')@roles(role.admin)@useguards(rolesguard)@httpcode(httpstatus.created",
        {
          _index: 2687,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "post('login",
        {
          _index: 539,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('login')@httpcode(httpstatus.ok",
        {
          _index: 501,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('logout",
        {
          _index: 2672,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "post('register",
        {
          _index: 529,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('register')@httpcode(httpstatus.created",
        {
          _index: 506,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('upload",
        {
          _index: 1152,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "post('upload')@useinterceptors(undefined",
        {
          _index: 1125,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        "post('verify/:token",
        {
          _index: 546,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        "post('verify/:token')@httpcode(httpstatus.ok",
        {
          _index: 510,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'post()@httpcode(httpstatus.created',
        {
          _index: 313,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/KnowledgeController.html': {},
          },
        },
      ],
      [
        'post()@roles(role.admin)@httpcode(httpstatus.created)@useguards(rolesguard',
        {
          _index: 2282,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'post()@roles(role.admin)@useguards(rolesguard)@httpcode(httpstatus.created',
        {
          _index: 1970,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'powerpoint',
        {
          _index: 2976,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ppt',
        {
          _index: 2975,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'pptx',
        {
          _index: 2977,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'pptxopenxml',
        {
          _index: 3275,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'prefix',
        {
          _index: 162,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/PlantController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'preload.dto',
        {
          _index: 2526,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'preload.dto.ts',
        {
          _index: 2547,
          title: {},
          body: { 'classes/UploadPreloadDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'preload.dto.ts:2',
        {
          _index: 2548,
          title: {},
          body: { 'classes/UploadPreloadDto.html': {} },
        },
      ],
      [
        'preload.dto.ts:3',
        {
          _index: 2549,
          title: {},
          body: { 'classes/UploadPreloadDto.html': {} },
        },
      ],
      [
        'preload.dto.ts:4',
        {
          _index: 2550,
          title: {},
          body: { 'classes/UploadPreloadDto.html': {} },
        },
      ],
      [
        'preloadfile',
        {
          _index: 2499,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'preloadfile(@payload',
        {
          _index: 2533,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'preloadfile(filemd5',
        {
          _index: 2563,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'preloadfile(payload',
        {
          _index: 2513,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'preventivemeasures',
        {
          _index: 764,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'primarygeneratedcolumn',
        {
          _index: 66,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'classes/BaseEntity.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Task.html': {},
          },
        },
      ],
      [
        "primarygeneratedcolumn('increment",
        {
          _index: 40,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/DiagnosisHistory-1.html': {},
          },
        },
      ],
      [
        'private',
        {
          _index: 131,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'process.env.node_env',
        { _index: 939, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      ['production', { _index: 3087, title: {}, body: { 'index.html': {} } }],
      [
        'profile',
        {
          _index: 856,
          title: { 'entities/Profile.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/Profile.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'profile.dto',
        {
          _index: 2706,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'profile.dto.ts',
        {
          _index: 2468,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'profile.dto.ts:11',
        {
          _index: 2470,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'profile.dto.ts:19',
        {
          _index: 2471,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'profile.dto.ts:27',
        {
          _index: 2474,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'profile.dto.ts:35',
        {
          _index: 2469,
          title: {},
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
        },
      ],
      [
        'profile.entity',
        { _index: 2650, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'profile.user',
        { _index: 2643, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'profileget',
        {
          _index: 2658,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'profileget(@payload',
        {
          _index: 2781,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'profileget(@req',
        {
          _index: 2709,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'profileget(payload',
        {
          _index: 2756,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'profileget(req',
        {
          _index: 2674,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'profileupdate',
        {
          _index: 2659,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'profileupdate(payload',
        {
          _index: 2758,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'profileupdate(req',
        {
          _index: 2677,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      ['progressive', { _index: 3068, title: {}, body: { 'index.html': {} } }],
      ['project', { _index: 3079, title: {}, body: { 'index.html': {} } }],
      ['prom', { _index: 2912, title: {}, body: { 'dependencies.html': {} } }],
      [
        'prometheus',
        {
          _index: 475,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'prometheusmodule',
        { _index: 473, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'prometheusmodule.register',
        { _index: 485, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'promise',
        {
          _index: 419,
          title: {},
          body: {
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'guards/FilesGuard.html': {},
            'injectables/MenuService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'promise((resolve',
        {
          _index: 1286,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'promise.all',
        {
          _index: 1745,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'promise.all(deletionpromises',
        {
          _index: 1715,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'properties',
        {
          _index: 9,
          title: { 'properties.html': {} },
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'interfaces/ApiResponse.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'classes/ImageRequest.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'providers',
        {
          _index: 212,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'pt',
        {
          _index: 3249,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'pth',
        {
          _index: 3247,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'public',
        {
          _index: 1537,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'put',
        {
          _index: 355,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "put(':datasetid",
        {
          _index: 988,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "put(':id",
        {
          _index: 1837,
          title: {},
          body: {
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "put(':id(\\d+)')@roles(role.admin)@useguards(rolesguard",
        {
          _index: 1982,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "put(':id/reset/password",
        {
          _index: 2739,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "put(':id/reset/password')@roles(role.admin)@useguards(rolesguard",
        {
          _index: 2697,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "put(':serviceid",
        {
          _index: 335,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "put(':serviceid/config/:configid",
        {
          _index: 338,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        "put('profile",
        {
          _index: 2678,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "put('reset/password",
        {
          _index: 2681,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'px',
        {
          _index: 2211,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'pytorch',
        {
          _index: 3276,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'query',
        {
          _index: 356,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "query('address",
        {
          _index: 2730,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "query('category",
        {
          _index: 1846,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        "query('createdend",
        {
          _index: 1002,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "query('createdstart",
        {
          _index: 1001,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "query('name",
        {
          _index: 1000,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "query('page",
        {
          _index: 374,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "query('pagesize",
        {
          _index: 375,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "query('phone",
        {
          _index: 2729,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        "query('updatedend",
        {
          _index: 1004,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "query('updatedstart",
        {
          _index: 1003,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "query('username",
        {
          _index: 2728,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'querybuilder',
        {
          _index: 1062,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'querybuilder.andwhere',
        {
          _index: 1677,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "querybuilder.andwhere('dataset.createdat",
        {
          _index: 1069,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        "querybuilder.andwhere('dataset.name",
        {
          _index: 1066,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        "querybuilder.andwhere('dataset.updatedat",
        {
          _index: 1074,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        "querybuilder.andwhere('file.createdby",
        {
          _index: 1671,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "querybuilder.andwhere('file.filetype",
        {
          _index: 1673,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "querybuilder.andwhere('file.originalfilename",
        {
          _index: 1675,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'querybuilder.getrawone',
        {
          _index: 1727,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        "querybuilder.where('dataset.createdby",
        {
          _index: 1064,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        "querybuilder.where('knowledge.category",
        {
          _index: 1882,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'queryfailederror',
        { _index: 2397, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'queryrunner',
        {
          _index: 1298,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.committransaction',
        {
          _index: 1313,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.connect',
        {
          _index: 1300,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.count(fileentity',
        {
          _index: 1702,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'queryrunner.manager.create(diagnosishistory',
        {
          _index: 1302,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.create(fileentity',
        {
          _index: 1305,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.delete(fileentity',
        {
          _index: 1704,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'queryrunner.manager.find(fileentity',
        {
          _index: 1698,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'queryrunner.manager.findone(diagnosishistory',
        {
          _index: 1317,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.findone(fileentity',
        {
          _index: 1691,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.save(diagnosis',
        {
          _index: 1323,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.save(diagnosishistory',
        {
          _index: 1312,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.save(file',
        {
          _index: 1697,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.manager.save(fileentity',
        {
          _index: 2632,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'queryrunner.manager.save(files',
        {
          _index: 1700,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'queryrunner.release',
        {
          _index: 1316,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.rollbacktransaction',
        {
          _index: 1314,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'queryrunner.starttransaction',
        {
          _index: 1301,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      ['questions', { _index: 3135, title: {}, body: { 'index.html': {} } }],
      [
        'quicktime',
        {
          _index: 3267,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'radius',
        {
          _index: 3326,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'rar',
        {
          _index: 2961,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['read', { _index: 3175, title: {}, body: { 'index.html': {} } }],
      [
        'readfile',
        {
          _index: 1569,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'readfile(filepath',
        {
          _index: 1591,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'readonly',
        {
          _index: 195,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'readstream',
        {
          _index: 1623,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        "readstream.on('end",
        {
          _index: 1625,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        "readstream.on('error",
        {
          _index: 1626,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'readstream.pipe(writestream',
        {
          _index: 1624,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      ['ready', { _index: 3095, title: {}, body: { 'index.html': {} } }],
      ['real', { _index: 3149, title: {}, body: { 'index.html': {} } }],
      [
        'recursive',
        {
          _index: 1172,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'redis',
        {
          _index: 2225,
          title: {},
          body: {
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'redis.call("del',
        {
          _index: 2255,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'redis.call("get',
        {
          _index: 2252,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'redis.service',
        { _index: 2194, title: {}, body: { 'modules/RedisModule.html': {} } },
      ],
      [
        'redis_host',
        {
          _index: 3045,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'redis_password',
        {
          _index: 3047,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'redis_port',
        {
          _index: 3046,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'redis_reconnect',
        {
          _index: 3048,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'redismodule',
        {
          _index: 2188,
          title: { 'modules/RedisModule.html': {} },
          body: {
            'modules/RedisModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'redisservice',
        {
          _index: 2192,
          title: { 'injectables/RedisService.html': {} },
          body: {
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'referencecount',
        {
          _index: 1701,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'referencecount[file.filemd5',
        {
          _index: 1712,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'referencedcolumnname',
        {
          _index: 76,
          title: {},
          body: { 'entities/AIModel.html': {}, 'entities/Dataset.html': {} },
        },
      ],
      [
        'reflect',
        { _index: 2914, title: {}, body: { 'dependencies.html': {} } },
      ],
      [
        'reflector',
        { _index: 2353, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'regex',
        {
          _index: 3294,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'register',
        {
          _index: 495,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'modules/DatabaseModule.html': {},
          },
        },
      ],
      [
        'register(@payload',
        {
          _index: 570,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'register(@req',
        {
          _index: 530,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'register(email',
        {
          _index: 628,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'register(entities',
        { _index: 919, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'register(payload',
        {
          _index: 563,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'register(req',
        {
          _index: 503,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'registerdto',
        {
          _index: 505,
          title: {
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
          },
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'reject',
        {
          _index: 1287,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'reject(error',
        {
          _index: 1297,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'reject(new',
        {
          _index: 1607,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'relations',
        {
          _index: 136,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/MenuService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'releaselock',
        {
          _index: 2202,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'releaselock(lockkey',
        {
          _index: 2228,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'remove',
        {
          _index: 167,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        "remove(@param('id",
        {
          _index: 203,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
          },
        },
      ],
      [
        'remove(@payload',
        {
          _index: 2025,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'remove(data',
        {
          _index: 2007,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'remove(id',
        {
          _index: 177,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'remove(payload',
        {
          _index: 2311,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'remove(serviceid',
        {
          _index: 326,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'removeconfig',
        {
          _index: 93,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'removeconfig(_',
        {
          _index: 329,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'removeconfig(configid',
        {
          _index: 114,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'removes',
        {
          _index: 230,
          title: {},
          body: {
            'injectables/AiModelService.html': {},
            'injectables/PlantService.html': {},
          },
        },
      ],
      [
        'rename',
        {
          _index: 1600,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'rename(oldpath',
        {
          _index: 1631,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'repository',
        {
          _index: 97,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MenuService.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'req',
        {
          _index: 508,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/MenuController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "req.protocol}://${req.get('host')}/auth/verify/${token",
        {
          _index: 535,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'req.user.id',
        {
          _index: 1987,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'req.user.userid',
        {
          _index: 1008,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'request',
        {
          _index: 504,
          title: {
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthGuard.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/TypeormFilter.html': {},
            'controllers/UserController.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'request.body.fileids',
        {
          _index: 1773,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'request.dto.ts',
        {
          _index: 1796,
          title: {},
          body: { 'classes/ImageRequest.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'request.dto.ts:2',
        { _index: 1798, title: {}, body: { 'classes/ImageRequest.html': {} } },
      ],
      [
        'request.filemeta',
        {
          _index: 1539,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'interfaces/Request-1.html': {},
          },
        },
      ],
      [
        'request.filesmeta',
        {
          _index: 1779,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'request.method',
        { _index: 2405, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'request.params.fileid',
        {
          _index: 1533,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'interfaces/Request-1.html': {},
          },
        },
      ],
      [
        'request.url',
        { _index: 2403, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'request.user?.userid',
        {
          _index: 1534,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        'requiredroles',
        { _index: 2360, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'requiredroles.some((role',
        { _index: 2364, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      ['requiring', { _index: 3118, title: {}, body: { 'index.html': {} } }],
      [
        'res',
        {
          _index: 2669,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'res.sendfile(avatarpath',
        {
          _index: 2722,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'researchsources',
        {
          _index: 765,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'reset',
        {
          _index: 217,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'resetpassworddto',
        {
          _index: 2267,
          title: {
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
          },
          body: {
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'resistantvarieties',
        {
          _index: 766,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'resolve',
        {
          _index: 1420,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        "resolve(hash.digest('hex",
        {
          _index: 1295,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'resolve(true',
        {
          _index: 2626,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'resolvedpath',
        {
          _index: 1632,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'resolvedpath.startswith(path.resolve',
        {
          _index: 1634,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      ['resources', { _index: 3129, title: {}, body: { 'index.html': {} } }],
      [
        'response',
        {
          _index: 1005,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'classes/TypeormFilter.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'response.data',
        {
          _index: 1340,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'response.status(500).json',
        { _index: 2401, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'response.status(code).json',
        {
          _index: 2075,
          title: {},
          body: { 'classes/OtherExceptionsFilter.html': {} },
        },
      ],
      [
        'response.status(status).json',
        {
          _index: 1793,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'response?.result',
        {
          _index: 1009,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        'responsebody',
        {
          _index: 1788,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'responsebody.code',
        {
          _index: 1790,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'responsebody.message',
        {
          _index: 1791,
          title: {},
          body: { 'classes/HttpExceptionFilter.html': {} },
        },
      ],
      [
        'responsetime',
        {
          _index: 277,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      [
        'result',
        {
          _index: 542,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatasetService.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'result.access_token',
        {
          _index: 545,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'result.length',
        {
          _index: 2096,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      [
        'results',
        {
          _index: 79,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'retries',
        {
          _index: 2248,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'retrydelay',
        {
          _index: 2206,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'return',
        {
          _index: 141,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/UpdateDatasetDto.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'returns',
        {
          _index: 107,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'injectables/RedisService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'classes/TypeormFilter.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'rgba(0',
        {
          _index: 3331,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'role',
        {
          _index: 342,
          title: { 'entities/Role.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'role.alias',
        {
          _index: 2350,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'role.controller',
        { _index: 2326, title: {}, body: { 'modules/RoleModule.html': {} } },
      ],
      [
        'role.create',
        {
          _index: 2298,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'role.dict',
        {
          _index: 2294,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'role.dto',
        {
          _index: 2292,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'role.dto.ts',
        {
          _index: 819,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'role.dto.ts:11',
        {
          _index: 825,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
          },
        },
      ],
      [
        'role.dto.ts:19',
        {
          _index: 821,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
          },
        },
      ],
      [
        'role.dto.ts:27',
        {
          _index: 822,
          title: {},
          body: {
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
          },
        },
      ],
      [
        'role.entity',
        { _index: 2651, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'role.expert',
        {
          _index: 365,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
          },
        },
      ],
      [
        'role.findall',
        {
          _index: 2295,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'role.findone',
        {
          _index: 2296,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'role.id',
        {
          _index: 2349,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'role.name',
        {
          _index: 657,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'role.remove',
        {
          _index: 2302,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'role.service',
        {
          _index: 2316,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'role.update',
        {
          _index: 2301,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'role.users',
        { _index: 2653, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'role.users)@jointable({name',
        { _index: 2645, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'rolecontroller',
        {
          _index: 2279,
          title: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
          },
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'roleid',
        {
          _index: 2038,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'rolemodule',
        {
          _index: 2323,
          title: { 'modules/RoleModule.html': {} },
          body: {
            'modules/RoleModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'rolerepository',
        {
          _index: 2331,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'roles',
        {
          _index: 340,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'controllers/DatasetController.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'interfaces/Request.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'roles(role.admin',
        {
          _index: 364,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'roles.map((role',
        {
          _index: 2348,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'roles_key',
        {
          _index: 2358,
          title: {},
          body: {
            'guards/RolesGuard.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'roleservice',
        {
          _index: 2315,
          title: { 'injectables/RoleService.html': {} },
          body: {
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'rolesguard',
        {
          _index: 348,
          title: { 'guards/RolesGuard.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'routes',
        {
          _index: 1988,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'rpcerror',
        {
          _index: 904,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'rpcerror?.code',
        {
          _index: 907,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'rpcerror?.data',
        {
          _index: 909,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'rpcerror?.message',
        {
          _index: 908,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'rpcexception',
        {
          _index: 634,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'injectables/DatasetService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'rpcexceptionfilter',
        {
          _index: 891,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'rtf',
        {
          _index: 2979,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['run', { _index: 3083, title: {}, body: { 'index.html': {} } }],
      ['runs', { _index: 3100, title: {}, body: { 'index.html': {} } }],
      [
        'rxjs',
        {
          _index: 521,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DatasetController.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'controllers/MenuController.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        's',
        {
          _index: 1940,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        's+@\\s+\\.\\s+$/.test(o.login',
        {
          _index: 1901,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'sans',
        {
          _index: 3307,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'savefile',
        {
          _index: 2500,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'savefile(@payload',
        {
          _index: 2528,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'savefile(filemeta',
        {
          _index: 2565,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'savefile(payload',
        {
          _index: 2517,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      ['scalable', { _index: 3073, title: {}, body: { 'index.html': {} } }],
      [
        'schema.type',
        { _index: 923, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'scientificname',
        {
          _index: 767,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'script',
        {
          _index: 2251,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'sdfgsafgasgsad',
        {
          _index: 877,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'secret',
        {
          _index: 1552,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'secretorkey',
        {
          _index: 1813,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'secure',
        {
          _index: 1930,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'select',
        {
          _index: 1720,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'send',
        {
          _index: 1990,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'sendmail',
        {
          _index: 1915,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'sendmail(to',
        {
          _index: 1917,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'sent',
        {
          _index: 1939,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'serialized',
        {
          _index: 2240,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'serif',
        {
          _index: 3308,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'server',
        {
          _index: 901,
          title: {},
          body: {
            'classes/CustomRpcExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'service',
        {
          _index: 53,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'guards/FileGuard.html': {},
            'guards/FilesGuard.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service.aiserviceconfigs',
        {
          _index: 142,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'service.controller',
        {
          _index: 411,
          title: {},
          body: { 'modules/AiServiceModule.html': {} },
        },
      ],
      [
        'service.controller.ts',
        {
          _index: 305,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service.controller.ts:112',
        {
          _index: 308,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:127',
        {
          _index: 310,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:141',
        {
          _index: 325,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:154',
        {
          _index: 339,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:174',
        {
          _index: 331,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:44',
        {
          _index: 314,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:51',
        {
          _index: 315,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:58',
        {
          _index: 322,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:71',
        {
          _index: 318,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:84',
        {
          _index: 336,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.controller.ts:99',
        {
          _index: 328,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'service.dto',
        {
          _index: 359,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'service.dto.ts',
        {
          _index: 707,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service.dto.ts:11',
        {
          _index: 713,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'service.dto.ts:19',
        {
          _index: 715,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'service.dto.ts:27',
        {
          _index: 709,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'service.dto.ts:35',
        {
          _index: 718,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'service.dto.ts:43',
        {
          _index: 711,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'service.entity',
        {
          _index: 70,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'service.entity.ts',
        {
          _index: 231,
          title: {},
          body: { 'entities/AiService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service.entity.ts:18',
        { _index: 253, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:21',
        { _index: 254, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:24',
        { _index: 256, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:27',
        { _index: 251, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:34',
        { _index: 261, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:37',
        { _index: 252, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:40',
        { _index: 249, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:47',
        { _index: 264, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:52',
        { _index: 263, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:55',
        { _index: 247, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:61',
        { _index: 244, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.entity.ts:67',
        { _index: 242, title: {}, body: { 'entities/AiService.html': {} } },
      ],
      [
        'service.module.ts',
        {
          _index: 409,
          title: {},
          body: { 'modules/AiServiceModule.html': {} },
        },
      ],
      [
        'service.service',
        {
          _index: 363,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
          },
        },
      ],
      [
        'service.service.ts',
        {
          _index: 414,
          title: {},
          body: {
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service.service.ts:12',
        {
          _index: 417,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.service.ts:28',
        {
          _index: 418,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.service.ts:34',
        {
          _index: 420,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.service.ts:39',
        {
          _index: 422,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.service.ts:48',
        {
          _index: 421,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.service.ts:56',
        {
          _index: 424,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.service.ts:69',
        {
          _index: 423,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'service.supportmodels',
        { _index: 54, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'service/ai',
        {
          _index: 304,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/dto/create',
        {
          _index: 686,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/dto/update',
        {
          _index: 2406,
          title: {},
          body: {
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/services/ai',
        {
          _index: 86,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/app.controller.ts',
        {
          _index: 1359,
          title: {},
          body: {
            'controllers/DownloadController.html': {},
            'controllers/UploadController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/app.controller.ts:11',
        {
          _index: 1364,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:14',
        {
          _index: 2520,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:16',
        {
          _index: 1367,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:23',
        {
          _index: 2516,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:32',
        {
          _index: 2503,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:40',
        {
          _index: 2506,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:45',
        {
          _index: 2509,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'service/src/app.controller.ts:50',
        {
          _index: 2512,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'service/src/app.module.ts',
        { _index: 469, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'service/src/app.service.ts',
        {
          _index: 1384,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/UploadService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'service/src/app.service.ts:11',
        {
          _index: 1388,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:114',
        {
          _index: 2560,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:132',
        {
          _index: 2556,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:168',
        {
          _index: 2558,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:22',
        {
          _index: 2572,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:24',
        {
          _index: 2569,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:248',
        {
          _index: 2562,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:26',
        {
          _index: 2554,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:260',
        {
          _index: 2564,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:29',
        {
          _index: 1390,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:45',
        {
          _index: 2570,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:56',
        {
          _index: 2566,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'service/src/app.service.ts:9',
        {
          _index: 1392,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'service/src/dto/task',
        {
          _index: 2386,
          title: {},
          body: { 'classes/TaskCreateDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/dto/upload',
        {
          _index: 2482,
          title: {},
          body: {
            'classes/UploadChunkDto.html': {},
            'classes/UploadPreloadDto.html': {},
            'classes/UploadSingleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/main.ts',
        {
          _index: 2840,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.controller.ts',
        {
          _index: 552,
          title: {},
          body: {
            'controllers/AuthController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/auth/auth.controller.ts:12',
        {
          _index: 564,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.controller.ts:18',
        {
          _index: 559,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.controller.ts:24',
        {
          _index: 562,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.controller.ts:29',
        {
          _index: 566,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.controller.ts:34',
        {
          _index: 556,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts',
        {
          _index: 613,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts:10',
        {
          _index: 621,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts:107',
        {
          _index: 631,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts:121',
        {
          _index: 623,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts:17',
        {
          _index: 629,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts:38',
        {
          _index: 625,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'service/src/modules/auth/auth.service.ts:71',
        {
          _index: 627,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'service/src/modules/auth/dto/login.dto.ts',
        {
          _index: 1903,
          title: {},
          body: { 'classes/LoginDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/auth/dto/login.dto.ts:23',
        { _index: 1904, title: {}, body: { 'classes/LoginDto-1.html': {} } },
      ],
      [
        'service/src/modules/auth/dto/login.dto.ts:31',
        { _index: 1905, title: {}, body: { 'classes/LoginDto-1.html': {} } },
      ],
      [
        'service/src/modules/auth/dto/register.dto.ts',
        {
          _index: 2264,
          title: {},
          body: { 'classes/RegisterDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/auth/dto/register.dto.ts:11',
        { _index: 2265, title: {}, body: { 'classes/RegisterDto-1.html': {} } },
      ],
      [
        'service/src/modules/auth/dto/register.dto.ts:19',
        { _index: 2266, title: {}, body: { 'classes/RegisterDto-1.html': {} } },
      ],
      [
        'service/src/modules/dataset/dataset.controller.ts',
        {
          _index: 1019,
          title: {},
          body: {
            'controllers/DatasetController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/dataset/dataset.controller.ts:13',
        {
          _index: 1023,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.controller.ts:35',
        {
          _index: 1021,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.controller.ts:43',
        {
          _index: 1027,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.controller.ts:49',
        {
          _index: 1029,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.controller.ts:66',
        {
          _index: 1025,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts',
        {
          _index: 1046,
          title: {},
          body: { 'injectables/DatasetService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts:100',
        {
          _index: 1052,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts:11',
        {
          _index: 1049,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts:119',
        {
          _index: 1057,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts:138',
        {
          _index: 1058,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts:166',
        {
          _index: 1056,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'service/src/modules/dataset/dataset.service.ts:20',
        {
          _index: 1055,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts',
        {
          _index: 1193,
          title: {},
          body: {
            'controllers/DiagnosisController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts:14',
        {
          _index: 1210,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts:26',
        {
          _index: 1207,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts:31',
        {
          _index: 1204,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts:36',
        {
          _index: 1196,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts:41',
        {
          _index: 1201,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.controller.ts:46',
        {
          _index: 1199,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts',
        {
          _index: 1346,
          title: {},
          body: {
            'injectables/DiagnosisService-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:124',
        {
          _index: 1351,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:134',
        {
          _index: 1348,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:143',
        {
          _index: 1350,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:155',
        {
          _index: 1349,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:21',
        {
          _index: 1347,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:29',
        {
          _index: 1354,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:39',
        {
          _index: 1353,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/diagnosis.service.ts:73',
        {
          _index: 1352,
          title: {},
          body: { 'injectables/DiagnosisService-1.html': {} },
        },
      ],
      [
        'service/src/modules/diagnosis/models/diagnosis',
        {
          _index: 1243,
          title: {},
          body: { 'entities/DiagnosisHistory-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts',
        {
          _index: 1450,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:14',
        {
          _index: 1469,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:19',
        {
          _index: 1472,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:24',
        {
          _index: 1487,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:29',
        {
          _index: 1463,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:34',
        {
          _index: 1475,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:39',
        {
          _index: 1478,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:44',
        {
          _index: 1481,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:69',
        {
          _index: 1490,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:76',
        {
          _index: 1466,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.controller.ts:81',
        {
          _index: 1484,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts',
        {
          _index: 1643,
          title: {},
          body: { 'injectables/FileService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:14',
        {
          _index: 1645,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:140',
        {
          _index: 1651,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:155',
        {
          _index: 1653,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:168',
        {
          _index: 1663,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:210',
        {
          _index: 1665,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:253',
        {
          _index: 1647,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:30',
        {
          _index: 1655,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:301',
        {
          _index: 1649,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:353',
        {
          _index: 1661,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:45',
        {
          _index: 1657,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/file/file.service.ts:63',
        {
          _index: 1659,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts',
        {
          _index: 1999,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts:14',
        {
          _index: 2006,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts:20',
        {
          _index: 2002,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts:26',
        {
          _index: 2004,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts:32',
        {
          _index: 2001,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts:38',
        {
          _index: 2010,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.controller.ts:44',
        {
          _index: 2008,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.entity.ts',
        {
          _index: 1944,
          title: {},
          body: { 'entities/Menu.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:13',
        { _index: 1955, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:16',
        { _index: 1954, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:19',
        { _index: 1963, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:22',
        { _index: 1961, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:25',
        { _index: 1962, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:28',
        { _index: 1960, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:31',
        { _index: 1956, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:36',
        { _index: 1958, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.entity.ts:40',
        { _index: 1953, title: {}, body: { 'entities/Menu.html': {} } },
      ],
      [
        'service/src/modules/menu/menu.service.ts',
        {
          _index: 2029,
          title: {},
          body: { 'injectables/MenuService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:13',
        {
          _index: 2037,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:45',
        {
          _index: 2035,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:52',
        {
          _index: 2039,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:60',
        {
          _index: 2034,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:66',
        {
          _index: 2041,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:7',
        {
          _index: 2032,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/menu/menu.service.ts:72',
        {
          _index: 2040,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'service/src/modules/role/dto/create',
        {
          _index: 827,
          title: {},
          body: { 'classes/CreateRoleDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/role/dto/update',
        {
          _index: 2479,
          title: {},
          body: { 'classes/UpdateRoleDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts',
        {
          _index: 2303,
          title: {},
          body: {
            'controllers/RoleController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts:12',
        {
          _index: 2310,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts:17',
        {
          _index: 2307,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts:22',
        {
          _index: 2309,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts:27',
        {
          _index: 2306,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts:32',
        {
          _index: 2314,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.controller.ts:37',
        {
          _index: 2312,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts',
        {
          _index: 2327,
          title: {},
          body: { 'injectables/RoleService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:10',
        {
          _index: 2330,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:17',
        {
          _index: 2333,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:22',
        {
          _index: 2335,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:37',
        {
          _index: 2332,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:49',
        {
          _index: 2337,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:56',
        {
          _index: 2336,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/role/role.service.ts:62',
        {
          _index: 2334,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'service/src/modules/user/dto/change',
        {
          _index: 2436,
          title: {},
          body: { 'classes/UpdatePasswordDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/user/dto/create',
        {
          _index: 884,
          title: {},
          body: { 'classes/CreateUserDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/user/dto/get',
        {
          _index: 2817,
          title: {},
          body: { 'interfaces/UserQuery-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/user/dto/reset',
        {
          _index: 2271,
          title: {},
          body: { 'classes/ResetPasswordDto-1.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'service/src/modules/user/dto/update',
        {
          _index: 2477,
          title: {},
          body: {
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateUserDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts',
        {
          _index: 2741,
          title: {},
          body: {
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:103',
        {
          _index: 2770,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:109',
        {
          _index: 2778,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:114',
        {
          _index: 2766,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:120',
        {
          _index: 2776,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:126',
        {
          _index: 2749,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:132',
        {
          _index: 2752,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:138',
        {
          _index: 2747,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:19',
        {
          _index: 2757,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:25',
        {
          _index: 2759,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:33',
        {
          _index: 2763,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:45',
        {
          _index: 2754,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:51',
        {
          _index: 2761,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:62',
        {
          _index: 2755,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:68',
        {
          _index: 2774,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:88',
        {
          _index: 2768,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.controller.ts:97',
        {
          _index: 2772,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'service/src/modules/user/user.service.ts',
        { _index: 2845, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'serviceid',
        {
          _index: 78,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'servicename',
        {
          _index: 235,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'services',
        {
          _index: 371,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'services/ai',
        {
          _index: 360,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'modules/AiServiceModule.html': {},
          },
        },
      ],
      [
        'services/file',
        { _index: 1550, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'servicetype',
        {
          _index: 236,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'set',
        {
          _index: 1234,
          title: {},
          body: {
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/RedisService.html': {},
          },
        },
      ],
      [
        'set(key',
        {
          _index: 2231,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'setmetadata(roles_key',
        {
          _index: 3304,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'settimeout(resolve',
        {
          _index: 2249,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      ['setup', { _index: 3080, title: {}, body: { 'index.html': {} } }],
      [
        'severity',
        {
          _index: 768,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'sh',
        {
          _index: 3284,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'shadow',
        {
          _index: 3329,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'shared/constants/html',
        {
          _index: 525,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'shared/enum/config.enum',
        {
          _index: 925,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'modules/FileModule.html': {},
            'injectables/JwtStrategy.html': {},
            'injectables/MailService.html': {},
            'injectables/RedisService.html': {},
          },
        },
      ],
      [
        'shared/enum/mime.enum',
        {
          _index: 1130,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'shared/enum/role.enum',
        {
          _index: 343,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'shared/enum/status.enum',
        {
          _index: 1281,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'shared/enum/user.enum',
        {
          _index: 879,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'shared/helpers/response.helper',
        {
          _index: 351,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'shared/utils',
        {
          _index: 1668,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      ['side', { _index: 3074, title: {}, body: { 'index.html': {} } }],
      [
        'signoptions',
        { _index: 1554, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      ['simple', { _index: 3120, title: {}, body: { 'index.html': {} } }],
      [
        'single.dto',
        {
          _index: 2527,
          title: {},
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'single.dto.ts',
        {
          _index: 2634,
          title: {},
          body: { 'classes/UploadSingleDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'single.dto.ts:11',
        {
          _index: 2638,
          title: {},
          body: { 'classes/UploadSingleDto.html': {} },
        },
      ],
      [
        'single.dto.ts:5',
        {
          _index: 2637,
          title: {},
          body: { 'classes/UploadSingleDto.html': {} },
        },
      ],
      [
        'single.dto.ts:8',
        {
          _index: 2635,
          title: {},
          body: { 'classes/UploadSingleDto.html': {} },
        },
      ],
      [
        'size',
        {
          _index: 1079,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'size.match(regex',
        {
          _index: 3297,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'size.pipe',
        {
          _index: 1143,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'size.pipe.ts',
        {
          _index: 1748,
          title: {},
          body: {
            'injectables/FileSizeValidationPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'size.pipe.ts:6',
        {
          _index: 1750,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'size.pipe.ts:9',
        {
          _index: 1753,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'skip',
        {
          _index: 430,
          title: {},
          body: {
            'injectables/AiServiceService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'skip((page',
        {
          _index: 1687,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'smtp.example.com',
        {
          _index: 1927,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'sort',
        {
          _index: 1950,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'sort((a',
        {
          _index: 2053,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'modules/AiModelModule.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'modules/AiServiceModule.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'modules/AppModule.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiModelDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreatePlantDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/DatabaseService.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'modules/DatasetModule.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'modules/DiagnosisModule.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'modules/KnowledgeModule.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'modules/MenuModule.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'modules/PlantModule.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'modules/RoleModule.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'speed',
        {
          _index: 460,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'split',
        {
          _index: 2091,
          title: {},
          body: { 'injectables/ParseFileTypePipe.html': {} },
        },
      ],
      ['sponsors', { _index: 3171, title: {}, body: { 'index.html': {} } }],
      [
        'spreadmethod',
        {
          _index: 769,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      ['start', { _index: 3084, title: {}, body: { 'index.html': {} } }],
      ['start:dev', { _index: 3086, title: {}, body: { 'index.html': {} } }],
      [
        'start:prodrun',
        { _index: 3088, title: {}, body: { 'index.html': {} } },
      ],
      [
        'startdiagnosis',
        {
          _index: 1107,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'startdiagnosis(@payload',
        {
          _index: 1216,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'startdiagnosis(data',
        {
          _index: 1205,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'startdiagnosis(id',
        {
          _index: 1274,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'startdiagnosis(req',
        {
          _index: 1120,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      ['started', { _index: 3067, title: { 'index.html': {} }, body: {} }],
      ['starter', { _index: 3078, title: {}, body: { 'index.html': {} } }],
      [
        'statements',
        { _index: 2821, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'static',
        { _index: 913, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'status',
        {
          _index: 237,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/HttpExceptionFilter.html': {},
            'entities/Task.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
            'controllers/UserController-1.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'status.completed',
        {
          _index: 1338,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'status.in_progress',
        {
          _index: 1322,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'status.pending',
        {
          _index: 1303,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'statuscode',
        {
          _index: 278,
          title: {},
          body: { 'entities/AiServiceAccessLog.html': {} },
        },
      ],
      ['stay', { _index: 3157, title: {}, body: { 'index.html': {} } }],
      ['steps', { _index: 3098, title: {}, body: { 'index.html': {} } }],
      [
        'storage',
        {
          _index: 1154,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'storagefilename',
        {
          _index: 1307,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      ['store', { _index: 2900, title: {}, body: { 'dependencies.html': {} } }],
      [
        'straightforward',
        { _index: 3116, title: {}, body: { 'index.html': {} } },
      ],
      [
        'strategy',
        {
          _index: 1807,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'stream',
        {
          _index: 1290,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "stream.on('data",
        {
          _index: 1292,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        "stream.on('end",
        {
          _index: 1294,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        "stream.on('error",
        {
          _index: 1296,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'string',
        {
          _index: 35,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AppController.html': {},
            'injectables/AppService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'subject',
        {
          _index: 1918,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'success',
        {
          _index: 446,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'successful',
        {
          _index: 461,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'sum(file.filesize',
        {
          _index: 1721,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'super',
        {
          _index: 596,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'support',
        {
          _index: 3136,
          title: {},
          body: { 'index.html': {}, 'modules.html': {} },
        },
      ],
      [
        'supportmodels',
        {
          _index: 238,
          title: {},
          body: { 'entities/AiService.html': {}, 'entities/Plant.html': {} },
        },
      ],
      [
        'supportplants',
        { _index: 15, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'supportservices',
        { _index: 16, title: {}, body: { 'entities/AIModel.html': {} } },
      ],
      [
        'svg',
        {
          _index: 3007,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'modules.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'switch',
        {
          _index: 3237,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'symptoms',
        {
          _index: 770,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'synchronize',
        { _index: 936, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'synonyms',
        {
          _index: 771,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        't',
        {
          _index: 444,
          title: {},
          body: {
            'interfaces/ApiResponse.html': {},
            'injectables/RedisService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['table', { _index: 2876, title: {}, body: { 'coverage.html': {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 2875, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'tags',
        {
          _index: 772,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'take',
        {
          _index: 433,
          title: {},
          body: {
            'injectables/AiServiceService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'take(pagesize',
        {
          _index: 1688,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
          },
        },
      ],
      [
        'tar',
        {
          _index: 2960,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'task',
        {
          _index: 2366,
          title: { 'entities/Task.html': {} },
          body: {
            'entities/Task.html': {},
            'injectables/UploadService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'task.create',
        {
          _index: 2508,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'task.dto.ts',
        {
          _index: 830,
          title: {},
          body: { 'classes/CreateTaskDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'task.dto.ts:11',
        { _index: 842, title: {}, body: { 'classes/CreateTaskDto.html': {} } },
      ],
      [
        'task.dto.ts:19',
        { _index: 845, title: {}, body: { 'classes/CreateTaskDto.html': {} } },
      ],
      [
        'task.dto.ts:27',
        { _index: 847, title: {}, body: { 'classes/CreateTaskDto.html': {} } },
      ],
      [
        'task.dto.ts:35',
        { _index: 840, title: {}, body: { 'classes/CreateTaskDto.html': {} } },
      ],
      [
        'task.dto.ts:43',
        { _index: 848, title: {}, body: { 'classes/CreateTaskDto.html': {} } },
      ],
      [
        'task.filemd5',
        {
          _index: 2627,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.filename',
        {
          _index: 2628,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.filesize',
        {
          _index: 2629,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.filetype',
        {
          _index: 2631,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.get',
        {
          _index: 2511,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'task.totalchunks',
        {
          _index: 2620,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.uploadedchunks.includes(chunkindex',
        {
          _index: 2617,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.uploadedchunks.length',
        {
          _index: 2619,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.uploadedchunks.push(chunkindex',
        {
          _index: 2618,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.uploadedchunks.sort((a',
        {
          _index: 2622,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'task.userid',
        {
          _index: 2630,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskcreatedto',
        {
          _index: 2384,
          title: { 'classes/TaskCreateDto.html': {} },
          body: {
            'classes/TaskCreateDto.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'taskid',
        {
          _index: 676,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'taskid}_chunk_${chunkindex',
        {
          _index: 2613,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskmeta',
        {
          _index: 2484,
          title: {},
          body: {
            'classes/UploadChunkDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'taskmeta.filemd5',
        {
          _index: 2604,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskmeta.filename',
        {
          _index: 2601,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskmeta.filesize',
        {
          _index: 2602,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskmeta.filetype',
        {
          _index: 2603,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskmeta.totalchunks',
        {
          _index: 2605,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'taskmeta.userid',
        {
          _index: 2600,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'tb',
        {
          _index: 3303,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'tensorflow',
        {
          _index: 3277,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'test',
        {
          _index: 453,
          title: {},
          body: { 'controllers/AppController.html': {}, 'index.html': {} },
        },
      ],
      [
        'test.jpg',
        {
          _index: 841,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'classes/TaskCreateDto.html': {},
          },
        },
      ],
      [
        'test:covdeployment',
        { _index: 3093, title: {}, body: { 'index.html': {} } },
      ],
      ['test:e2e', { _index: 3092, title: {}, body: { 'index.html': {} } }],
      ['tests', { _index: 3089, title: {}, body: { 'index.html': {} } }],
      [
        'text',
        {
          _index: 250,
          title: {},
          body: {
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'entities/Dataset.html': {},
            'entities/File.html': {},
            'injectables/MailService.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'text/css',
        {
          _index: 3035,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'text/csv',
        {
          _index: 2984,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'text/html',
        {
          _index: 3033,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'text/plain',
        {
          _index: 2982,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['thanks', { _index: 3170, title: {}, body: { 'index.html': {} } }],
      [
        'this.acquirelock(lockkey',
        {
          _index: 2257,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.aiconfigsservice.addconfig(serviceid',
        {
          _index: 387,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiconfigsservice.addconfigs(serviceid',
        {
          _index: 389,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiconfigsservice.findserviceconfigs(serviceid',
        {
          _index: 391,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiconfigsservice.removeconfig(configid',
        {
          _index: 394,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiconfigsservice.updateconfig(configid',
        {
          _index: 392,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aimodelservice.create(createaimodeldto',
        {
          _index: 197,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'this.aimodelservice.findall',
        {
          _index: 198,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'this.aimodelservice.findone(+id',
        {
          _index: 200,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'this.aimodelservice.remove(+id',
        {
          _index: 204,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'this.aimodelservice.update(+id',
        {
          _index: 202,
          title: {},
          body: { 'controllers/AiModelController.html': {} },
        },
      ],
      [
        'this.aiserviceconfigrepository.create',
        {
          _index: 144,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'this.aiserviceconfigrepository.findone',
        {
          _index: 152,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'this.aiserviceconfigrepository.remove(config',
        {
          _index: 156,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'this.aiserviceconfigrepository.save(config',
        {
          _index: 155,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'this.aiserviceconfigrepository.save(newconfig',
        {
          _index: 145,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'this.aiserviceconfigrepository.save(newconfigs',
        {
          _index: 149,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'this.aiservicerepository.create(dto',
        {
          _index: 427,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'this.aiservicerepository.find',
        {
          _index: 429,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'this.aiservicerepository.findandcount',
        {
          _index: 432,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'this.aiservicerepository.findone',
        {
          _index: 135,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'this.aiservicerepository.remove(aiservice',
        {
          _index: 437,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'this.aiservicerepository.save(aiservice',
        {
          _index: 428,
          title: {},
          body: { 'injectables/AiServiceService.html': {} },
        },
      ],
      [
        'this.aiserviceservice.create(dto',
        {
          _index: 369,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiserviceservice.findall',
        {
          _index: 372,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiserviceservice.findone(serviceid',
        {
          _index: 381,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiserviceservice.findpaginated',
        {
          _index: 378,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiserviceservice.remove(serviceid',
        {
          _index: 385,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.aiserviceservice.update(serviceid',
        {
          _index: 382,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'this.allowedtypes.includes(file.mimetype',
        {
          _index: 1767,
          title: {},
          body: { 'injectables/FileTypeValidationPipe.html': {} },
        },
      ],
      [
        'this.allowedtypes.join',
        {
          _index: 1768,
          title: {},
          body: { 'injectables/FileTypeValidationPipe.html': {} },
        },
      ],
      [
        'this.appservice.gethello',
        {
          _index: 457,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'this.authclient',
        {
          _index: 1989,
          title: {},
          body: { 'controllers/MenuController.html': {} },
        },
      ],
      [
        'this.authclient.send',
        {
          _index: 531,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'this.authservice.buttonsget',
        {
          _index: 581,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'this.authservice.login(login',
        {
          _index: 575,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'this.authservice.notifyaccount(payload.email',
        {
          _index: 577,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'this.authservice.register(email',
        {
          _index: 573,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'this.authservice.verifyaccount(payload.token',
        {
          _index: 580,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'this.checkfileexists(chunkpath',
        {
          _index: 1622,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.checkfileexists(filepath',
        {
          _index: 1605,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.checkfileexists(oldpath',
        {
          _index: 1630,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.chunkdir',
        {
          _index: 2580,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.client',
        {
          _index: 2238,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.client.del(key',
        {
          _index: 2246,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.client.eval(script',
        {
          _index: 2256,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.client.get(key',
        {
          _index: 2244,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.client.incrby(key',
        {
          _index: 2247,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.client.quit',
        {
          _index: 2259,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.client.set(key',
        {
          _index: 2242,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.configservice.get',
        {
          _index: 1925,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.mail_from',
        {
          _index: 1936,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.mail_pass',
        {
          _index: 1934,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.mail_port',
        {
          _index: 1928,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.mail_secure',
        {
          _index: 1931,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.mail_user',
        {
          _index: 1932,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.redis_host',
        {
          _index: 2236,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.configservice.get(configenum.redis_port',
        {
          _index: 2237,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.datasetrepository.create',
        {
          _index: 1084,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        "this.datasetrepository.createquerybuilder('dataset",
        {
          _index: 1063,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'this.datasetrepository.findone',
        {
          _index: 1090,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'this.datasetrepository.remove(dataset',
        {
          _index: 1100,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'this.datasetrepository.save(dataset',
        {
          _index: 1089,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      [
        'this.datasource.createqueryrunner',
        {
          _index: 1299,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'this.diagnosisrepository.find',
        {
          _index: 1342,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'this.diagnosisrepository.findandcount',
        {
          _index: 1345,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'this.diagnosisrepository.findone',
        {
          _index: 1341,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'this.diagnosisservice.diagnosishistoryget(data.userid',
        {
          _index: 1222,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'this.diagnosisservice.diagnosishistoryget(req.user.userid',
        {
          _index: 1189,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'this.diagnosisservice.diagnosishistorylistget',
        {
          _index: 1191,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
          },
        },
      ],
      [
        'this.diagnosisservice.diagnosissupportget',
        {
          _index: 1190,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
          },
        },
      ],
      [
        'this.diagnosisservice.getdiagnosisstatus(data.id',
        {
          _index: 1220,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'this.diagnosisservice.getdiagnosisstatus(id',
        {
          _index: 1187,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'this.diagnosisservice.startdiagnosis(data.id',
        {
          _index: 1217,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'this.diagnosisservice.startdiagnosis(id',
        {
          _index: 1186,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'this.diagnosisservice.uploaddata(data.userid',
        {
          _index: 1213,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'this.diagnosisservice.uploaddata(req.user.userid',
        {
          _index: 1183,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'this.downloadservice.downloadfile(payload',
        {
          _index: 1371,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'this.downloadservice.downloadfilesaszip(payload',
        {
          _index: 1374,
          title: {},
          body: { 'controllers/DownloadController.html': {} },
        },
      ],
      [
        'this.fileclient.send',
        {
          _index: 1006,
          title: {},
          body: { 'controllers/DatasetController.html': {} },
        },
      ],
      [
        "this.fileclient.send('file.findbyids",
        {
          _index: 1776,
          title: {},
          body: {
            'guards/FilesGuard.html': {},
            'interfaces/Request-2.html': {},
          },
        },
      ],
      [
        "this.fileclient.send('file.get.byid",
        {
          _index: 1535,
          title: {},
          body: {
            'guards/FileGuard.html': {},
            'interfaces/Request-1.html': {},
          },
        },
      ],
      [
        'this.fileoperationservice.deletefile(data.file.path',
        {
          _index: 1215,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'this.fileoperationservice.deletefile(file.filepath',
        {
          _index: 1705,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'this.fileoperationservice.deletefile(file.path',
        {
          _index: 1184,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'this.fileoperationservice.readfile',
        {
          _index: 1326,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'this.filerepository',
        {
          _index: 1718,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'this.filerepository.create',
        {
          _index: 2590,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        "this.filerepository.createquerybuilder('file",
        {
          _index: 1670,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'this.filerepository.find',
        {
          _index: 1087,
          title: {},
          body: {
            'injectables/DatasetService.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'this.filerepository.findone',
        {
          _index: 1690,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'this.fileservice.deletefile(payload.fileid',
        {
          _index: 1504,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.deletefiles(payload.fileids',
        {
          _index: 1515,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.getfile(payload.fileid',
        {
          _index: 1498,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.getfilebyid(payload.fileid',
        {
          _index: 1500,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.getfiles(payload.userid',
        {
          _index: 1506,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.getfilesbyid(payload.fileids',
        {
          _index: 1508,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.getfileslist',
        {
          _index: 1509,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.getfilesstatisticusage(payload.userid',
        {
          _index: 1517,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.updatefile(payload.userid',
        {
          _index: 1502,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.fileservice.updatefilesaccess(payload.userid',
        {
          _index: 1513,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'this.findall',
        {
          _index: 2347,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.findone(id',
        {
          _index: 2065,
          title: {},
          body: {
            'injectables/MenuService.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'this.handlefilemd5(file.path',
        {
          _index: 1304,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'this.handlefilemd5(filepath',
        {
          _index: 2589,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.jwt.decode(token',
        {
          _index: 661,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.jwt.sign',
        {
          _index: 644,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.create(dto',
        {
          _index: 1876,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.createquerybuilder',
        {
          _index: 1879,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.delete(id',
        {
          _index: 1887,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.find',
        {
          _index: 1878,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.findone',
        {
          _index: 1883,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.merge(knowledge',
        {
          _index: 1885,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.save(knowledge',
        {
          _index: 1877,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgerepository.save(updatedknowledge',
        {
          _index: 1886,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'this.knowledgeservice.create(dto',
        {
          _index: 1844,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'this.knowledgeservice.findbyid(id',
        {
          _index: 1849,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'this.knowledgeservice.knowledgeget',
        {
          _index: 1845,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'this.knowledgeservice.knowledgelistget',
        {
          _index: 1847,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'this.knowledgeservice.remove(id',
        {
          _index: 1853,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'this.knowledgeservice.update(id',
        {
          _index: 1851,
          title: {},
          body: { 'controllers/KnowledgeController.html': {} },
        },
      ],
      [
        'this.logger.error',
        {
          _index: 1407,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'this.logger.log',
        {
          _index: 2579,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.logger.warn',
        {
          _index: 1425,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'this.mail.sendmail',
        {
          _index: 658,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'this.manageservice.createdataset(payload.userid',
        {
          _index: 1035,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'this.manageservice.datasetslistget(page',
        {
          _index: 1034,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'this.manageservice.deletedataset(payload.datasetid',
        {
          _index: 1041,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'this.manageservice.getdatasetdetail(payload.datasetid',
        {
          _index: 1037,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'this.manageservice.updatedataset',
        {
          _index: 1038,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'this.maxsize',
        {
          _index: 1759,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'this.menurepository.create(menudata',
        {
          _index: 2062,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'this.menurepository.delete(id',
        {
          _index: 2066,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'this.menurepository.find',
        {
          _index: 2044,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'this.menurepository.findone',
        {
          _index: 2061,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'this.menurepository.save(menu',
        {
          _index: 2063,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'this.menurepository.update(id',
        {
          _index: 2064,
          title: {},
          body: { 'injectables/MenuService.html': {} },
        },
      ],
      [
        'this.menuservice.create(data.menudata',
        {
          _index: 2021,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'this.menuservice.findall',
        {
          _index: 2016,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'this.menuservice.findauthroutes(data.userid',
        {
          _index: 2015,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'this.menuservice.findone(data.id',
        {
          _index: 2018,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'this.menuservice.remove(data.id',
        {
          _index: 2026,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'this.menuservice.update(data.menudata.id',
        {
          _index: 2023,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'this.plantservice.create(createplantdto',
        {
          _index: 2122,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'this.plantservice.findall',
        {
          _index: 2123,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'this.plantservice.findone(+id',
        {
          _index: 2124,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'this.plantservice.remove(+id',
        {
          _index: 2126,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'this.plantservice.update(+id',
        {
          _index: 2125,
          title: {},
          body: { 'controllers/PlantController.html': {} },
        },
      ],
      [
        'this.redisservice.del(`upload:task:${taskid',
        {
          _index: 2633,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.redisservice.executewithlock(lockkey',
        {
          _index: 2609,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.redisservice.get',
        {
          _index: 2610,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.redisservice.set(`upload:task:${taskid',
        {
          _index: 2606,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.reflector.getallandoverride(roles_key',
        { _index: 2361, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'this.releaselock(lockkey',
        {
          _index: 2258,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      [
        'this.rolerepository.create(dto',
        {
          _index: 2343,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.rolerepository.find',
        {
          _index: 2339,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.rolerepository.findone',
        {
          _index: 2340,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.rolerepository.remove(role',
        {
          _index: 2346,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.rolerepository.save(role',
        {
          _index: 2344,
          title: {},
          body: { 'injectables/RoleService.html': {} },
        },
      ],
      [
        'this.roleservice.create(payload.dto',
        {
          _index: 2320,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'this.roleservice.findall',
        {
          _index: 2318,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'this.roleservice.finddict',
        {
          _index: 2317,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'this.roleservice.findone(payload.id',
        {
          _index: 2319,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'this.roleservice.remove(payload.id',
        {
          _index: 2322,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'this.roleservice.update(payload.id',
        {
          _index: 2321,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'this.transporter',
        {
          _index: 1923,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.transporter.sendmail',
        {
          _index: 1935,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'this.uploaddir',
        {
          _index: 2583,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'this.uploadservice.chunkfile',
        {
          _index: 2538,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'this.uploadservice.completeupload(payload.taskid',
        {
          _index: 2542,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'this.uploadservice.createtask(payload',
        {
          _index: 2544,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'this.uploadservice.gettask(payload.taskid',
        {
          _index: 2546,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'this.uploadservice.preloadfile',
        {
          _index: 2534,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'this.uploadservice.savefile',
        {
          _index: 2529,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'this.userclient',
        {
          _index: 2297,
          title: {},
          body: {
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'this.userclient.send',
        {
          _index: 639,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'this.userservice.findbyemail(payload.email',
        {
          _index: 2811,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.findbylogin(payload.login',
        {
          _index: 2807,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.findbyusername(payload.username',
        {
          _index: 2809,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.getavatar(payload.userid',
        {
          _index: 2787,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.profileget(payload.userid',
        {
          _index: 2782,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.profileupdate(payload.userid',
        {
          _index: 2783,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.setroles(user',
        {
          _index: 2792,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.updateavatar',
        {
          _index: 2784,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.updatepassword',
        {
          _index: 2788,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.useractivate(payload.id',
        {
          _index: 2802,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.usercreate(user',
        {
          _index: 2793,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.userdelete(payload.id',
        {
          _index: 2798,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.userget(payload.id',
        {
          _index: 2796,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.userlistget',
        {
          _index: 2790,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.userreset(payload.id',
        {
          _index: 2804,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.userservice.userupdate(payload.id',
        {
          _index: 2800,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'this.validatepath(chunkpath',
        {
          _index: 1621,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.validatepath(filepath',
        {
          _index: 1604,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.validatepath(finalpath',
        {
          _index: 1619,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.validatepath(newpath',
        {
          _index: 1629,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'this.validatepath(oldpath',
        {
          _index: 1628,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'three_gp',
        {
          _index: 3030,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'throw',
        {
          _index: 138,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/AuthService.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/RedisService.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'injectables/RoleService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'throwerror',
        {
          _index: 897,
          title: {},
          body: { 'classes/CustomRpcExceptionFilter.html': {} },
        },
      ],
      [
        'tiff',
        {
          _index: 3003,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['time', { _index: 3150, title: {}, body: { 'index.html': {} } }],
      [
        'timestamp',
        {
          _index: 248,
          title: {},
          body: {
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'controllers/AppController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/TypeormFilter.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'tinyint',
        {
          _index: 2178,
          title: {},
          body: { 'entities/Profile.html': {}, 'entities/User.html': {} },
        },
      ],
      [
        'title',
        {
          _index: 1951,
          title: {},
          body: {
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'toclassonly',
        {
          _index: 1378,
          title: {},
          body: {
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'todo',
        {
          _index: 1185,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/MenuService.html': {},
          },
        },
      ],
      [
        'token',
        {
          _index: 512,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'injectables/RedisService.html': {},
          },
        },
      ],
      [
        'total',
        {
          _index: 377,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/DatasetService.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/FileService.html': {},
            'controllers/KnowledgeController.html': {},
          },
        },
      ],
      [
        'totalchunks',
        {
          _index: 835,
          title: {},
          body: {
            'classes/CreateTaskDto.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UploadChunkDto.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'totalsize',
        {
          _index: 1082,
          title: {},
          body: { 'injectables/DatasetService.html': {} },
        },
      ],
      ['touch', { _index: 3177, title: {}, body: { 'index.html': {} } }],
      [
        'transform',
        {
          _index: 729,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'transform(file',
        {
          _index: 1752,
          title: {},
          body: {
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
          },
        },
      ],
      [
        'transform(value',
        {
          _index: 2078,
          title: {},
          body: {
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
          },
        },
      ],
      [
        'transformer',
        {
          _index: 681,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'transport',
        {
          _index: 602,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'transport.tcp',
        {
          _index: 608,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/DatasetModule.html': {},
            'modules/FileModule.html': {},
            'modules/MenuModule.html': {},
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
          },
        },
      ],
      [
        'transporter',
        {
          _index: 1914,
          title: {},
          body: { 'injectables/MailService.html': {} },
        },
      ],
      [
        'true',
        {
          _index: 27,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateDatasetDto.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'modules/MailModule.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'modules/RedisModule.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'entities/Role.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'injectables/UploadService.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'true})@apiproperty({description',
        {
          _index: 1380,
          title: {},
          body: { 'classes/DownloadFilesDto.html': {} },
        },
      ],
      [
        'true})@isint({each',
        {
          _index: 1379,
          title: {},
          body: {
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        'true})@jointable({name',
        {
          _index: 55,
          title: {},
          body: { 'entities/AIModel.html': {}, 'entities/Dataset.html': {} },
        },
      ],
      [
        'try',
        {
          _index: 660,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'injectables/DownloadService.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/MailService.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'ttf',
        {
          _index: 2988,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'ttl',
        {
          _index: 2205,
          title: {},
          body: { 'injectables/RedisService.html': {} },
        },
      ],
      ['twitter', { _index: 3183, title: {}, body: { 'index.html': {} } }],
      [
        'txt',
        {
          _index: 2981,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'type',
        {
          _index: 20,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'controllers/AiServiceController.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
            'interfaces/ApiResponse.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/BaseEntity.html': {},
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'modules/DatabaseModule.html': {},
            'entities/Dataset.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'entities/File.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/FileSizeValidationPipe.html': {},
            'injectables/FileTypeValidationPipe.html': {},
            'guards/FilesGuard.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/ImageRequest.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/MailService.html': {},
            'entities/Menu.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'entities/Plant.html': {},
            'controllers/PlantController.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'injectables/PlantService.html': {},
            'entities/Profile.html': {},
            'injectables/RedisService.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'entities/Role.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'guards/RolesGuard.html': {},
            'entities/Task.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/TypeormFilter.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'type(undefined',
        {
          _index: 703,
          title: {},
          body: { 'classes/CreateAiConfigsDto.html': {} },
        },
      ],
      [
        'type(undefined)@apiproperty({description',
        {
          _index: 690,
          title: {},
          body: {
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
        },
      ],
      [
        'type.pipe',
        {
          _index: 1145,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'type.pipe.ts',
        {
          _index: 1762,
          title: {},
          body: {
            'injectables/FileTypeValidationPipe.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'type.pipe.ts:5',
        {
          _index: 1764,
          title: {},
          body: { 'injectables/FileTypeValidationPipe.html': {} },
        },
      ],
      [
        'type.pipe.ts:8',
        {
          _index: 1766,
          title: {},
          body: { 'injectables/FileTypeValidationPipe.html': {} },
        },
      ],
      [
        'typealiases',
        {
          _index: 3207,
          title: { 'miscellaneous/typealiases.html': {} },
          body: {},
        },
      ],
      [
        'typeof',
        {
          _index: 736,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'typeorm',
        {
          _index: 67,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'injectables/AiConfigsService.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceAccessLog.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/AiServiceLog.html': {},
            'injectables/AiServiceService.html': {},
            'classes/BaseEntity.html': {},
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'injectables/FileService.html': {},
            'injectables/KnowledgeService.html': {},
            'entities/Menu.html': {},
            'injectables/MenuService.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'injectables/RoleService.html': {},
            'entities/Task.html': {},
            'classes/TypeormFilter.html': {},
            'injectables/UploadService.html': {},
            'entities/User.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'typeormerror',
        { _index: 2395, title: {}, body: { 'classes/TypeormFilter.html': {} } },
      ],
      [
        'typeormfilter',
        {
          _index: 344,
          title: { 'classes/TypeormFilter.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController.html': {},
            'classes/TypeormFilter.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'typeormmodule',
        {
          _index: 410,
          title: {},
          body: {
            'modules/AiServiceModule.html': {},
            'modules/DatabaseModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/KnowledgeModule.html': {},
          },
        },
      ],
      [
        'typeormmodule.forfeature',
        {
          _index: 413,
          title: {},
          body: { 'modules/AiServiceModule.html': {} },
        },
      ],
      [
        'typeormmodule.forfeature([diagnosishistory',
        {
          _index: 1261,
          title: {},
          body: { 'modules/DiagnosisModule.html': {} },
        },
      ],
      [
        'typeormmodule.forfeature([plantdiseaseknowledge',
        {
          _index: 1861,
          title: {},
          body: { 'modules/KnowledgeModule.html': {} },
        },
      ],
      [
        'typeormmodule.forfeature(entities',
        { _index: 941, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'typeormmodule.forrootasync',
        { _index: 926, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'typeormmoduleoptions',
        { _index: 921, title: {}, body: { 'modules/DatabaseModule.html': {} } },
      ],
      [
        'types',
        {
          _index: 2412,
          title: {},
          body: {
            'classes/UpdateAiModelDto.html': {},
            'classes/UpdatePlantDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['typescript', { _index: 3077, title: {}, body: { 'index.html': {} } }],
      [
        'unauthorizedexception',
        {
          _index: 1280,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'undefined',
        {
          _index: 49,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceLog.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'undefined})@isnotempty({message',
        {
          _index: 701,
          title: {},
          body: { 'classes/CreateAiConfigsDto.html': {} },
        },
      ],
      [
        'under_maintenance',
        {
          _index: 259,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        "under_maintenance'])@isoptional()@apiproperty({description",
        {
          _index: 717,
          title: {},
          body: {
            'classes/CreateAiServiceDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
          },
        },
      ],
      [
        'unique',
        {
          _index: 272,
          title: {},
          body: {
            'entities/AiService.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Role.html': {},
            'entities/User.html': {},
          },
        },
      ],
      [
        'uniquename',
        {
          _index: 1174,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'unit',
        {
          _index: 3090,
          title: {},
          body: { 'index.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'unknown',
        {
          _index: 113,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
            'injectables/AuthService.html': {},
            'classes/CustomRpcExceptionFilter.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/DownloadController.html': {},
            'injectables/DownloadService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/FileService.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/MailService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'injectables/RedisService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'unlicensed',
        { _index: 3206, title: {}, body: { 'properties.html': {} } },
      ],
      [
        'unlink',
        {
          _index: 1601,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'unlink(filepath',
        {
          _index: 1606,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
          },
        },
      ],
      [
        'unlinksync',
        {
          _index: 1756,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'unlinksync(file.path',
        {
          _index: 1760,
          title: {},
          body: { 'injectables/FileSizeValidationPipe.html': {} },
        },
      ],
      [
        'update',
        {
          _index: 168,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        "update(@param('id",
        {
          _index: 201,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'controllers/MenuController.html': {},
            'controllers/PlantController.html': {},
          },
        },
      ],
      [
        'update(@payload',
        {
          _index: 2022,
          title: {},
          body: {
            'controllers/MenuController-1.html': {},
            'controllers/RoleController-1.html': {},
          },
        },
      ],
      [
        'update(data',
        {
          _index: 2009,
          title: {},
          body: { 'controllers/MenuController-1.html': {} },
        },
      ],
      [
        'update(id',
        {
          _index: 180,
          title: {},
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'injectables/KnowledgeService.html': {},
            'controllers/MenuController.html': {},
            'injectables/MenuService.html': {},
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'controllers/RoleController.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'update(payload',
        {
          _index: 2313,
          title: {},
          body: { 'controllers/RoleController-1.html': {} },
        },
      ],
      [
        'update(serviceid',
        {
          _index: 333,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
          },
        },
      ],
      [
        'updateaiconfigdto',
        {
          _index: 118,
          title: { 'classes/UpdateAiConfigDto.html': {} },
          body: {
            'injectables/AiConfigsService.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateaimodeldto',
        {
          _index: 181,
          title: { 'classes/UpdateAiModelDto.html': {} },
          body: {
            'controllers/AiModelController.html': {},
            'injectables/AiModelService.html': {},
            'classes/UpdateAiModelDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateaiservicedto',
        {
          _index: 334,
          title: { 'classes/UpdateAiServiceDto.html': {} },
          body: {
            'controllers/AiServiceController.html': {},
            'injectables/AiServiceService.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateconfig',
        {
          _index: 94,
          title: {},
          body: {
            'injectables/AiConfigsService.html': {},
            'controllers/AiServiceController.html': {},
          },
        },
      ],
      [
        'updateconfig(_',
        {
          _index: 337,
          title: {},
          body: { 'controllers/AiServiceController.html': {} },
        },
      ],
      [
        'updateconfig(configid',
        {
          _index: 117,
          title: {},
          body: { 'injectables/AiConfigsService.html': {} },
        },
      ],
      [
        'updatedat',
        {
          _index: 17,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'classes/BaseEntity.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
          },
        },
      ],
      [
        'updatedataset',
        {
          _index: 969,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'updatedataset(datasetid',
        {
          _index: 986,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
          },
        },
      ],
      [
        'updatedataset(payload',
        {
          _index: 1028,
          title: {},
          body: { 'controllers/DatasetController-1.html': {} },
        },
      ],
      [
        'updatedatasetdto',
        {
          _index: 987,
          title: { 'classes/UpdateDatasetDto.html': {} },
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'classes/UpdateDatasetDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatedatecolumn',
        { _index: 670, title: {}, body: { 'classes/BaseEntity.html': {} } },
      ],
      [
        'updatedby',
        {
          _index: 18,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/Dataset.html': {},
            'injectables/DatasetService.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'entities/File.html': {},
            'entities/Task.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'updatedend',
        {
          _index: 977,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'updatedknowledge',
        {
          _index: 1884,
          title: {},
          body: { 'injectables/KnowledgeService.html': {} },
        },
      ],
      [
        'updatedrole',
        {
          _index: 2300,
          title: {},
          body: { 'controllers/RoleController.html': {} },
        },
      ],
      [
        'updatedstart',
        {
          _index: 976,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'updatefile',
        {
          _index: 1459,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'updatefile(@payload',
        {
          _index: 1501,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'updatefile(payload',
        {
          _index: 1485,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'updatefile(userid',
        {
          _index: 1662,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'updatefiledto',
        {
          _index: 1491,
          title: { 'classes/UpdateFileDto.html': {} },
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatefilesaccess',
        {
          _index: 1460,
          title: {},
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'updatefilesaccess(payload',
        {
          _index: 1488,
          title: {},
          body: { 'controllers/FileController-1.html': {} },
        },
      ],
      [
        'updatefilesaccess(userid',
        {
          _index: 1664,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'updatefilesaccessdto',
        {
          _index: 1492,
          title: { 'classes/UpdateFilesAccessDto.html': {} },
          body: {
            'controllers/FileController-1.html': {},
            'injectables/FileService.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updatepassword',
        {
          _index: 2660,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'updatepassword(payload',
        {
          _index: 2760,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'updatepassword(req',
        {
          _index: 2680,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'updatepassworddto',
        {
          _index: 2432,
          title: {
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
          },
          body: {
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateplantdiseaseknowledgedto',
        {
          _index: 1836,
          title: { 'classes/UpdatePlantDiseaseKnowledgeDto.html': {} },
          body: {
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateplantdto',
        {
          _index: 2116,
          title: { 'classes/UpdatePlantDto.html': {} },
          body: {
            'controllers/PlantController.html': {},
            'injectables/PlantService.html': {},
            'classes/UpdatePlantDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateprofiledto',
        {
          _index: 2466,
          title: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
          },
          body: {
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateroledto',
        {
          _index: 2290,
          title: {
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
          },
          body: {
            'controllers/RoleController.html': {},
            'controllers/RoleController-1.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updates',
        {
          _index: 229,
          title: {},
          body: {
            'injectables/AiModelService.html': {},
            'injectables/PlantService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'updateuserdto',
        {
          _index: 2480,
          title: {
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
          body: {
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'upload.chunk',
        {
          _index: 2502,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'upload.complete',
        {
          _index: 2505,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'upload.preload',
        {
          _index: 2515,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'upload.single',
        {
          _index: 2519,
          title: {},
          body: { 'controllers/UploadController.html': {} },
        },
      ],
      [
        'upload:lock:${taskid',
        {
          _index: 2607,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'upload:task:${taskid',
        {
          _index: 2611,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'upload_service',
        {
          _index: 3232,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'upload_service_http_port',
        {
          _index: 2856,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'upload_service_name',
        {
          _index: 1547,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'upload_service_tcp_port',
        {
          _index: 1548,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'uploadavatar',
        {
          _index: 2661,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'uploadavatar(payload',
        {
          _index: 2762,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'uploadavatar(req',
        {
          _index: 2683,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'uploadchunkdto',
        {
          _index: 2481,
          title: {
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
          },
          body: {
            'classes/UploadChunkDto.html': {},
            'classes/UploadChunkDto-1.html': {},
            'controllers/UploadController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'uploadcontroller',
        {
          _index: 2494,
          title: { 'controllers/UploadController.html': {} },
          body: {
            'controllers/UploadController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'uploaddata',
        {
          _index: 1108,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'uploaddata(data',
        {
          _index: 1208,
          title: {},
          body: { 'controllers/DiagnosisController-1.html': {} },
        },
      ],
      [
        'uploaddata(req',
        {
          _index: 1123,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uploaddata(userid',
        {
          _index: 1276,
          title: {},
          body: {
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
          },
        },
      ],
      [
        'uploaddir',
        {
          _index: 2552,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'uploadedchunks',
        {
          _index: 2369,
          title: {},
          body: {
            'entities/Task.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'uploadedfile',
        {
          _index: 1127,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'uploadpreloaddto',
        {
          _index: 2514,
          title: { 'classes/UploadPreloadDto.html': {} },
          body: {
            'controllers/UploadController.html': {},
            'classes/UploadPreloadDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'uploads',
        {
          _index: 2573,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'uploads/audio',
        {
          _index: 1169,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uploads/documents',
        {
          _index: 1167,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uploads/images',
        {
          _index: 1163,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uploads/other',
        {
          _index: 1158,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uploads/videos',
        {
          _index: 1165,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uploadservice',
        {
          _index: 2521,
          title: { 'injectables/UploadService.html': {} },
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'uploadsingledto',
        {
          _index: 2518,
          title: { 'classes/UploadSingleDto.html': {} },
          body: {
            'controllers/UploadController.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "uploadsingledto['filemeta",
        {
          _index: 2584,
          title: {},
          body: { 'injectables/UploadService.html': {} },
        },
      ],
      [
        'uploadtask',
        {
          _index: 2576,
          title: {},
          body: {
            'injectables/UploadService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'url',
        {
          _index: 273,
          title: {},
          body: {
            'entities/AiService.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      [
        'used',
        {
          _index: 1722,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'usefactory',
        {
          _index: 927,
          title: {},
          body: {
            'modules/DatabaseModule.html': {},
            'modules/FileModule.html': {},
          },
        },
      ],
      [
        'usefilters',
        {
          _index: 357,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'usefilters(typeormfilter',
        {
          _index: 367,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/MenuController-1.html': {},
            'controllers/RoleController.html': {},
          },
        },
      ],
      [
        'useguards',
        {
          _index: 358,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'useguards(authguard',
        {
          _index: 366,
          title: {},
          body: {
            'controllers/AiServiceController.html': {},
            'controllers/AppController.html': {},
            'controllers/AuthController.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "useguards(authguard)@get('speed",
        {
          _index: 452,
          title: {},
          body: { 'controllers/AppController.html': {} },
        },
      ],
      [
        'useguards(rolesguard',
        {
          _index: 1993,
          title: {},
          body: {
            'controllers/MenuController.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'usehooks',
        {
          _index: 550,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
          },
        },
      ],
      [
        'useinterceptors',
        {
          _index: 1128,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        "useinterceptors(fileinterceptor('file",
        {
          _index: 2714,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user',
        {
          _index: 595,
          title: { 'entities/User.html': {} },
          body: {
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/MailService.html': {},
            'entities/Profile.html': {},
            'interfaces/Request.html': {},
            'entities/Role.html': {},
            'guards/RolesGuard.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'user.activate',
        {
          _index: 662,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.avatar.get',
        {
          _index: 2720,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.avatar.upload',
        {
          _index: 2716,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.controller',
        { _index: 2814, title: {}, body: { 'modules/UserModule.html': {} } },
      ],
      [
        'user.create',
        {
          _index: 643,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.delete',
        {
          _index: 2736,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.dto',
        {
          _index: 2704,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.dto.ts',
        {
          _index: 855,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'user.dto.ts:22',
        {
          _index: 859,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'user.dto.ts:31',
        {
          _index: 878,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'user.dto.ts:40',
        {
          _index: 865,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'user.dto.ts:48',
        {
          _index: 874,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'user.dto.ts:57',
        {
          _index: 870,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'user.dto.ts:65',
        {
          _index: 886,
          title: {},
          body: { 'classes/CreateUserDto-1.html': {} },
        },
      ],
      [
        'user.dto.ts:66',
        {
          _index: 868,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
          },
        },
      ],
      [
        'user.entity',
        {
          _index: 2186,
          title: {},
          body: { 'entities/Profile.html': {}, 'entities/Role.html': {} },
        },
      ],
      [
        'user.find.byemail',
        {
          _index: 640,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.find.bylogin',
        {
          _index: 648,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.find.byusername',
        {
          _index: 2751,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'user.get',
        {
          _index: 2735,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.id',
        {
          _index: 654,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.list.get',
        {
          _index: 2731,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.logout',
        {
          _index: 2726,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.password',
        {
          _index: 653,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.password.reset',
        {
          _index: 2740,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.password.update',
        {
          _index: 2724,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.profile.get',
        {
          _index: 2710,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.profile.update',
        {
          _index: 2711,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.roles',
        { _index: 2276, title: {}, body: { 'entities/Role.html': {} } },
      ],
      [
        'user.roles.map((role',
        {
          _index: 656,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.roles?.includes(role',
        { _index: 2365, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'user.service',
        {
          _index: 2780,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'user.status',
        {
          _index: 649,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user.update',
        {
          _index: 2737,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'user.update.activate',
        {
          _index: 2765,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'user.username',
        {
          _index: 655,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'user/:id',
        {
          _index: 2734,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/:id/reset/password',
        {
          _index: 2738,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/avatar',
        {
          _index: 2712,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/create',
        {
          _index: 2732,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/list',
        {
          _index: 2727,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/logout',
        {
          _index: 2725,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/profile',
        {
          _index: 2708,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user/reset/password',
        {
          _index: 2723,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'user_service',
        {
          _index: 3235,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'user_service_http_port',
        {
          _index: 2857,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'user_service_name',
        {
          _index: 637,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/RoleController.html': {},
            'modules/RoleModule.html': {},
            'controllers/UserController.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'user_service_tcp_port',
        {
          _index: 2325,
          title: {},
          body: {
            'modules/RoleModule.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'useractivate',
        {
          _index: 2745,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'useractivate(@payload',
        {
          _index: 2801,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'useractivate(payload',
        {
          _index: 2764,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userclient',
        {
          _index: 620,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/RoleController.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'usercontroller',
        {
          _index: 2654,
          title: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'modules/UserModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'usercreate',
        {
          _index: 2662,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'usercreate(@body',
        {
          _index: 2733,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'usercreate(@payload',
        {
          _index: 2791,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'usercreate(createuserdto',
        {
          _index: 2686,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'usercreate(dto',
        {
          _index: 2767,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userdelete',
        {
          _index: 2663,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'userdelete(@payload',
        {
          _index: 2797,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userdelete(id',
        {
          _index: 2689,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'userdelete(payload',
        {
          _index: 2769,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userget',
        {
          _index: 2664,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'userget(@payload',
        {
          _index: 2795,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userget(id',
        {
          _index: 2691,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'userget(payload',
        {
          _index: 2771,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userid',
        {
          _index: 279,
          title: {},
          body: {
            'entities/AiServiceAccessLog.html': {},
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'controllers/DatasetController.html': {},
            'controllers/DatasetController-1.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController-1.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'controllers/FileController-1.html': {},
            'guards/FileGuard.html': {},
            'injectables/FileService.html': {},
            'guards/FilesGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'controllers/MenuController.html': {},
            'controllers/MenuController-1.html': {},
            'interfaces/Request.html': {},
            'interfaces/Request-1.html': {},
            'interfaces/Request-2.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UploadPreloadDto.html': {},
            'injectables/UploadService.html': {},
            'classes/UploadSingleDto.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
          },
        },
      ],
      [
        'userlistget',
        {
          _index: 2665,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'userlistget(page',
        {
          _index: 2693,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'userlistget(payload',
        {
          _index: 2773,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'usermodule',
        {
          _index: 2812,
          title: { 'modules/UserModule.html': {} },
          body: {
            'modules/UserModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'username',
        {
          _index: 591,
          title: {},
          body: {
            'injectables/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'modules/DatabaseModule.html': {},
            'injectables/JwtStrategy.html': {},
            'interfaces/Request.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'entities/User.html': {},
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
            'interfaces/UserPayload.html': {},
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
        },
      ],
      [
        'userpayload',
        {
          _index: 590,
          title: { 'interfaces/UserPayload.html': {} },
          body: {
            'injectables/AuthGuard.html': {},
            'injectables/JwtStrategy.html': {},
            'interfaces/Request.html': {},
            'interfaces/UserPayload.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userquery',
        {
          _index: 2815,
          title: {
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
          },
          body: {
            'interfaces/UserQuery.html': {},
            'interfaces/UserQuery-1.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userreset',
        {
          _index: 2666,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'userreset(@payload',
        {
          _index: 2803,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userreset(id',
        {
          _index: 2696,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'userreset(payload',
        {
          _index: 2775,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'users',
        {
          _index: 2273,
          title: {},
          body: {
            'entities/Role.html': {},
            'injectables/RoleService.html': {},
          },
        },
      ],
      [
        'users_roles',
        { _index: 2646, title: {}, body: { 'entities/User.html': {} } },
      ],
      [
        'userservice',
        {
          _index: 2779,
          title: {},
          body: {
            'controllers/UserController-1.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'userstatus',
        {
          _index: 871,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'userupdate',
        {
          _index: 2667,
          title: {},
          body: {
            'controllers/UserController.html': {},
            'controllers/UserController-1.html': {},
          },
        },
      ],
      [
        'userupdate(@payload',
        {
          _index: 2799,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      [
        'userupdate(id',
        {
          _index: 2699,
          title: {},
          body: { 'controllers/UserController.html': {} },
        },
      ],
      [
        'userupdate(payload',
        {
          _index: 2777,
          title: {},
          body: { 'controllers/UserController-1.html': {} },
        },
      ],
      ['using', { _index: 3151, title: {}, body: { 'index.html': {} } }],
      [
        'utf',
        {
          _index: 1178,
          title: {},
          body: { 'controllers/DiagnosisController.html': {} },
        },
      ],
      [
        'uuid',
        {
          _index: 1140,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'uuidv4',
        {
          _index: 1139,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'v4',
        {
          _index: 1138,
          title: {},
          body: {
            'controllers/DiagnosisController.html': {},
            'injectables/RedisService.html': {},
            'injectables/UploadService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      [
        'validate',
        {
          _index: 1801,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'validate(payload',
        {
          _index: 1803,
          title: {},
          body: { 'injectables/JwtStrategy.html': {} },
        },
      ],
      [
        'validateif',
        {
          _index: 1899,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'validateif((o',
        {
          _index: 1900,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'validateif(o',
        {
          _index: 1889,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'validatepath',
        {
          _index: 1570,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'validatepath(filepath',
        {
          _index: 1594,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'validator',
        {
          _index: 684,
          title: {},
          body: {
            'classes/CompleteChunkDto.html': {},
            'classes/ConfigDto.html': {},
            'classes/CreateAiConfigDto.html': {},
            'classes/CreateAiConfigsDto.html': {},
            'classes/CreateAiServiceDto.html': {},
            'classes/CreateDatasetDto.html': {},
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'classes/CreateRoleDto.html': {},
            'classes/CreateRoleDto-1.html': {},
            'classes/CreateTaskDto.html': {},
            'classes/CreateTempLinkDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/CreateUserDto-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'classes/LoginDto.html': {},
            'classes/LoginDto-1.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'classes/RegisterDto.html': {},
            'classes/RegisterDto-1.html': {},
            'classes/ResetPasswordDto.html': {},
            'classes/ResetPasswordDto-1.html': {},
            'classes/TaskCreateDto.html': {},
            'classes/UpdateAiConfigDto.html': {},
            'classes/UpdateAiServiceDto.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'classes/UpdatePasswordDto.html': {},
            'classes/UpdatePasswordDto-1.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
            'classes/UpdateProfileDto.html': {},
            'classes/UpdateProfileDto-1.html': {},
            'classes/UpdateRoleDto.html': {},
            'classes/UpdateRoleDto-1.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UpdateUserDto-1.html': {},
            'classes/UploadChunkDto-1.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'value',
        {
          _index: 735,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'modules/DatabaseModule.html': {},
            'controllers/DatasetController.html': {},
            'injectables/DiagnosisService.html': {},
            'injectables/DiagnosisService-1.html': {},
            'classes/DownloadFilesDto.html': {},
            'injectables/DownloadService.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/KnowledgeService.html': {},
            'injectables/ParseFileIdsPipe.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'injectables/ParseStringDatePipe.html': {},
            'injectables/RedisService.html': {},
            'injectables/RoleService.html': {},
            'classes/UpdateDatasetDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
            'injectables/UploadService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'value.includes',
        {
          _index: 737,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'value.map((id',
        {
          _index: 2087,
          title: {},
          body: { 'injectables/ParseFileIdsPipe.html': {} },
        },
      ],
      [
        'value.map((item',
        {
          _index: 741,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'injectables/ParseFileTypePipe.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'value.map((v',
        {
          _index: 1382,
          title: {},
          body: {
            'classes/DownloadFilesDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdateFilesAccessDto.html': {},
          },
        },
      ],
      [
        "value.split(',').map((id",
        {
          _index: 2082,
          title: {},
          body: { 'injectables/ParseFileIdsPipe.html': {} },
        },
      ],
      [
        "value.split(',').map((item",
        {
          _index: 738,
          title: {},
          body: {
            'classes/CreateDatasetDto.html': {},
            'classes/UpdateDatasetDto.html': {},
          },
        },
      ],
      [
        'varchar',
        {
          _index: 36,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/AiService.html': {},
            'entities/AiServiceConfig.html': {},
            'entities/Dataset.html': {},
            'entities/DiagnosisHistory.html': {},
            'entities/DiagnosisHistory-1.html': {},
            'entities/File.html': {},
            'entities/Menu.html': {},
            'entities/Plant.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'entities/Profile.html': {},
            'entities/Role.html': {},
            'entities/Task.html': {},
            'entities/User.html': {},
          },
        },
      ],
      ['variable', { _index: 2849, title: {}, body: { 'coverage.html': {} } }],
      [
        'variables',
        {
          _index: 3213,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'verify',
        {
          _index: 496,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/AuthController-1.html': {},
          },
        },
      ],
      [
        "verify(@param('token",
        {
          _index: 547,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'verify(@payload',
        {
          _index: 579,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'verify(payload',
        {
          _index: 565,
          title: {},
          body: { 'controllers/AuthController-1.html': {} },
        },
      ],
      [
        'verify(token',
        {
          _index: 509,
          title: {},
          body: { 'controllers/AuthController.html': {} },
        },
      ],
      [
        'verifyaccount',
        {
          _index: 615,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'verifyaccount(token',
        {
          _index: 630,
          title: {},
          body: { 'injectables/AuthService.html': {} },
        },
      ],
      [
        'verifyhtml',
        {
          _index: 524,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'version',
        {
          _index: 19,
          title: {},
          body: {
            'entities/AIModel.html': {},
            'entities/File.html': {},
            'entities/Task.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'versioncolumn',
        { _index: 2381, title: {}, body: { 'entities/Task.html': {} } },
      ],
      [
        'video',
        {
          _index: 1741,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'miscellaneous/enumerations.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/3gpp',
        {
          _index: 3031,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/avi',
        {
          _index: 3265,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'video/mp4',
        {
          _index: 3014,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/mpeg',
        {
          _index: 3029,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/ogg',
        {
          _index: 3027,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/quicktime',
        {
          _index: 3019,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/webm',
        {
          _index: 3025,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'video/x',
        {
          _index: 3016,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'videotypes',
        {
          _index: 1730,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'videotypevalue',
        {
          _index: 2872,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      [
        'videourl',
        {
          _index: 773,
          title: {},
          body: {
            'classes/CreatePlantDiseaseKnowledgeDto.html': {},
            'entities/PlantDiseaseKnowledge.html': {},
            'classes/UpdatePlantDiseaseKnowledgeDto.html': {},
          },
        },
      ],
      ['visit', { _index: 3133, title: {}, body: { 'index.html': {} } }],
      ['visualize', { _index: 3146, title: {}, body: { 'index.html': {} } }],
      [
        'void',
        {
          _index: 1596,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'classes/HttpExceptionFilter.html': {},
            'classes/OtherExceptionsFilter.html': {},
            'injectables/RedisService.html': {},
            'classes/TypeormFilter.html': {},
          },
        },
      ],
      [
        'w',
        {
          _index: 1620,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        'warning',
        { _index: 400, title: {}, body: { 'entities/AiServiceLog.html': {} } },
      ],
      ['watch', { _index: 3085, title: {}, body: { 'index.html': {} } }],
      [
        'wav',
        {
          _index: 2942,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'web',
        {
          _index: 2931,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'webm',
        {
          _index: 3024,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'webp',
        {
          _index: 3005,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['website', { _index: 3181, title: {}, body: { 'index.html': {} } }],
      [
        'weight',
        {
          _index: 3339,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'weights',
        {
          _index: 3257,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        "where('file.createdby",
        {
          _index: 1725,
          title: {},
          body: { 'injectables/FileService.html': {} },
        },
      ],
      [
        'white',
        {
          _index: 3323,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'willsoto/nestjs',
        {
          _index: 474,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'wma',
        {
          _index: 2952,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'wmv',
        {
          _index: 3020,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'woff',
        {
          _index: 2992,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'woff2',
        {
          _index: 2994,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'word',
        {
          _index: 3272,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'wordopenxml',
        {
          _index: 3273,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['working', { _index: 3132, title: {}, body: { 'index.html': {} } }],
      [
        'world',
        { _index: 489, title: {}, body: { 'injectables/AppService.html': {} } },
      ],
      [
        'writestream',
        {
          _index: 1610,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        'writestream.end',
        {
          _index: 1627,
          title: {},
          body: { 'injectables/FileOperationService.html': {} },
        },
      ],
      [
        "writestream.on('error",
        {
          _index: 1618,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      [
        "writestream.on('finish",
        {
          _index: 1617,
          title: {},
          body: {
            'injectables/FileOperationService.html': {},
            'injectables/FileOperationService-1.html': {},
            'injectables/UploadService.html': {},
          },
        },
      ],
      ['x', { _index: 3160, title: {}, body: { 'index.html': {} } }],
      [
        'xls',
        {
          _index: 2970,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'xlsx',
        {
          _index: 2973,
          title: {},
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'xml',
        {
          _index: 2986,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'xmsvideo',
        {
          _index: 3268,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'xzip',
        {
          _index: 3282,
          title: {},
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'yes',
        {
          _index: 979,
          title: {},
          body: {
            'controllers/DatasetController.html': {},
            'injectables/DatasetService.html': {},
            'controllers/DiagnosisController.html': {},
            'controllers/KnowledgeController.html': {},
            'injectables/MailService.html': {},
            'injectables/RedisService.html': {},
            'controllers/UserController.html': {},
          },
        },
      ],
      ["you'd", { _index: 3174, title: {}, body: { 'index.html': {} } }],
      ["you're", { _index: 3094, title: {}, body: { 'index.html': {} } }],
      [
        'z0',
        {
          _index: 1892,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'za',
        {
          _index: 1891,
          title: {},
          body: { 'classes/LoginDto.html': {}, 'classes/LoginDto-1.html': {} },
        },
      ],
      [
        'zip',
        {
          _index: 1411,
          title: {},
          body: {
            'injectables/DownloadService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'zip.append(createreadstream(filepath',
        {
          _index: 1423,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'zip.finalize',
        {
          _index: 1426,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        "zip.on('data",
        {
          _index: 1417,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        "zip.on('end",
        {
          _index: 1419,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        "zip.on('error",
        {
          _index: 1421,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'zipbuffer',
        {
          _index: 1416,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        "zipbuffer.tostring('base64",
        {
          _index: 1427,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'zlib',
        {
          _index: 1413,
          title: {},
          body: { 'injectables/DownloadService.html': {} },
        },
      ],
      [
        'zoom',
        {
          _index: 216,
          title: {},
          body: {
            'modules/AiModelModule.html': {},
            'modules/AiServiceModule.html': {},
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/DiagnosisModule.html': {},
            'modules/FileModule.html': {},
            'modules/FileOperationModule.html': {},
            'modules/KnowledgeModule.html': {},
            'modules/MailModule.html': {},
            'modules/PlantModule.html': {},
            'modules/RedisModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'entities/AIModel.html': {
      url: 'entities/AIModel.html',
      title: 'entity - AIModel',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  AIModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/ai-model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                supportPlants\n                            \n                            \n                                    \n                                    \n                                supportServices\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true, default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        supportPlants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Plant[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, plant => plant.supportModels)@JoinTable({name: 'models_plants', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        supportServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, service => service.supportModels, {nullable: true})@JoinTable({name: 'models_aiServices', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true, default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-model.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { Plant } from './plant.entity';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_model')\nexport class AIModel {\n  @PrimaryGeneratedColumn('increment')\n  id: number; // 主键ID\n\n  @Column({ type: 'varchar', length: 255 })\n  name: string; // 模型名称\n\n  @Column({ type: 'varchar', length: 255 })\n  version: string; // 模型版本\n\n  @Column({ type: 'varchar', length: 255 })\n  description: string; // 模型描述\n\n  @ManyToMany(() => Plant, (plant) => plant.supportModels)\n  @JoinTable({\n    name: 'models_plants',\n    joinColumn: { name: 'modelId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'plantId', referencedColumnName: 'id' },\n  })\n  supportPlants: Plant[] | null; // 支持的植物\n\n  @ManyToMany(() => AiService, (service) => service.supportModels, {\n    nullable: true,\n  })\n  @JoinTable({\n    name: 'models_aiServices',\n    joinColumn: { name: 'modelId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'serviceId', referencedColumnName: 'serviceId' },\n  })\n  supportServices: AiService[] | null; // 支持的服务\n\n  @Column({ type: 'int' })\n  createdBy: number; // 创建者\n\n  @Column({ type: 'int' })\n  updatedBy: number; // 更新者\n\n  @Column({\n    type: 'datetime',\n    nullable: true,\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'datetime',\n    nullable: true,\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AiConfigsService.html': {
      url: 'injectables/AiConfigsService.html',
      title: 'injectable - AiConfigsService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiConfigsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addConfig\n                            \n                            \n                                    Async\n                                addConfigs\n                            \n                            \n                                    Async\n                                findServiceConfigs\n                            \n                            \n                                    Async\n                                removeConfig\n                            \n                            \n                                    Async\n                                updateConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(aiServiceRepository: Repository, aiServiceConfigRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiServiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceConfigRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addConfig(serviceId: number, dto: CreateAiConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateAiConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addConfigs\n                        \n                    \n                \n            \n            \n                \n                        \n                    addConfigs(serviceId: number, dto: CreateAiConfigsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateAiConfigsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findServiceConfigs\n                        \n                    \n                \n            \n            \n                \n                        \n                    findServiceConfigs(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeConfig(configId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateConfig(configId: number, dto: UpdateAiConfigDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateAiConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AiService, AiServiceConfig } from '@app/database/entities';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAiConfigDto } from '../dto/create-ai-config.dto';\nimport { CreateAiConfigsDto } from '../dto/create-ai-configs.dto';\nimport { UpdateAiConfigDto } from '../dto/update-ai-config.dto';\n\n@Injectable()\nexport class AiConfigsService {\n  constructor(\n    @InjectRepository(AiService)\n    private aiServiceRepository: Repository,\n\n    @InjectRepository(AiServiceConfig)\n    private aiServiceConfigRepository: Repository,\n  ) {}\n\n  // 获取服务配置\n  async findServiceConfigs(serviceId: number) {\n    const service = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n      relations: ['aiServiceConfigs'],\n    });\n    if (!service) {\n      throw new NotFoundException('AI服务不存在');\n    }\n    return service.aiServiceConfigs;\n  }\n\n  // 增加AI服务配置\n  async addConfig(serviceId: number, dto: CreateAiConfigDto) {\n    const service = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n      relations: ['aiServiceConfigs'],\n    });\n    if (!service) {\n      throw new NotFoundException('AI服务不存在');\n    }\n    const newConfig = this.aiServiceConfigRepository.create({\n      ...dto,\n      service,\n    });\n    await this.aiServiceConfigRepository.save(newConfig);\n  }\n\n  // 批量增加AI服务配置\n  async addConfigs(serviceId: number, dto: CreateAiConfigsDto) {\n    const service = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n      relations: ['aiServiceConfigs'],\n    });\n    if (!service) {\n      throw new NotFoundException('AI服务不存在');\n    }\n    const newConfigs = dto.configs.map((config) =>\n      this.aiServiceConfigRepository.create({\n        ...config,\n        service,\n      }),\n    );\n    await this.aiServiceConfigRepository.save(newConfigs);\n  }\n\n  // 更新AI服务配置\n  async updateConfig(configId: number, dto: UpdateAiConfigDto) {\n    const { configKey, configValue } = dto;\n    const config = await this.aiServiceConfigRepository.findOne({\n      where: { configId },\n    });\n    if (!config) {\n      throw new NotFoundException('AI服务配置不存在');\n    }\n    if (configKey) {\n      config.configKey = configKey;\n    }\n    if (configValue) {\n      config.configValue = configValue;\n    }\n    await this.aiServiceConfigRepository.save(config);\n  }\n\n  // 删除AI服务配置\n  async removeConfig(configId: number) {\n    const config = await this.aiServiceConfigRepository.findOne({\n      where: { configId },\n    });\n    if (!config) {\n      throw new NotFoundException('AI服务配置不存在');\n    }\n    await this.aiServiceConfigRepository.remove(config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/AiModelController.html': {
      url: 'controllers/AiModelController.html',
      title: 'controller - AiModelController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AiModelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-model/ai-model.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ai-model\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAiModelDto: CreateAiModelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAiModelDto\n                                            \n                                                            CreateAiModelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAiModelDto: UpdateAiModelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAiModelDto\n                                            \n                                                            UpdateAiModelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AiModelService } from './ai-model.service';\nimport { CreateAiModelDto } from './dto/create-ai-model.dto';\nimport { UpdateAiModelDto } from './dto/update-ai-model.dto';\n\n@ApiTags('病害诊断模型管理模块')\n@Controller('ai-model')\nexport class AiModelController {\n  constructor(private readonly aiModelService: AiModelService) {}\n\n  @Post()\n  create(@Body() createAiModelDto: CreateAiModelDto) {\n    return this.aiModelService.create(createAiModelDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.aiModelService.findAll();\n  }\n\n  @Get(':id(\\d+)')\n  findOne(@Param('id') id: string) {\n    return this.aiModelService.findOne(+id);\n  }\n\n  @Patch(':id(\\d+)')\n  update(@Param('id') id: string, @Body() updateAiModelDto: UpdateAiModelDto) {\n    return this.aiModelService.update(+id, updateAiModelDto);\n  }\n\n  @Delete(':id(\\d+)')\n  remove(@Param('id') id: string) {\n    return this.aiModelService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AiModelModule.html': {
      url: 'modules/AiModelModule.html',
      title: 'module - AiModelModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AiModelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiModelModule\n\n\n\ncluster_AiModelModule_providers\n\n\n\n\nAiModelService\n\nAiModelService\n\n\n\nAiModelModule\n\nAiModelModule\n\nAiModelModule -->\n\nAiModelService->AiModelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-model/ai-model.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiModelService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AiModelController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AiModelService } from './ai-model.service';\nimport { AiModelController } from './ai-model.controller';\n\n@Module({\n  controllers: [AiModelController],\n  providers: [AiModelService],\n})\nexport class AiModelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AiModelService.html': {
      url: 'injectables/AiModelService.html',
      title: 'injectable - AiModelService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-model/ai-model.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAiModelDto: CreateAiModelDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAiModelDto\n                                            \n                                                            CreateAiModelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAiModelDto: UpdateAiModelDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-model/ai-model.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAiModelDto\n                                            \n                                                            UpdateAiModelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAiModelDto } from './dto/create-ai-model.dto';\nimport { UpdateAiModelDto } from './dto/update-ai-model.dto';\n\n@Injectable()\nexport class AiModelService {\n  create(createAiModelDto: CreateAiModelDto) {\n    return 'This action adds a new aiModel';\n  }\n\n  findAll() {\n    return `This action returns all aiModel`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} aiModel`;\n  }\n\n  update(id: number, updateAiModelDto: UpdateAiModelDto) {\n    return `This action updates a #${id} aiModel`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} aiModel`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/AiService.html': {
      url: 'entities/AiService.html',
      title: 'entity - AiService',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  AiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/ai-service.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aiServiceAccessLogs\n                            \n                            \n                                    \n                                aiServiceConfigs\n                            \n                            \n                                    \n                                aiServiceLogs\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endpointUrl\n                            \n                            \n                                    \n                                serviceId\n                            \n                            \n                                    \n                                serviceName\n                            \n                            \n                                    \n                                serviceType\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                supportModels\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aiServiceAccessLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiServiceAccessLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, aiServiceAccessLog => aiServiceAccessLog.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aiServiceConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiServiceConfig[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, aiServiceConfig => aiServiceConfig.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aiServiceLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiServiceLog[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, aiServiceLog => aiServiceLog.service)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"active\" | \"inactive\" | \"under_maintenance\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: undefined, default: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        supportModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AIModel[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, model => model.supportServices, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToMany,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { AiServiceAccessLog } from './ai-service-access-log.entity';\nimport { AiServiceConfig } from './ai-service-config.entity';\nimport { AiServiceLog } from './ai-service-log.entity';\nimport { AIModel } from './ai-model.entity';\n\n@Entity('ai_services')\n@Index('serviceNameIdx', ['serviceName'], { unique: true }) // 为 serviceName 添加索引（可选）\nexport class AiService {\n  @PrimaryGeneratedColumn()\n  serviceId: number; // 服务ID\n\n  @Column({ type: 'varchar', length: 255 })\n  serviceName: string; // 服务名称\n\n  @Column({ type: 'varchar', length: 100, nullable: true })\n  serviceType: string; // 服务类型\n\n  @Column({ type: 'text', nullable: true })\n  description: string; // 服务描述\n\n  @Column({\n    type: 'enum',\n    enum: ['active', 'inactive', 'under_maintenance'],\n    default: 'active',\n  })\n  status: 'active' | 'inactive' | 'under_maintenance'; // 服务状态\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  endpointUrl: string; // 服务的访问URL\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n\n  @ManyToMany(() => AIModel, (model) => model.supportServices, {\n    nullable: true,\n  })\n  supportModels: AIModel[] | null; // 支持的模型\n\n  @OneToMany(() => AiServiceLog, (aiServiceLog) => aiServiceLog.service)\n  aiServiceLogs: AiServiceLog[]; // 一对多关系\n\n  @OneToMany(\n    () => AiServiceConfig,\n    (aiServiceConfig) => aiServiceConfig.service,\n  )\n  aiServiceConfigs: AiServiceConfig[]; // 一对多关系\n\n  @OneToMany(\n    () => AiServiceAccessLog,\n    (aiServiceAccessLog) => aiServiceAccessLog.service,\n  )\n  aiServiceAccessLogs: AiServiceAccessLog[]; // 一对多关系\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/AiServiceAccessLog.html': {
      url: 'entities/AiServiceAccessLog.html',
      title: 'entity - AiServiceAccessLog',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  AiServiceAccessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/ai-service-access-log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessId\n                            \n                            \n                                    \n                                accessTime\n                            \n                            \n                                    \n                                responseTime\n                            \n                            \n                                    \n                                    \n                                service\n                            \n                            \n                                    \n                                statusCode\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-access-log.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-access-log.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        responseTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-access-log.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, aiService => aiService.aiServiceAccessLogs)@JoinColumn({name: 'serviceId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-access-log.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-access-log.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-access-log.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_service_access_logs')\nexport class AiServiceAccessLog {\n  @PrimaryGeneratedColumn()\n  accessId: number; // 访问记录ID\n\n  @ManyToOne(() => AiService, (aiService) => aiService.aiServiceAccessLogs)\n  @JoinColumn({ name: 'serviceId' })\n  service: AiService; // 外键，关联AI服务表\n\n  @Column({ name: 'userId' })\n  userId: number; // 用户ID（如果需要）\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  accessTime: Date; // 访问时间\n\n  @Column({ type: 'int' })\n  responseTime: number; // 响应时间（毫秒）\n\n  @Column({ type: 'int' })\n  statusCode: number; // HTTP 状态码\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/AiServiceConfig.html': {
      url: 'entities/AiServiceConfig.html',
      title: 'entity - AiServiceConfig',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  AiServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/ai-service-config.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                configId\n                            \n                            \n                                    \n                                configKey\n                            \n                            \n                                    \n                                configValue\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                service\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        configId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-config.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        configKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-config.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        configValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-config.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-config.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, aiService => aiService.aiServiceConfigs)@JoinColumn({name: 'serviceId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-config.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-config.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_service_configs')\nexport class AiServiceConfig {\n  @PrimaryGeneratedColumn()\n  configId: number; // 配置ID\n\n  @ManyToOne(() => AiService, (aiService) => aiService.aiServiceConfigs)\n  @JoinColumn({ name: 'serviceId' })\n  service: AiService; // 外键，关联AI服务表\n\n  @Column({ type: 'varchar', length: 255 })\n  configKey: string; // 配置项键名\n\n  @Column({ type: 'text' })\n  configValue: string; // 配置项值\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/AiServiceController.html': {
      url: 'controllers/AiServiceController.html',
      title: 'controller - AiServiceController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AiServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/ai-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ai-service\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addConfig\n                            \n                            \n                                    \n                                    \n                                    Async\n                                addConfigs\n                            \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                findPaginated\n                            \n                            \n                                    \n                                    Async\n                                findServiceConfigs\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                removeConfig\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    Async\n                                updateConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    addConfig(serviceId: number, dto: CreateAiConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':serviceId/config')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateAiConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addConfigs\n                        \n                    \n                \n            \n            \n                \n                        \n                    addConfigs(serviceId: number, dto: CreateAiConfigsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':serviceId/configs')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateAiConfigsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateAiServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(serviceId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':serviceId')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPaginated(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findServiceConfigs\n                        \n                    \n                \n            \n            \n                \n                        \n                    findServiceConfigs(serviceId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':serviceId/config')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(serviceId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':serviceId')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        removeConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeConfig(_: number, configId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':serviceId/config/:configId')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(serviceId: number, updateAiServiceDto: UpdateAiServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':serviceId')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAiServiceDto\n                                            \n                                                            UpdateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateConfig(_: number, configId: number, dto: CreateAiConfigDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':serviceId/config/:configId')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/ai-service.controller.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateAiConfigDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@common/decorator/roles.decorator';\nimport { Role } from '@shared/enum/role.enum';\nimport { TypeormFilter } from '@common/filters/typeorm.filter';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateAiConfigDto } from './dto/create-ai-config.dto';\nimport { CreateAiConfigsDto } from './dto/create-ai-configs.dto';\nimport { CreateAiServiceDto } from './dto/create-ai-service.dto';\nimport { UpdateAiServiceDto } from './dto/update-ai-service.dto';\nimport { AiConfigsService } from './services/ai-service-config.service';\nimport { AiServiceService } from './services/ai-service.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('诊断服务管理模块')\n@Controller('ai-service')\n@Roles(Role.Admin, Role.Expert)\n@UseGuards(AuthGuard, RolesGuard)\n@UseFilters(TypeormFilter)\nexport class AiServiceController {\n  constructor(\n    private readonly aiServiceService: AiServiceService,\n    private readonly aiConfigsService: AiConfigsService,\n  ) {}\n\n  // 创建AI服务\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async create(@Body() dto: CreateAiServiceDto) {\n    await this.aiServiceService.create(dto);\n    return formatResponse(201, null, '创建成功');\n  }\n\n  // 获取全部AI服务\n  @Get()\n  async findAll() {\n    const services = await this.aiServiceService.findAll();\n    return formatResponse(200, services, '获取成功');\n  }\n\n  // 分页查询AI服务\n  @Get('list')\n  async findPaginated(\n    @Query('page') page: number,\n    @Query('pageSize') pageSize: number,\n  ) {\n    const [list, total] = await this.aiServiceService.findPaginated(\n      page,\n      pageSize,\n    );\n    return formatResponse(200, { list, total, page, pageSize }, '获取成功');\n  }\n\n  // 获取单个AI服务\n  @Get(':serviceId')\n  async findOne(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    serviceId: number,\n  ) {\n    const service = await this.aiServiceService.findOne(serviceId);\n    return formatResponse(200, service, '获取成功');\n  }\n\n  // 更新AI服务\n  @Put(':serviceId')\n  async update(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    serviceId: number,\n    @Body() updateAiServiceDto: UpdateAiServiceDto,\n  ) {\n    await this.aiServiceService.update(serviceId, updateAiServiceDto);\n    return formatResponse(200, null, '更新成功');\n  }\n\n  // 删除AI服务\n  @Delete(':serviceId')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async remove(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    serviceId: number,\n  ) {\n    await this.aiServiceService.remove(serviceId);\n  }\n\n  // 增加AI服务配置\n  @Post(':serviceId/config')\n  @HttpCode(HttpStatus.CREATED)\n  async addConfig(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    serviceId: number,\n    @Body() dto: CreateAiConfigDto,\n  ) {\n    await this.aiConfigsService.addConfig(serviceId, dto);\n    return formatResponse(201, null, '创建成功');\n  }\n\n  // 批量增加AI服务配置\n  @Post(':serviceId/configs')\n  @HttpCode(HttpStatus.CREATED)\n  async addConfigs(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    serviceId: number,\n    @Body() dto: CreateAiConfigsDto,\n  ) {\n    await this.aiConfigsService.addConfigs(serviceId, dto);\n    return formatResponse(201, null, '创建成功');\n  }\n\n  // 获取服务配置\n  @Get(':serviceId/config')\n  async findServiceConfigs(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    serviceId: number,\n  ) {\n    const configs = await this.aiConfigsService.findServiceConfigs(serviceId);\n    return formatResponse(200, configs, '获取成功');\n  }\n\n  // 更新AI服务配置\n  @Put(':serviceId/config/:configId')\n  async updateConfig(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    _: number,\n    @Param(\n      'configId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    configId: number,\n    @Body() dto: CreateAiConfigDto,\n  ) {\n    await this.aiConfigsService.updateConfig(configId, dto);\n    return formatResponse(200, null, '更新成功');\n  }\n\n  // 删除AI服务配置\n  @Delete(':serviceId/config/:configId')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async removeConfig(\n    @Param(\n      'serviceId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    _: number,\n    @Param(\n      'configId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    configId: number,\n  ) {\n    await this.aiConfigsService.removeConfig(configId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/AiServiceLog.html': {
      url: 'entities/AiServiceLog.html',
      title: 'entity - AiServiceLog',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  AiServiceLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/ai-service-log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                logId\n                            \n                            \n                                    \n                                logType\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                    \n                                service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-log.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-log.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"info\" | \"error\" | \"warning\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: undefined, default: 'info'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-log.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-log.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, aiService => aiService.aiServiceLogs)@JoinColumn({name: 'serviceId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/ai-service-log.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { AiService } from './ai-service.entity';\n\n@Entity('ai_service_logs')\nexport class AiServiceLog {\n  @PrimaryGeneratedColumn()\n  logId: number; // 日志ID\n\n  @ManyToOne(() => AiService, (aiService) => aiService.aiServiceLogs)\n  @JoinColumn({ name: 'serviceId' })\n  service: AiService; // 外键，关联AI服务表\n\n  @Column({\n    type: 'enum',\n    enum: ['info', 'error', 'warning'],\n    default: 'info',\n  })\n  logType: 'info' | 'error' | 'warning'; // 日志类型\n\n  @Column({ type: 'text' })\n  message: string; // 日志信息\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date; // 日志生成时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AiServiceModule.html': {
      url: 'modules/AiServiceModule.html',
      title: 'module - AiServiceModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AiServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiServiceModule\n\n\n\ncluster_AiServiceModule_providers\n\n\n\n\nAiConfigsService\n\nAiConfigsService\n\n\n\nAiServiceModule\n\nAiServiceModule\n\nAiServiceModule -->\n\nAiConfigsService->AiServiceModule\n\n\n\n\n\nAiServiceService\n\nAiServiceService\n\nAiServiceModule -->\n\nAiServiceService->AiServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/ai-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiConfigsService\n                        \n                        \n                            AiServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AiServiceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AiServiceController } from './ai-service.controller';\nimport { AiServiceAccessLog } from '../../../../../libs/database/src/entities/ai-service-access-log.entity';\nimport { AiServiceConfig } from '../../../../../libs/database/src/entities/ai-service-config.entity';\nimport { AiServiceLog } from '../../../../../libs/database/src/entities/ai-service-log.entity';\nimport { AiService } from '../../../../../libs/database/src/entities/ai-service.entity';\nimport { AiServiceService } from './services/ai-service.service';\nimport { AiConfigsService } from './services/ai-service-config.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      AiService,\n      AiServiceAccessLog,\n      AiServiceConfig,\n      AiServiceLog,\n    ]),\n  ],\n  providers: [AiServiceService, AiConfigsService],\n  controllers: [AiServiceController],\n})\nexport class AiServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AiServiceService.html': {
      url: 'injectables/AiServiceService.html',
      title: 'injectable - AiServiceService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPaginated\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(aiServiceRepository: Repository, aiServiceLogRepository: Repository, aiServiceConfigRepository: Repository, aiServiceAccessLogRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiServiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceConfigRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiServiceAccessLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateAiServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPaginated(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(serviceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(serviceId: number, dto: UpdateAiServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateAiServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAiServiceDto } from '../dto/create-ai-service.dto';\nimport { UpdateAiServiceDto } from '../dto/update-ai-service.dto';\nimport { AiServiceAccessLog } from '../../../../../../libs/database/src/entities/ai-service-access-log.entity';\nimport { AiServiceConfig } from '../../../../../../libs/database/src/entities/ai-service-config.entity';\nimport { AiServiceLog } from '../../../../../../libs/database/src/entities/ai-service-log.entity';\nimport { AiService } from '../../../../../../libs/database/src/entities/ai-service.entity';\n\n@Injectable()\nexport class AiServiceService {\n  constructor(\n    @InjectRepository(AiService)\n    private aiServiceRepository: Repository,\n\n    @InjectRepository(AiServiceLog)\n    private aiServiceLogRepository: Repository,\n\n    @InjectRepository(AiServiceConfig)\n    private aiServiceConfigRepository: Repository,\n\n    @InjectRepository(AiServiceAccessLog)\n    private aiServiceAccessLogRepository: Repository,\n  ) {}\n\n  // 创建AI服务\n  async create(dto: CreateAiServiceDto): Promise {\n    const aiService = this.aiServiceRepository.create(dto);\n    return await this.aiServiceRepository.save(aiService);\n  }\n\n  // 获取全部AI服务\n  async findAll(): Promise {\n    return this.aiServiceRepository.find();\n  }\n\n  // 分页查询AI服务\n  async findPaginated(page: number, pageSize: number) {\n    const skip = (page - 1) * pageSize;\n    return await this.aiServiceRepository.findAndCount({\n      skip,\n      take: pageSize,\n    });\n  }\n\n  // 获取单个AI服务\n  async findOne(serviceId: number) {\n    return this.aiServiceRepository.findOne({\n      where: { serviceId },\n      relations: ['aiServiceLogs', 'aiServiceConfigs', 'aiServiceAccessLogs'],\n    });\n  }\n\n  // 更新AI服务\n  async update(serviceId: number, dto: UpdateAiServiceDto): Promise {\n    const aiService = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n    });\n    if (!aiService) {\n      throw new Error('AI Service not found');\n    }\n\n    Object.assign(aiService, dto);\n    return this.aiServiceRepository.save(aiService);\n  }\n\n  // 删除AI服务\n  async remove(serviceId: number): Promise {\n    const aiService = await this.aiServiceRepository.findOne({\n      where: { serviceId },\n    });\n    if (!aiService) {\n      throw new Error('AI Service not found');\n    }\n\n    await this.aiServiceRepository.remove(aiService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/ApiResponse.html': {
      url: 'interfaces/ApiResponse.html',
      title: 'interface - ApiResponse',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/shared/src/helpers/response.helper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  code: number;\n  data: T | null;\n  message: string;\n}\n\nexport const formatResponse = (\n  code: number = 200,\n  data: T | null = null,\n  message: string = \'Success\',\n): ApiResponse => {\n  return { code, data, message };\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/AppController.html': {
      url: 'controllers/AppController.html',
      title: 'controller - AppController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/app.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTimestamp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTimestamp()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('speed-test')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthGuard } from '@common/guards/auth.guard';\nimport { Controller, Get, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('speed-test')\n  async getTimestamp(): Promise {\n    const timestamp = Date.now();\n    // 返回响应给前端，包含一个时间戳，前端可以根据时间戳计算响应延时\n    return {\n      message: 'Speed test successful',\n      timestamp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth-service/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            MenuModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DatabaseModule } from '@app/database';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { MenuModule } from './modules/menu/menu.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: [\n        '.env',\n        `.env.${process.env.NODE_ENV || 'development'}.local`,\n      ],\n    }),\n    DatabaseModule.register(),\n    AuthModule,\n    MenuModule,\n    PrometheusModule.register(),\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AppService.html': {
      url: 'injectables/AppService.html',
      title: 'injectable - AppService',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \'@nestjs/common\';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return \'Hello World!\';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'controllers/AuthController.html': {
      url: 'controllers/AuthController.html',
      title: 'controller - AuthController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                buttonsGet\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        buttonsGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    buttonsGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('buttons')@UseGuards(AuthGuard)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(req: Request, dto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                        \n                    verify(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify/:token')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthGuard } from '@common/guards/auth.guard';\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  Param,\n  Post,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { ApiTags } from '@nestjs/swagger';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport { AUTH_SERVICE_NAME } from 'config/microservice.config';\nimport { Request } from 'express';\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { verifyHtml } from '@shared/constants/html';\n\n@ApiTags('权限认证模块')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    @Inject(AUTH_SERVICE_NAME) private readonly authClient: ClientProxy,\n  ) {}\n\n  @Post('register')\n  @HttpCode(HttpStatus.CREATED)\n  async register(@Req() req: Request, @Body() dto: RegisterDto) {\n    const token = await firstValueFrom(\n      this.authClient.send({ cmd: 'auth.register' }, { dto }),\n    );\n    const link = `${req.protocol}://${req.get('host')}/auth/verify/${token}`;\n    await firstValueFrom(\n      this.authClient.send({ cmd: 'auth.notify' }, { email: dto.email, link }),\n    );\n    return formatResponse(201, null, '注册成功，请查看邮箱验证');\n  }\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  async login(@Body() dto: LoginDto) {\n    const result = await lastValueFrom(\n      this.authClient.send({ cmd: 'auth.login' }, { dto }),\n    );\n    return formatResponse(\n      200,\n      { access_token: result.access_token },\n      '登录成功',\n    );\n  }\n\n  @Post('verify/:token')\n  @HttpCode(HttpStatus.OK)\n  async verify(@Param('token') token: string) {\n    await lastValueFrom(\n      this.authClient.send({ cmd: 'auth.verify' }, { token }),\n    );\n    return verifyHtml;\n  }\n\n  @Get('buttons')\n  @UseGuards(AuthGuard)\n  @HttpCode(HttpStatus.OK)\n  async buttonsGet() {\n    return formatResponse(\n      200,\n      { useHooks: { add: true, delete: true } },\n      '获取按钮成功',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/AuthController-1.html': {
      url: 'controllers/AuthController-1.html',
      title: 'controller - AuthController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                buttonsGet\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                notify\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        buttonsGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    buttonsGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'auth.buttonsGet'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'auth.login'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        notify\n                        \n                    \n                \n            \n            \n                \n                        \n                    notify(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'auth.notify'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'auth.register'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                        \n                    verify(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'auth.verify'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\n\n@Controller()\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @MessagePattern({ cmd: 'auth.register' })\n  async register(@Payload() payload: { dto: RegisterDto }) {\n    const { email, password } = payload.dto;\n    return this.authService.register(email, password);\n  }\n\n  @MessagePattern({ cmd: 'auth.login' })\n  async login(@Payload() payload: { dto: LoginDto }) {\n    const { login, password } = payload.dto;\n    return this.authService.login(login, password);\n  }\n\n  @MessagePattern({ cmd: 'auth.notify' })\n  async notify(@Payload() payload: { email: string; token: string }) {\n    return this.authService.notifyAccount(payload.email, payload.token);\n  }\n\n  @MessagePattern({ cmd: 'auth.verify' })\n  async verify(@Payload() payload: { token: string }) {\n    return this.authService.verifyAccount(payload.token);\n  }\n\n  @MessagePattern({ cmd: 'auth.buttonsGet' })\n  async buttonsGet() {\n    return this.authService.buttonsGet();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AuthGuard.html': {
      url: 'injectables/AuthGuard.html',
      title: 'injectable - AuthGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportAuthGuard('jwt')\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/common/src/guards/auth.guard.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport interface UserPayload {\n  userId: number;\n  roles: string[];\n  username?: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserPayload;\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AuthModule.html': {
      url: 'modules/AuthModule.html',
      title: 'module - AuthModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { PassportModule } from '@nestjs/passport';\nimport {\n  AUTH_SERVICE_NAME,\n  AUTH_SERVICE_TCP_PORT,\n} from 'config/microservice.config';\nimport { AuthController } from './auth.controller';\nimport { JwtStrategy } from './auth.strategy';\n\n@Module({\n  imports: [\n    PassportModule,\n    ClientsModule.register([\n      {\n        name: AUTH_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: AUTH_SERVICE_TCP_PORT },\n      },\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AuthService.html': {
      url: 'injectables/AuthService.html',
      title: 'injectable - AuthService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buttonsGet\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                notifyAccount\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                verifyAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwt: JwtService, mail: MailService, userClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/auth-service/src/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buttonsGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    buttonsGet()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(login: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        notifyAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyAccount(email: string, link: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAccount(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/auth/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailService } from '@app/mail';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { ClientProxy, RpcException } from '@nestjs/microservices';\nimport { compare } from 'bcryptjs';\nimport { USER_SERVICE_NAME } from 'config/microservice.config';\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwt: JwtService,\n    private mail: MailService,\n    @Inject(USER_SERVICE_NAME) private readonly userClient: ClientProxy,\n  ) {}\n\n  async register(email: string, password: string) {\n    const result = await firstValueFrom(\n      this.userClient.send({ cmd: 'user.find.byEmail' }, { email }),\n    );\n    if (result) {\n      throw new RpcException({\n        code: 400,\n        message: '邮箱已被注册',\n      });\n    }\n    const newUser = await lastValueFrom(\n      this.userClient.send({ cmd: 'user.create' }, { email, password }),\n    );\n    return this.jwt.sign(\n      { userId: newUser.id },\n      {\n        expiresIn: '30m',\n      },\n    );\n  }\n\n  async login(login: string, password: string) {\n    const user = await firstValueFrom(\n      this.userClient.send({ cmd: 'user.find.byLogin' }, { login }),\n    );\n    if (!user) {\n      throw new RpcException({\n        code: 400,\n        message: '账号或密码错误',\n      });\n    }\n    if (user.status === 0) {\n      throw new RpcException({\n        code: 400,\n        message: '账号未激活或已经被禁用',\n      });\n    }\n    const isValid = await compare(password, user.password);\n    if (!isValid) {\n      throw new RpcException({\n        code: 400,\n        message: '账号或密码错误',\n      });\n    }\n\n    return {\n      access_token: this.jwt.sign({\n        userId: user.id,\n        username: user.username,\n        roles: user.roles.map((role) => role.name),\n      }),\n    };\n  }\n\n  async notifyAccount(email: string, link: string) {\n    return await this.mail.sendMail(\n      email,\n      '邮箱验证 - 病害智能诊断系统',\n      `请点击链接激活账号：${link}`,\n      `\n        \n            \n                \n                    \n                        \n                            病害智能诊断系统\n                            感谢您使用我们的系统！\n                        \n                    \n                    \n                        \n                            为了确保您的账户安全，请点击下面的链接完成邮箱验证：\n                            \n                                点击验证邮箱\n                            \n                        \n                    \n                    \n                        \n                            此链接将在 30 分钟后过期，请尽快验证。\n                            如果您没有请求此验证，请忽略此邮件。\n                        \n                    \n                \n            \n        \n    `,\n    );\n  }\n\n  async verifyAccount(token: string) {\n    try {\n      const { userId } = this.jwt.decode(token);\n      return await firstValueFrom(\n        this.userClient.send({ cmd: 'user.activate' }, { id: userId }),\n      );\n    } catch (error) {\n      throw new RpcException({\n        code: 400,\n        message: '验证失败',\n      });\n    }\n  }\n\n  async buttonsGet() {\n    return { useHooks: { add: true, delete: true } };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/BaseEntity.html': {
      url: 'classes/BaseEntity.html',
      title: 'class - BaseEntity',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/base.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/base.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/base.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \'typeorm\';\n\nexport abstract class BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CompleteChunkDto.html': {
      url: 'classes/CompleteChunkDto.html',
      title: 'class - CompleteChunkDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompleteChunkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/complete-chunk.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                taskId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty({description: '任务ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/complete-chunk.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class CompleteChunkDto {\n  @IsNotEmpty()\n  @ApiProperty({\n    description: '任务ID',\n    example: 1,\n  })\n  taskId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ConfigDto.html': {
      url: 'classes/ConfigDto.html',
      title: 'class - ConfigDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                configKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                configValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        configKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '配置项键名必须是字符串'})@IsNotEmpty({message: '配置项键名不能为空'})@Type(undefined)@ApiProperty({description: '配置项键名', example: 'model_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        configValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '配置项值必须是字符串'})@IsNotEmpty({message: '配置项值不能为空'})@Type(undefined)@ApiProperty({description: '配置项值', example: '/path/to/model'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsString } from 'class-validator';\n\n// 定义单个配置项的数据结构\nclass ConfigDto {\n  @IsString({ message: '配置项键名必须是字符串' })\n  @IsNotEmpty({ message: '配置项键名不能为空' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项键名',\n    example: 'model_path',\n  })\n  configKey: string;\n\n  @IsString({ message: '配置项值必须是字符串' })\n  @IsNotEmpty({ message: '配置项值不能为空' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项值',\n    example: '/path/to/model',\n  })\n  configValue: string;\n}\n\n// 创建 AI 配置的 DTO\nexport class CreateAiConfigsDto {\n  @ApiProperty({\n    description: '配置项列表',\n    type: [ConfigDto],\n    example: [\n      {\n        configKey: 'model_path',\n        configValue: '/path/to/model',\n      },\n    ],\n  })\n  @IsNotEmpty({ message: '配置项列表不能为空' })\n  @IsArray({ message: '配置项列表必须是数组' })\n  @Type(() => ConfigDto)\n  configs: ConfigDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateAiConfigDto.html': {
      url: 'classes/CreateAiConfigDto.html',
      title: 'class - CreateAiConfigDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/dto/create-ai-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                configKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                configValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        configKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '配置项键名必须是字符串'})@IsNotEmpty({message: '配置项键名不能为空'})@Type(undefined)@ApiProperty({description: '配置项键名', example: 'model_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-config.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        configValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '配置项值必须是字符串'})@IsNotEmpty({message: '配置项值不能为空'})@Type(undefined)@ApiProperty({description: '配置项值', example: '/path/to/model'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateAiConfigDto {\n  @IsString({ message: '配置项键名必须是字符串' })\n  @IsNotEmpty({ message: '配置项键名不能为空' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项键名',\n    example: 'model_path',\n  })\n  configKey: string;\n\n  @IsString({ message: '配置项值必须是字符串' })\n  @IsNotEmpty({ message: '配置项值不能为空' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项值',\n    example: '/path/to/model',\n  })\n  configValue: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateAiConfigsDto.html': {
      url: 'classes/CreateAiConfigsDto.html',
      title: 'class - CreateAiConfigsDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiConfigsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                configs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: '配置项列表', type: undefined, example: undefined})@IsNotEmpty({message: '配置项列表不能为空'})@IsArray({message: '配置项列表必须是数组'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsArray, IsNotEmpty, IsString } from 'class-validator';\n\n// 定义单个配置项的数据结构\nclass ConfigDto {\n  @IsString({ message: '配置项键名必须是字符串' })\n  @IsNotEmpty({ message: '配置项键名不能为空' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项键名',\n    example: 'model_path',\n  })\n  configKey: string;\n\n  @IsString({ message: '配置项值必须是字符串' })\n  @IsNotEmpty({ message: '配置项值不能为空' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项值',\n    example: '/path/to/model',\n  })\n  configValue: string;\n}\n\n// 创建 AI 配置的 DTO\nexport class CreateAiConfigsDto {\n  @ApiProperty({\n    description: '配置项列表',\n    type: [ConfigDto],\n    example: [\n      {\n        configKey: 'model_path',\n        configValue: '/path/to/model',\n      },\n    ],\n  })\n  @IsNotEmpty({ message: '配置项列表不能为空' })\n  @IsArray({ message: '配置项列表必须是数组' })\n  @Type(() => ConfigDto)\n  configs: ConfigDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateAiModelDto.html': {
      url: 'classes/CreateAiModelDto.html',
      title: 'class - CreateAiModelDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiModelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-model/dto/create-ai-model.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAiModelDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreateAiServiceDto.html': {
      url: 'classes/CreateAiServiceDto.html',
      title: 'class - CreateAiServiceDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                endpointUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                serviceName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务描述', example: '用于病害智能诊断的服务'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务的访问URL', example: 'http://localhost:5001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        serviceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: '服务名称', example: '病害智能诊断服务'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        serviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务类型', example: 'diagnosis'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"active\" | \"inactive\" | \"under_maintenance\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['active', 'inactive', 'under_maintenance'])@IsOptional()@ApiProperty({description: '服务状态', example: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateAiServiceDto {\n  @IsString()\n  @ApiProperty({\n    description: '服务名称',\n    example: '病害智能诊断服务',\n  })\n  @IsNotEmpty()\n  serviceName: string; // 服务名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务类型',\n    example: 'diagnosis',\n  })\n  serviceType?: string; // 服务类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务描述',\n    example: '用于病害智能诊断的服务',\n  })\n  description?: string; // 服务描述\n\n  @IsEnum(['active', 'inactive', 'under_maintenance'])\n  @IsOptional()\n  @ApiProperty({\n    description: '服务状态',\n    example: 'active',\n  })\n  status?: 'active' | 'inactive' | 'under_maintenance'; // 服务状态\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务的访问URL',\n    example: 'http://localhost:5001',\n  })\n  endpointUrl?: string; // 服务的访问URL\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateDatasetDto.html': {
      url: 'classes/CreateDatasetDto.html',
      title: 'class - CreateDatasetDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/dataset/create-dataset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                fileIds\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '数据集description必须是字符串！'})@ApiProperty({description: '数据集描述', example: '这是一个数据集'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/dataset/create-dataset.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: 'fileIds 必须是数组'})@Transform( => )@IsInt({each: true, message: 'fileIds 必须是数字'})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/dataset/create-dataset.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '数据集name必须是字符串！'})@IsNotEmpty({message: '数据集name不能为空！'})@ApiProperty({description: '数据集名称', example: '数据集1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/dataset/create-dataset.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport {\n  IsString,\n  IsOptional,\n  IsArray,\n  IsNotEmpty,\n  IsInt,\n} from 'class-validator';\n\nexport class CreateDatasetDto {\n  @IsString({ message: '数据集name必须是字符串！' })\n  @IsNotEmpty({ message: '数据集name不能为空！' })\n  @ApiProperty({\n    description: '数据集名称',\n    example: '数据集1',\n  })\n  name: string;\n\n  @IsOptional()\n  @IsString({ message: '数据集description必须是字符串！' })\n  @ApiProperty({\n    description: '数据集描述',\n    example: '这是一个数据集',\n  })\n  description?: string;\n\n  @IsOptional()\n  @IsArray({\n    message: 'fileIds 必须是数组',\n  })\n  @Transform(({ value }) => {\n    if (typeof value === 'string' && value.includes(',')) {\n      return value.split(',').map((item) => parseInt(item, 10));\n    } else {\n      return value.map((item) => parseInt(item, 10));\n    }\n  })\n  @IsInt({ each: true, message: 'fileIds 必须是数字' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreatePlantDiseaseKnowledgeDto.html': {
      url: 'classes/CreatePlantDiseaseKnowledgeDto.html',
      title: 'class - CreatePlantDiseaseKnowledgeDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlantDiseaseKnowledgeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPart\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPlant\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                biologicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cause\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                chemicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                culturalPractices\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCycle\n                            \n                            \n                                    \n                                    \n                                    \n                                diseaseName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                documentUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstReported\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                geographicalArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                historicalCases\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preventiveMeasures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                researchSources\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                resistantVarieties\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                scientificName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                severity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                spreadMethod\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                symptoms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                synonyms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                videoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物部位', example: '叶片'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPlant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物种类', example: '草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        biologicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '生物防治方法', example: '生物防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害分类', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害病因', example: '病害病因'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        chemicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '化学防治方法', example: '化学防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        culturalPractices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '文化控制措施', example: '文化控制措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害唯一编码', example: '01110'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害生命周期', example: '病害生命周期'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        diseaseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: '病害名称', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害类型', example: '真菌性病害'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        documentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关文档的 URL 地址', example: 'https://example.com/document.pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstReported\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()@ApiProperty({description: '首次报告时间', example: '2021-06-01'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        geographicalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害地理分布', example: '病害地理分布'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        historicalCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '历史病例', example: '历史病例'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '病害图片的 URL 地址', example: 'https://example.com/image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preventiveMeasures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '防治措施', example: '防治措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        researchSources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '研究来源', example: '研究来源'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:220\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        resistantVarieties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '抗病品种', example: '抗病品种'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害学名', example: 'Colletotrichum gloeosporioides'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害严重程度', example: '轻度'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        spreadMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害传播方式', example: '病害传播方式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        symptoms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害症状描述', example: '病害症状描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        synonyms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害别名', example: '草莓炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害标签', example: '炭疽病, 草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        videoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关视频的 URL 地址', example: 'https://example.com/video.mp4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts:180\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\nexport class CreatePlantDiseaseKnowledgeDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: '病害名称',\n    example: '炭疽病',\n  })\n  diseaseName: string; // 病害名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害唯一编码',\n    example: '01110',\n  })\n  diseaseCode?: string; // 病害唯一编码\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害学名',\n    example: 'Colletotrichum gloeosporioides',\n  })\n  scientificName?: string; // 病害的学名（如果有）\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害别名',\n    example: '草莓炭疽病',\n  })\n  synonyms?: string; // 病害的同义词\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害症状描述',\n    example: '病害症状描述',\n  })\n  symptoms?: string; // 病害症状描述\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害病因',\n    example: '病害病因',\n  })\n  cause?: string; // 病因\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害类型',\n    example: '真菌性病害',\n  })\n  diseaseType?: string; // 病害类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物种类',\n    example: '草莓',\n  })\n  affectedPlant?: string; // 受影响的植物种类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物部位',\n    example: '叶片',\n  })\n  affectedPart?: string; // 受影响的植物部位\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害生命周期',\n    example: '病害生命周期',\n  })\n  diseaseCycle?: string; // 病害生命周期\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害传播方式',\n    example: '病害传播方式',\n  })\n  spreadMethod?: string; // 病害传播方式\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害地理分布',\n    example: '病害地理分布',\n  })\n  geographicalArea?: string; // 病害地理分布\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({\n    description: '首次报告时间',\n    example: '2021-06-01',\n  })\n  firstReported?: string; // 首次报告时间\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '防治措施',\n    example: '防治措施',\n  })\n  preventiveMeasures?: string; // 防治措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '化学防治方法',\n    example: '化学防治方法',\n  })\n  chemicalControl?: string; // 化学防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '生物防治方法',\n    example: '生物防治方法',\n  })\n  biologicalControl?: string; // 生物防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '文化控制措施',\n    example: '文化控制措施',\n  })\n  culturalPractices?: string; // 文化控制措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '抗病品种',\n    example: '抗病品种',\n  })\n  resistantVarieties?: string; // 抗病品种\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '病害图片的 URL 地址',\n    example: 'https://example.com/image.jpg',\n  })\n  imageUrl?: string; // 病害图片的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关文档的 URL 地址',\n    example: 'https://example.com/document.pdf',\n  })\n  documentUrl?: string; // 相关文档的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关视频的 URL 地址',\n    example: 'https://example.com/video.mp4',\n  })\n  videoUrl?: string; // 相关视频的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害分类',\n    example: '炭疽病',\n  })\n  category?: string; // 病害分类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害严重程度',\n    example: '轻度',\n  })\n  severity?: string; // 病害严重程度\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害标签',\n    example: '炭疽病, 草莓',\n  })\n  tags?: string; // 病害标签\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '历史病例',\n    example: '历史病例',\n  })\n  historicalCases?: string; // 历史病例\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '研究来源',\n    example: '研究来源',\n  })\n  researchSources?: string; // 研究来源\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreatePlantDto.html': {
      url: 'classes/CreatePlantDto.html',
      title: 'class - CreatePlantDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/plant/dto/create-plant.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePlantDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreateRoleDto.html': {
      url: 'classes/CreateRoleDto.html',
      title: 'class - CreateRoleDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                alias\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色别名', example: '管理员'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/role/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色描述', example: '管理员角色'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/role/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: '角色名称', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/role/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: '角色名称',\n    example: 'admin',\n  })\n  name: string; // 角色名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色别名',\n    example: '管理员',\n  })\n  alias?: string; // 角色别名\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色描述',\n    example: '管理员角色',\n  })\n  description?: string; // 角色描述\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateRoleDto-1.html': {
      url: 'classes/CreateRoleDto-1.html',
      title: 'class - CreateRoleDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                alias\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色别名', example: '管理员'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/role/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色描述', example: '管理员角色'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/role/dto/create-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: '角色名称', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/role/dto/create-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: '角色名称',\n    example: 'admin',\n  })\n  name: string; // 角色名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色别名',\n    example: '管理员',\n  })\n  alias?: string; // 角色别名\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色描述',\n    example: '管理员角色',\n  })\n  description?: string; // 角色描述\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateTaskDto.html': {
      url: 'classes/CreateTaskDto.html',
      title: 'class - CreateTaskDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                    \n                                    \n                                fileName\n                            \n                            \n                                    \n                                    \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                    \n                                    \n                                fileType\n                            \n                            \n                                    \n                                    \n                                    \n                                totalChunks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件MD5不能为空！'})@IsString({message: '文件MD5必须为字符串类型！'})@ApiProperty({description: '文件MD5', example: 'd41d8cd98f00b204e9800998ecf8427e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/create-task.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件名不能为空！'})@IsString({message: '文件名必须为字符串类型！'})@ApiProperty({description: '文件名', example: 'test.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/create-task.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件大小不能为空！'})@IsNumber({}, {message: '文件大小必须为数字类型！'})@ApiProperty({description: '文件大小', example: 1024})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/create-task.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件类型不能为空！'})@IsString({message: '文件类型必须为字符串类型！'})@ApiProperty({description: '文件类型', example: 'image/jpeg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/create-task.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        totalChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '总块数不能为空！'})@IsNumber({}, {message: '总块数必须为数字类型！'})@ApiProperty({description: '总块数', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/create-task.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateTaskDto {\n  @IsNotEmpty({ message: '文件名不能为空！' })\n  @IsString({ message: '文件名必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件名',\n    example: 'test.jpg',\n  })\n  fileName: string;\n\n  @IsNotEmpty({ message: '文件大小不能为空！' })\n  @IsNumber({}, { message: '文件大小必须为数字类型！' })\n  @ApiProperty({\n    description: '文件大小',\n    example: 1024,\n  })\n  fileSize: number;\n\n  @IsNotEmpty({ message: '文件类型不能为空！' })\n  @IsString({ message: '文件类型必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件类型',\n    example: 'image/jpeg',\n  })\n  fileType: string;\n\n  @IsNotEmpty({ message: '文件MD5不能为空！' })\n  @IsString({ message: '文件MD5必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件MD5',\n    example: 'd41d8cd98f00b204e9800998ecf8427e',\n  })\n  fileMd5: string;\n\n  @IsNotEmpty({ message: '总块数不能为空！' })\n  @IsNumber({}, { message: '总块数必须为数字类型！' })\n  @ApiProperty({\n    description: '总块数',\n    example: 1,\n  })\n  totalChunks: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateTempLinkDto.html': {
      url: 'classes/CreateTempLinkDto.html',
      title: 'class - CreateTempLinkDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTempLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/create-link.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                expiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '链接过期时间必须为字符串类型！'})@ApiProperty({description: '链接过期时间', example: '1h'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/create-link.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class CreateTempLinkDto {\n  @IsOptional()\n  @IsString({ message: '链接过期时间必须为字符串类型！' })\n  @ApiProperty({\n    description: '链接过期时间',\n    example: '1h',\n  })\n  expiresIn?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto.html': {
      url: 'classes/CreateUserDto.html',
      title: 'class - CreateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail({}, {message: '邮箱格式不正确！'})@ApiProperty({description: '邮箱', example: '5165133@asdf.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度必须为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject({message: 'Profile 必须为一个对象！'})@IsOptional()@ApiProperty({description: 'Profile', type: Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色必须是数组！'})@ArrayMinSize(1, {message: '请至少选择一个角色！'})@ApiProperty({description: '角色', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus, {message: '状态值只能是 0 或 1'})@ApiProperty({description: '状态', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '用户名必须为字符串类型！'})@Length(5, 20, {message: '用户名长度必须为5-20位！'})@ApiProperty({description: '用户名', example: 'sdfgsafgasgsad'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from '@app/database/entities';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserStatus } from '@shared/enum/user.enum';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsObject,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsOptional()\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: '5165133@asdf.com',\n  })\n  email?: string;\n\n  @IsOptional()\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @Length(5, 20, { message: '用户名长度必须为5-20位！' })\n  @ApiProperty({\n    description: '用户名',\n    example: 'sdfgsafgasgsad',\n  })\n  username?: string;\n\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度必须为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus, { message: '状态值只能是 0 或 1' })\n  @ApiProperty({\n    description: '状态',\n    example: 1,\n  })\n  status?: UserStatus; // 使用枚举来限制状态值\n\n  @IsOptional()\n  @IsArray({ message: '角色必须是数组！' })\n  @ArrayMinSize(1, { message: '请至少选择一个角色！' })\n  @ApiProperty({\n    description: '角色',\n    example: [1, 2],\n  })\n  roles?: number[];\n\n  @IsOptional()\n  @IsObject({ message: 'Profile 必须为一个对象！' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Profile',\n    type: Profile,\n  })\n  profile?: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto-1.html': {
      url: 'classes/CreateUserDto-1.html',
      title: 'class - CreateUserDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail({}, {message: '邮箱格式不正确！'})@ApiProperty({description: '邮箱', example: '5165133@asdf.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度必须为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject({message: 'Profile 必须为一个对象！'})@IsOptional()@ApiProperty({description: 'Profile', type: Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/create-user.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色必须是数组！'})@ArrayMinSize(1, {message: '请至少选择一个角色！'})@ApiProperty({description: '角色', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus, {message: '状态值只能是 0 或 1'})@ApiProperty({description: '状态', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '用户名必须为字符串类型！'})@Length(5, 20, {message: '用户名长度必须为5-20位！'})@ApiProperty({description: '用户名', example: 'sdfgsafgasgsad'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from '@app/database/entities';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserStatus } from '@shared/enum/user.enum';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsObject,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsOptional()\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: '5165133@asdf.com',\n  })\n  email?: string;\n\n  @IsOptional()\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @Length(5, 20, { message: '用户名长度必须为5-20位！' })\n  @ApiProperty({\n    description: '用户名',\n    example: 'sdfgsafgasgsad',\n  })\n  username?: string;\n\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度必须为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus, { message: '状态值只能是 0 或 1' })\n  @ApiProperty({\n    description: '状态',\n    example: 1,\n  })\n  status?: UserStatus; // 使用枚举来限制状态值\n\n  @IsOptional()\n  @IsArray({ message: '角色必须是数组！' })\n  @ArrayMinSize(1, { message: '请至少选择一个角色！' })\n  @ApiProperty({\n    description: '角色',\n    example: [1, 2],\n  })\n  roles?: number[];\n\n  @IsObject({ message: 'Profile 必须为一个对象！' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Profile',\n    type: Profile,\n  })\n  profile?: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CustomRpcExceptionFilter.html': {
      url: 'classes/CustomRpcExceptionFilter.html',
      title: 'class - CustomRpcExceptionFilter',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRpcExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/filters/rpc-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/common/src/filters/rpc-exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  HttpStatus,\n  RpcExceptionFilter,\n} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\n\n@Catch()\nexport class CustomRpcExceptionFilter implements RpcExceptionFilter {\n  catch(exception: any, host: ArgumentsHost): Observable {\n    let errorResponse: { code: number; message: string; data: any } = {\n      code: HttpStatus.INTERNAL_SERVER_ERROR,\n      message: 'Internal server error',\n      data: null,\n    };\n\n    // 如果异常是 RpcException，调用 getError() 获取信息\n    if (exception instanceof RpcException) {\n      const rpcError: any = exception.getError();\n      if (typeof rpcError === 'string') {\n        errorResponse = {\n          code: HttpStatus.INTERNAL_SERVER_ERROR,\n          message: rpcError,\n          data: null,\n        };\n      } else if (typeof rpcError === 'object' && rpcError !== null) {\n        errorResponse = {\n          code: rpcError?.code || HttpStatus.INTERNAL_SERVER_ERROR,\n          message: rpcError?.message || 'Internal server error',\n          data: rpcError?.data || null,\n        };\n      }\n    }\n    // 如果异常是 HttpException 或其他 Error 类型\n    else if (exception instanceof Error) {\n      errorResponse = {\n        code: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: exception.message,\n        data: null,\n      };\n    }\n    // 如果异常为字符串或其他类型\n    else if (typeof exception === 'string') {\n      errorResponse = {\n        code: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: exception,\n        data: null,\n      };\n    } else {\n      errorResponse = {\n        code: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: 'Unknown error',\n        data: exception,\n      };\n    }\n\n    return throwError(() => errorResponse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/DatabaseModule.html': {
      url: 'modules/DatabaseModule.html',
      title: 'module - DatabaseModule',
      body: "\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/database/src/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forFeature\n                        \n                    \n                \n            \n            \n                \n                        \n                    forFeature(entities: EntityClassOrSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/database/src/database.module.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(entities: EntityClassOrSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/database/src/database.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { ConfigEnum } from '@shared/enum/config.enum';\n\n@Global()\n@Module({})\nexport class DatabaseModule {\n  static register(entities: EntityClassOrSchema[] = []): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          imports: [\n            ConfigModule.forRoot({\n              isGlobal: true,\n              envFilePath: [\n                '.env',\n                `.env.${process.env.NODE_ENV || 'development'}.local`,\n              ],\n            }),\n          ],\n          inject: [ConfigService],\n          useFactory: (configService: ConfigService): TypeOrmModuleOptions =>\n            ({\n              type: configService.get(ConfigEnum.DB_TYPE),\n              host: configService.get(ConfigEnum.DB_HOST),\n              port: configService.get(ConfigEnum.DB_PORT),\n              username: configService.get(ConfigEnum.DB_USERNAME),\n              password: configService.get(ConfigEnum.DB_PASSWORD),\n              database: configService.get(ConfigEnum.DB_DATABASE),\n              autoLoadEntities: true, // 自动加载实体\n              synchronize: configService.get(ConfigEnum.DB_SYNC),\n              logging: process.env.NODE_ENV === 'development',\n              entities,\n            }) as TypeOrmModuleOptions,\n        }),\n      ],\n      exports: [TypeOrmModule],\n    };\n  }\n\n  static forFeature(entities: EntityClassOrSchema[] = []): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [TypeOrmModule.forFeature(entities)],\n      exports: [TypeOrmModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DatabaseService.html': {
      url: 'injectables/DatabaseService.html',
      title: 'injectable - DatabaseService',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/database.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \'@nestjs/common\';\n\n@Injectable()\nexport class DatabaseService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/Dataset.html': {
      url: 'entities/Dataset.html',
      title: 'entity - Dataset',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  Dataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/dataset.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 25, default: 'private'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/dataset.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/dataset.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/dataset.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         File[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, file => file.datasets, {nullable: true})@JoinTable({name: 'datasets_files', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/dataset.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/dataset.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/dataset.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, JoinTable, ManyToMany } from 'typeorm';\nimport { BaseEntity } from './base.entity';\nimport { File } from './file.entity';\n\n@Entity('dataset')\n@Index('dataset_user_id_fk', ['createdBy'])\n@Index('dataset_user_id_fk_2', ['updatedBy'])\nexport class Dataset extends BaseEntity {\n  @Column({ type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ type: 'text', nullable: true })\n  description?: string;\n\n  @Column({ type: 'varchar', length: 25, default: 'private' })\n  access: string;\n\n  @Column({ type: 'int' })\n  createdBy: number;\n\n  @Column({ type: 'int' })\n  updatedBy: number;\n\n  @ManyToMany(() => File, (file) => file.datasets, { nullable: true })\n  @JoinTable({\n    name: 'datasets_files', // 中间表的名字\n    joinColumn: { name: 'datasetId', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'fileId', referencedColumnName: 'id' },\n  })\n  files: File[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DatasetController.html': {
      url: 'controllers/DatasetController.html',
      title: 'controller - DatasetController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DatasetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/dataset/dataset.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dataset\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createDataset\n                            \n                            \n                                    \n                                    Async\n                                datasetsListGet\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteDataset\n                            \n                            \n                                    \n                                    Async\n                                getDatasetDetail\n                            \n                            \n                                    \n                                    Async\n                                updateDataset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(req: Request, dto: CreateDatasetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/dataset/dataset.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        datasetsListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    datasetsListGet(req: Request, page: number, pageSize: number, name?: string, createdStart?: string, createdEnd?: string, updatedStart?: string, updatedEnd?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/dataset/dataset.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                createdStart\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                createdEnd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updatedStart\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updatedEnd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDataset(datasetId: number, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':datasetId')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/dataset/dataset.controller.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDatasetDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatasetDetail(datasetId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':datasetId')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/dataset/dataset.controller.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDataset(datasetId: number, req: Request, dto: UpdateDatasetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':datasetId')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/dataset/dataset.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@common/decorator/roles.decorator';\nimport { CreateDatasetDto } from '@common/dto/dataset/create-dataset.dto';\nimport { UpdateDatasetDto } from '@common/dto/dataset/update-dataset.dto';\nimport { TypeormFilter } from '@common/filters/typeorm.filter';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport { ParseStringDatePipe } from '@common/pipe/string-date.pipe';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  Req,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Role } from '@shared/enum/role.enum';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport { FILE_SERVICE_NAME } from 'config/microservice.config';\nimport { Request } from 'express';\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\n\n@ApiTags('数据集管理模块')\n@Controller('dataset')\n@Roles(Role.Admin, Role.Expert)\n@UseGuards(AuthGuard, RolesGuard)\n@UseFilters(TypeormFilter)\nexport class DatasetController {\n  constructor(\n    @Inject(FILE_SERVICE_NAME) private readonly fileClient: ClientProxy,\n  ) {}\n\n  // 获取数据集列表\n  @Get('list')\n  async datasetsListGet(\n    @Req() req: Request,\n    @Query('page', ParseIntPipe) page: number = 1,\n    @Query('pageSize', ParseIntPipe) pageSize: number = 10,\n    @Query('name') name?: string,\n    @Query('createdStart', ParseStringDatePipe) createdStart?: string,\n    @Query('createdEnd', ParseStringDatePipe) createdEnd?: string,\n    @Query('updatedStart', ParseStringDatePipe) updatedStart?: string,\n    @Query('updatedEnd', ParseStringDatePipe) updatedEnd?: string,\n  ) {\n    const response = await lastValueFrom(\n      this.fileClient.send(\n        { cmd: 'dataset.get.list' },\n        {\n          page,\n          pageSize,\n          name,\n          createdStart,\n          createdEnd,\n          updatedStart,\n          updatedEnd,\n          userId: req.user.userId,\n        },\n      ),\n    );\n    return formatResponse(200, response?.result, '获取数据集列表成功');\n  }\n\n  // 创建数据集\n  @Post('create')\n  @HttpCode(HttpStatus.CREATED)\n  async createDataset(@Req() req: Request, @Body() dto: CreateDatasetDto) {\n    const response = await lastValueFrom(\n      this.fileClient.send(\n        {\n          cmd: 'dataset.create',\n        },\n        {\n          userId: req.user.userId,\n          dto,\n        },\n      ),\n    );\n    return formatResponse(201, response?.result, '创建数据集成功');\n  }\n\n  // 获取数据集详情\n  @Get(':datasetId')\n  async getDatasetDetail(\n    @Param(\n      'datasetId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    datasetId: number,\n  ) {\n    const response = await lastValueFrom(\n      this.fileClient.send(\n        {\n          cmd: 'dataset.detail',\n        },\n        {\n          datasetId,\n        },\n      ),\n    );\n    return formatResponse(200, response?.result, '获取数据集详情成功');\n  }\n\n  // 更新数据集\n  @Put(':datasetId')\n  async updateDataset(\n    @Param(\n      'datasetId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    datasetId: number,\n    @Req() req: Request,\n    @Body() dto: UpdateDatasetDto,\n  ) {\n    const response = await lastValueFrom(\n      this.fileClient.send(\n        {\n          cmd: 'dataset.update',\n        },\n        {\n          datasetId,\n          userId: req.user.userId,\n          dto,\n        },\n      ),\n    );\n    return formatResponse(200, response?.result, '更新数据集成功');\n  }\n\n  // 删除数据集\n  @Delete(':datasetId')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async deleteDataset(\n    @Param(\n      'datasetId',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    datasetId: number,\n    @Req() req: Request,\n  ) {\n    await firstValueFrom(\n      this.fileClient.send(\n        {\n          cmd: 'dataset.delete',\n        },\n        {\n          datasetId,\n          userId: req.user.userId,\n        },\n      ),\n    );\n    return formatResponse(204, null, '删除数据集成功');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DatasetController-1.html': {
      url: 'controllers/DatasetController-1.html',
      title: 'controller - DatasetController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DatasetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-service/src/modules/dataset/dataset.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createDataset\n                            \n                            \n                                    \n                                    Async\n                                datasetsListGet\n                            \n                            \n                                    \n                                    Async\n                                deleteDataset\n                            \n                            \n                                    \n                                    Async\n                                getDatasetDetail\n                            \n                            \n                                    \n                                    Async\n                                updateDataset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'dataset.create'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        datasetsListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    datasetsListGet(payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'dataset.get.list'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDataset(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'dataset.delete'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDatasetDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatasetDetail(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'dataset.detail'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDataset(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'dataset.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateDatasetDto } from '@common/dto/dataset/create-dataset.dto';\nimport { UpdateDatasetDto } from '@common/dto/dataset/update-dataset.dto';\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { DatasetService } from './dataset.service';\n\n@Controller()\nexport class DatasetController {\n  constructor(private readonly manageService: DatasetService) {}\n\n  // 获取数据集列表\n  @MessagePattern({ cmd: 'dataset.get.list' })\n  async datasetsListGet(@Payload() payload: any) {\n    const {\n      page = 1,\n      pageSize = 10,\n      name,\n      createdStart,\n      createdEnd,\n      updatedStart,\n      updatedEnd,\n      userId,\n    } = payload;\n    return this.manageService.datasetsListGet(page, pageSize, userId, {\n      name,\n      createdStart,\n      createdEnd,\n      updatedStart,\n      updatedEnd,\n    });\n  }\n\n  // 创建数据集\n  @MessagePattern({ cmd: 'dataset.create' })\n  async createDataset(\n    @Payload() payload: { userId: number; dto: CreateDatasetDto },\n  ) {\n    return this.manageService.createDataset(payload.userId, payload.dto);\n  }\n\n  // 获取数据集详情\n  @MessagePattern({ cmd: 'dataset.detail' })\n  async getDatasetDetail(@Payload() payload: { datasetId: number }) {\n    return this.manageService.getDatasetDetail(payload.datasetId);\n  }\n\n  // 更新数据集\n  @MessagePattern({ cmd: 'dataset.update' })\n  async updateDataset(\n    @Payload()\n    payload: {\n      datasetId: number;\n      userId: number;\n      dto: UpdateDatasetDto;\n    },\n  ) {\n    return this.manageService.updateDataset(\n      payload.datasetId,\n      payload.userId,\n      payload.dto,\n    );\n  }\n\n  // 删除数据集\n  @MessagePattern({ cmd: 'dataset.delete' })\n  async deleteDataset(\n    @Payload() payload: { datasetId: number; userId: number },\n  ) {\n    return this.manageService.deleteDataset(payload.datasetId, payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/DatasetModule.html': {
      url: 'modules/DatasetModule.html',
      title: 'module - DatasetModule',
      body: "\n                   \n\n\n\n\n    Modules\n    DatasetModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/dataset/dataset.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            DatasetController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport {\n  FILE_SERVICE_NAME,\n  FILE_SERVICE_TCP_PORT,\n} from 'config/microservice.config';\nimport { DatasetController } from './dataset.controller';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: FILE_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: {\n          host: 'localhost',\n          port: FILE_SERVICE_TCP_PORT,\n        },\n      },\n    ]),\n  ],\n  controllers: [DatasetController],\n})\nexport class DatasetModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DatasetService.html': {
      url: 'injectables/DatasetService.html',
      title: 'injectable - DatasetService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-service/src/modules/dataset/dataset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDataset\n                            \n                            \n                                    Async\n                                datasetsListGet\n                            \n                            \n                                    Async\n                                deleteDataset\n                            \n                            \n                                    Async\n                                getDatasetDetail\n                            \n                            \n                                    Async\n                                updateDataset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datasetRepository: Repository, fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/file-service/src/modules/dataset/dataset.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataset(userId: number, dto: CreateDatasetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        datasetsListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    datasetsListGet(page: number, pageSize: number, userId: number, filters?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDataset(datasetId: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDatasetDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDatasetDetail(datasetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDataset\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDataset(datasetId: number, userId: number, dto: UpdateDatasetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/dataset/dataset.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateDatasetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Dataset, File } from '@app/database/entities';\nimport { Injectable } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport { In, Repository } from 'typeorm';\nimport { CreateDatasetDto } from '../../../../../packages/common/src/dto/dataset/create-dataset.dto';\nimport { UpdateDatasetDto } from '../../../../../packages/common/src/dto/dataset/update-dataset.dto';\n\n@Injectable()\nexport class DatasetService {\n  constructor(\n    @InjectRepository(Dataset)\n    private datasetRepository: Repository,\n\n    @InjectRepository(File)\n    private fileRepository: Repository,\n  ) {}\n\n  async datasetsListGet(\n    page: number,\n    pageSize: number,\n    userId: number,\n    filters?: {\n      name?: string;\n      createdStart?: string;\n      createdEnd?: string;\n      updatedStart?: string;\n      updatedEnd?: string;\n    },\n  ) {\n    const queryBuilder = this.datasetRepository.createQueryBuilder('dataset');\n\n    queryBuilder.where('dataset.createdBy = :userId', { userId });\n\n    // 添加过滤条件\n    if (filters?.name) {\n      queryBuilder.andWhere('dataset.name LIKE :name', {\n        name: `%${filters.name}%`,\n      });\n    }\n    if (filters?.createdStart) {\n      queryBuilder.andWhere('dataset.createdAt >= :createdStart', {\n        createdStart: filters.createdStart,\n      });\n    }\n    if (filters?.createdEnd) {\n      queryBuilder.andWhere('dataset.createdAt = :updatedStart', {\n        updatedStart: filters.updatedStart,\n      });\n    }\n    if (filters?.updatedEnd) {\n      queryBuilder.andWhere('dataset.updatedAt  {\n      const fileCount = dataset.files?.length; // 文件的数量\n      // 计算 datasetSize\n      const datasetSize = dataset.files?.reduce((totalSize, file) => {\n        const size = file.fileSize ? Number(file.fileSize) : 0;\n        return totalSize + size;\n      }, 0);\n\n      return {\n        ...dataset,\n        fileCount,\n        datasetSize,\n        files: undefined, // 不返回 files 字段\n      };\n    });\n\n    return {\n      success: true,\n      result: {\n        list,\n        total,\n        page,\n        pageSize,\n      },\n    };\n  }\n\n  async createDataset(userId: number, dto: CreateDatasetDto) {\n    const { fileIds, ...datasetData } = dto;\n    const dataset = this.datasetRepository.create({\n      ...datasetData,\n      createdBy: userId,\n      updatedBy: userId,\n    });\n    if (fileIds && fileIds?.length > 0) {\n      dataset.files = await this.fileRepository.find({\n        where: { id: In(fileIds) },\n      });\n    }\n    await this.datasetRepository.save(dataset);\n    return {\n      success: true,\n      result: dataset,\n    };\n  }\n\n  async getDatasetDetail(datasetId: number) {\n    const dataset = await this.datasetRepository.findOne({\n      where: { id: datasetId },\n      relations: ['files'],\n    });\n    if (!dataset) {\n      throw new RpcException('未发现该数据集');\n    }\n    const result = {\n      ...dataset,\n      fileIds: dataset.files?.map((file) => file.id),\n      files: undefined, // 不返回 files 字段\n    };\n    return {\n      success: true,\n      result,\n    };\n  }\n\n  async updateDataset(\n    datasetId: number,\n    userId: number,\n    dto: UpdateDatasetDto,\n  ) {\n    const dataset = await this.datasetRepository.findOne({\n      where: { id: datasetId },\n      relations: ['files'],\n    });\n    if (!dataset) {\n      return formatResponse(404, null, '未发现该数据集');\n    }\n    const { fileIds, ...datasetData } = dto;\n    dataset.name = datasetData.name || dataset.name;\n    dataset.description = datasetData.description || dataset.description;\n    dataset.updatedBy = userId;\n    if (fileIds && fileIds?.length > 0) {\n      dataset.files = await this.fileRepository.find({\n        where: { id: In(fileIds) },\n      });\n    }\n    await this.datasetRepository.save(dataset);\n    return {\n      success: true,\n      result: dataset,\n    };\n  }\n\n  async deleteDataset(datasetId: number, userId: number) {\n    const dataset = await this.datasetRepository.findOne({\n      where: { id: datasetId },\n      relations: ['files'],\n    });\n    if (!dataset) {\n      throw new RpcException('未发现该数据集');\n    }\n    if (dataset.createdBy !== userId) {\n      throw new RpcException('无权限删除该数据集');\n    }\n    await this.datasetRepository.remove(dataset);\n    return {\n      success: true,\n      result: null,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DiagnosisController.html': {
      url: 'controllers/DiagnosisController.html',
      title: 'controller - DiagnosisController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DiagnosisController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                diagnosis\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                diagnosisHistoryGet\n                            \n                            \n                                    \n                                    Async\n                                diagnosisHistoryListGet\n                            \n                            \n                                    \n                                    Async\n                                diagnosisSupportGet\n                            \n                            \n                                    \n                                    Async\n                                getDiagnosisStatus\n                            \n                            \n                                    \n                                    Async\n                                startDiagnosis\n                            \n                            \n                                    \n                                    \n                                    Async\n                                uploadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisHistoryGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryGet(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('history')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisHistoryListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryListGet(req: Request, page?: number, pageSize?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('history/list')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisSupportGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisSupportGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('support')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDiagnosisStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDiagnosisStatus(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/status')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        startDiagnosis\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDiagnosis(req: Request, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/start')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        uploadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadData(req: Request, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Query,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\n\nimport { MIME_TYPE } from '@shared/enum/mime.enum';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Request } from 'express';\nimport { existsSync, mkdirSync } from 'fs';\nimport { diskStorage } from 'multer';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FileSizeValidationPipe } from '../file/pipe/file-size.pipe';\nimport { FileTypeValidationPipe } from '../file/pipe/file-type.pipe';\nimport { FileOperationService } from '../file/services/file-operation.service';\nimport { DiagnosisService } from './diagnosis.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('病害诊断模块')\n@Controller('diagnosis')\n@UseGuards(AuthGuard)\nexport class DiagnosisController {\n  constructor(\n    private readonly diagnosisService: DiagnosisService,\n    private readonly fileOperationService: FileOperationService,\n  ) {}\n\n  // 上传待诊断数据接口\n  @Post('upload')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          let folder = 'uploads/other';\n          const mimeType = file.mimetype;\n          // 按 MIME 类型分文件夹存储\n          if (mimeType.startsWith('image')) {\n            folder = 'uploads/images';\n          } else if (mimeType.startsWith('video')) {\n            folder = 'uploads/videos';\n          } else if (mimeType.startsWith('application')) {\n            folder = 'uploads/documents';\n          } else if (mimeType.startsWith('audio')) {\n            folder = 'uploads/audio';\n          }\n          if (!existsSync(folder)) {\n            mkdirSync(folder, { recursive: true });\n          }\n          cb(null, folder);\n        },\n        filename: (req, file, cb) => {\n          const uniqueName = Date.now() + '-' + uuidv4();\n          file.originalname = Buffer.from(file.originalname, 'latin1').toString(\n            'utf-8',\n          );\n          cb(null, uniqueName);\n        },\n      }),\n    }),\n  )\n  async uploadData(\n    @Req() req: Request,\n    @UploadedFile(\n      new FileTypeValidationPipe([MIME_TYPE.PNG, MIME_TYPE.JPEG]),\n      new FileSizeValidationPipe('10MB'),\n    )\n    file: Express.Multer.File,\n  ) {\n    try {\n      return this.diagnosisService.uploadData(req.user.userId, file);\n    } catch (error) {\n      await this.fileOperationService.deleteFile(file.path);\n      throw error;\n    }\n  }\n\n  // TODO: 开始诊断数据接口\n  @Post(':id/start')\n  async startDiagnosis(\n    @Req() req: Request,\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return await this.diagnosisService.startDiagnosis(id, req.user.userId);\n  }\n\n  // 获取诊断服务状态接口\n  @Get(':id/status')\n  async getDiagnosisStatus(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return await this.diagnosisService.getDiagnosisStatus(id);\n  }\n\n  // 获取诊断历史记录接口\n  @Get('history')\n  async diagnosisHistoryGet(@Req() req: Request) {\n    return await this.diagnosisService.diagnosisHistoryGet(req.user.userId);\n  }\n\n  // 获取诊断支持接口\n  @Get('support')\n  async diagnosisSupportGet() {\n    return await this.diagnosisService.diagnosisSupportGet();\n  }\n\n  // 获取诊断历史记录接口\n  @Get('history/list')\n  async diagnosisHistoryListGet(\n    @Req() req: Request,\n    @Query('page', ParseIntPipe) page?: number,\n    @Query('pageSize', ParseIntPipe) pageSize?: number,\n  ) {\n    return await this.diagnosisService.diagnosisHistoryListGet(\n      page,\n      pageSize,\n      req.user.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DiagnosisController-1.html': {
      url: 'controllers/DiagnosisController-1.html',
      title: 'controller - DiagnosisController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DiagnosisController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                diagnosisHistoryGet\n                            \n                            \n                                    \n                                    Async\n                                diagnosisHistoryListGet\n                            \n                            \n                                    \n                                    Async\n                                diagnosisSupportGet\n                            \n                            \n                                    \n                                    Async\n                                getDiagnosisStatus\n                            \n                            \n                                    \n                                    Async\n                                startDiagnosis\n                            \n                            \n                                    \n                                    Async\n                                uploadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisHistoryGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryGet(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'diagnosis.history'})\n                \n            \n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisHistoryListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryListGet(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'diagnosis.history.list'})\n                \n            \n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        diagnosisSupportGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisSupportGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'diagnosis.support'})\n                \n            \n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDiagnosisStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDiagnosisStatus(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'diagnosis.status'})\n                \n            \n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        startDiagnosis\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDiagnosis(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'diagnosis.start'})\n                \n            \n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        uploadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadData(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'diagnosis.upload'})\n                \n            \n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { FileOperationService } from '@app/file-operation';\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { DiagnosisService } from './diagnosis.service';\n\n@Controller()\nexport class DiagnosisController {\n  constructor(\n    private readonly diagnosisService: DiagnosisService,\n    private readonly fileOperationService: FileOperationService,\n  ) {}\n\n  @MessagePattern({ cmd: 'diagnosis.upload' })\n  async uploadData(\n    @Payload() data: { userId: number; file: Express.Multer.File },\n  ) {\n    try {\n      return this.diagnosisService.uploadData(data.userId, data.file);\n    } catch (error) {\n      await this.fileOperationService.deleteFile(data.file.path);\n      throw error;\n    }\n  }\n\n  @MessagePattern({ cmd: 'diagnosis.start' })\n  async startDiagnosis(@Payload() data: { id: number; userId: number }) {\n    return await this.diagnosisService.startDiagnosis(data.id, data.userId);\n  }\n\n  @MessagePattern({ cmd: 'diagnosis.status' })\n  async getDiagnosisStatus(@Payload() data: { id: number }) {\n    return await this.diagnosisService.getDiagnosisStatus(data.id);\n  }\n\n  @MessagePattern({ cmd: 'diagnosis.history' })\n  async diagnosisHistoryGet(@Payload() data: { userId: number }) {\n    return await this.diagnosisService.diagnosisHistoryGet(data.userId);\n  }\n\n  @MessagePattern({ cmd: 'diagnosis.support' })\n  async diagnosisSupportGet() {\n    return await this.diagnosisService.diagnosisSupportGet();\n  }\n\n  @MessagePattern({ cmd: 'diagnosis.history.list' })\n  async diagnosisHistoryListGet(\n    @Payload() data: { page?: number; pageSize?: number; userId: number },\n  ) {\n    return await this.diagnosisService.diagnosisHistoryListGet(\n      data.page,\n      data.pageSize,\n      data.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/DiagnosisHistory.html': {
      url: 'entities/DiagnosisHistory.html',
      title: 'entity - DiagnosisHistory',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  DiagnosisHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/diagnosis-history.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                diagnosisResult\n                            \n                            \n                                    \n                                    \n                                file\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/diagnosis-history.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diagnosisResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/diagnosis-history.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {nullable: true, onDelete: 'SET NULL'})@JoinColumn({name: 'fileId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/diagnosis-history.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 25, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/diagnosis-history.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/diagnosis-history.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport { Column, Entity, Index, JoinColumn, ManyToOne } from 'typeorm';\nimport { BaseEntity } from './base.entity';\n\n@Entity('diagnosis_history')\n@Index('diagnosis_history_created_by_idx', ['createdBy']) // 为 createdBy 字段添加索引\nexport class DiagnosisHistory extends BaseEntity {\n  @ManyToOne(() => FileEntity, { nullable: true, onDelete: 'SET NULL' })\n  @JoinColumn({ name: 'fileId' }) // 关联的文件外键名\n  file: FileEntity | null; // 上传的数据文件，允许为空（0..0关系）\n\n  @Column({ type: 'json', nullable: true })\n  diagnosisResult: object | null;\n\n  @Column({\n    type: 'varchar',\n    length: 25,\n    default: 'pending',\n  })\n  status: string; // 状态（默认值为 'pending'）\n\n  @Column({ type: 'int' })\n  createdBy: number; // 创建者\n\n  @Column({ type: 'int' })\n  updatedBy: number; // 更新者\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/DiagnosisHistory-1.html': {
      url: 'entities/DiagnosisHistory-1.html',
      title: 'entity - DiagnosisHistory-1',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  DiagnosisHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                diagnosisResult\n                            \n                            \n                                    \n                                    \n                                file\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true, default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diagnosisResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {nullable: true, onDelete: 'SET NULL'})@JoinColumn({name: 'fileId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 25, default: 'pending'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', nullable: true, default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { File as FileEntity } from 'apps/api-gateway/src/modules/file/models/file.entity';\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity('diagnosis_history')\n@Index('diagnosis_history_created_by_idx', ['createdBy']) // 为 createdBy 字段添加索引\nexport class DiagnosisHistory {\n  @PrimaryGeneratedColumn('increment')\n  id: number; // 主键ID\n\n  @ManyToOne(() => FileEntity, { nullable: true, onDelete: 'SET NULL' })\n  @JoinColumn({ name: 'fileId' }) // 关联的文件外键名\n  file: FileEntity | null; // 上传的数据文件，允许为空（0..0关系）\n\n  @Column({ type: 'json', nullable: true })\n  diagnosisResult: object | null;\n\n  @Column({\n    type: 'varchar',\n    length: 25,\n    default: 'pending',\n  })\n  status: string; // 状态（默认值为 'pending'）\n\n  @Column({ type: 'int' })\n  createdBy: number; // 创建者\n\n  @Column({ type: 'int' })\n  updatedBy: number; // 更新者\n\n  @Column({\n    type: 'datetime',\n    nullable: true,\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  createdAt: Date; // 创建时间\n\n  @Column({\n    type: 'datetime',\n    nullable: true,\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n  })\n  updatedAt: Date; // 更新时间\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/DiagnosisModule.html': {
      url: 'modules/DiagnosisModule.html',
      title: 'module - DiagnosisModule',
      body: "\n                   \n\n\n\n\n    Modules\n    DiagnosisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiagnosisModule\n\n\n\ncluster_DiagnosisModule_imports\n\n\n\ncluster_DiagnosisModule_providers\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nDiagnosisModule\n\nDiagnosisModule\n\nDiagnosisModule -->\n\nFileModule->DiagnosisModule\n\n\n\n\n\nDiagnosisService\n\nDiagnosisService\n\nDiagnosisModule -->\n\nDiagnosisService->DiagnosisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/diagnosis/diagnosis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DiagnosisService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DiagnosisController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  AIModel,\n  Dataset,\n  DiagnosisHistory,\n  File,\n  Plant,\n} from '@app/database/entities';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FileModule } from '../file/file.module';\nimport { DiagnosisController } from './diagnosis.controller';\nimport { DiagnosisService } from './diagnosis.service';\n\n@Module({\n  imports: [\n    FileModule,\n    TypeOrmModule.forFeature([DiagnosisHistory, AIModel, Plant, File, Dataset]),\n  ],\n  providers: [DiagnosisService],\n  controllers: [DiagnosisController],\n})\nexport class DiagnosisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DiagnosisService.html': {
      url: 'injectables/DiagnosisService.html',
      title: 'injectable - DiagnosisService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiagnosisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleFileMd5\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                diagnosisHistoryGet\n                            \n                            \n                                    Async\n                                diagnosisHistoryListGet\n                            \n                            \n                                    Async\n                                diagnosisSupportGet\n                            \n                            \n                                    Async\n                                getDiagnosisStatus\n                            \n                            \n                                    Async\n                                startDiagnosis\n                            \n                            \n                                    Async\n                                uploadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(diagnosisRepository: Repository, fileOperationService: FileOperationService, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        diagnosisRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileOperationService\n                                                  \n                                                        \n                                                                        FileOperationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisHistoryGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryGet(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisHistoryListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryListGet(page: number, pageSize: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisSupportGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisSupportGet()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDiagnosisStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDiagnosisStatus(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startDiagnosis\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDiagnosis(id: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadData(userId: number, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleFileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DiagnosisHistory, File as FileEntity } from '@app/database/entities';\nimport {\n  BadGatewayException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Status } from '@shared/enum/status.enum';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport axios from 'axios';\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport { DataSource, Repository } from 'typeorm';\nimport { FileOperationService } from '../file/services/file-operation.service';\n\n@Injectable()\nexport class DiagnosisService {\n  constructor(\n    @InjectRepository(DiagnosisHistory)\n    private readonly diagnosisRepository: Repository,\n    private readonly fileOperationService: FileOperationService,\n    private readonly dataSource: DataSource,\n  ) {}\n\n  private handleFileMd5 = (filePath: string) =>\n    new Promise((resolve, reject) => {\n      const hash = crypto.createHash('md5');\n      const stream = fs.createReadStream(filePath);\n      stream.on('data', (data) => hash.update(data));\n      stream.on('end', () => resolve(hash.digest('hex')));\n      stream.on('error', (error) => reject(error));\n    });\n\n  // 上传待诊断数据\n  async uploadData(userId: number, file: Express.Multer.File) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const diagnosisHistory = queryRunner.manager.create(DiagnosisHistory, {\n        createdBy: userId,\n        updatedBy: userId,\n        status: Status.PENDING,\n      });\n      const fileMd5 = await this.handleFileMd5(file.path);\n      const fileEntity = queryRunner.manager.create(FileEntity, {\n        originalFileName: file.originalname,\n        storageFileName: file.filename,\n        fileSize: file.size,\n        fileType: file.mimetype,\n        filePath: file.path,\n        createdBy: userId,\n        updatedBy: userId,\n        fileMd5,\n      });\n      diagnosisHistory.file = fileEntity;\n      await queryRunner.manager.save(diagnosisHistory);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '上传成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new error();\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 开始诊断数据\n  async startDiagnosis(id: number, userId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const diagnosis = await queryRunner.manager.findOne(DiagnosisHistory, {\n        where: { id },\n        lock: { mode: 'pessimistic_write' },\n        relations: ['file'],\n      });\n      if (!diagnosis) {\n        throw new NotFoundException('未找到诊断记录');\n      }\n      if (diagnosis.createdBy !== userId) {\n        throw new UnauthorizedException('无权操作');\n      }\n      diagnosis.status = Status.IN_PROGRESS;\n      await queryRunner.manager.save(diagnosis);\n      const file = diagnosis.file;\n      if (!file) {\n        throw new NotFoundException('未找到文件');\n      }\n      const fileStream = await this.fileOperationService.readFile(\n        file.filePath,\n      );\n      const fileBlob = new Blob([fileStream]);\n      const formData = new FormData();\n      formData.append('image', fileBlob, file.originalFileName);\n      const response = await axios.post(\n        'http://localhost:5001/yolo11/plant/classify',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        },\n      );\n      diagnosis.status = Status.COMPLETED;\n      diagnosis.diagnosisResult = response.data;\n      await queryRunner.manager.save(diagnosis);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, response.data, '诊断成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new BadGatewayException('诊断失败');\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 获取诊断服务状态\n  async getDiagnosisStatus(id: number) {\n    const diagnosis = await this.diagnosisRepository.findOne({\n      where: { id },\n    });\n    if (!diagnosis) {\n      throw new NotFoundException('未找到诊断记录');\n    }\n    return formatResponse(200, diagnosis, '开始诊断成功');\n  }\n\n  async diagnosisHistoryGet(userId: number) {\n    const diagnosisHistory = await this.diagnosisRepository.find({\n      where: { createdBy: userId },\n      order: { createdAt: 'DESC' },\n      relations: ['file'],\n    });\n    return formatResponse(200, diagnosisHistory, '获取诊断历史记录成功');\n  }\n\n  async diagnosisSupportGet() {\n    return formatResponse(\n      200,\n      {\n        plantId: 1,\n        modelId: 1,\n      },\n      '获取诊断支持成功',\n    );\n  }\n\n  // 获取诊断历史记录\n  async diagnosisHistoryListGet(\n    page: number = 1,\n    pageSize: number = 10,\n    userId: number,\n  ) {\n    const [list, total] = await this.diagnosisRepository.findAndCount({\n      where: { createdBy: userId },\n      order: { createdAt: 'DESC' },\n      relations: ['file'],\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n    });\n    return formatResponse(\n      200,\n      { list, total, page, pageSize },\n      '获取诊断历史记录成功',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DiagnosisService-1.html': {
      url: 'injectables/DiagnosisService-1.html',
      title: 'injectable - DiagnosisService-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiagnosisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleFileMd5\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                diagnosisHistoryGet\n                            \n                            \n                                    Async\n                                diagnosisHistoryListGet\n                            \n                            \n                                    Async\n                                diagnosisSupportGet\n                            \n                            \n                                    Async\n                                getDiagnosisStatus\n                            \n                            \n                                    Async\n                                startDiagnosis\n                            \n                            \n                                    Async\n                                uploadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(diagnosisRepository: Repository, fileOperationService: FileOperationService, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        diagnosisRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileOperationService\n                                                  \n                                                        \n                                                                        FileOperationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisHistoryGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryGet(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisHistoryListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisHistoryListGet(page: number, pageSize: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        diagnosisSupportGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    diagnosisSupportGet()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDiagnosisStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDiagnosisStatus(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startDiagnosis\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDiagnosis(id: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadData(userId: number, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleFileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadGatewayException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Status } from '@shared/enum/status.enum';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport axios from 'axios';\nimport { DataSource, Repository } from 'typeorm';\nimport {\n  DiagnosisHistory,\n  File as FileEntity,\n} from '../../../../../libs/database/src/entities';\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport { FileOperationService } from 'apps/api-gateway/src/modules/file/services/file-operation.service';\n\n@Injectable()\nexport class DiagnosisService {\n  constructor(\n    @InjectRepository(DiagnosisHistory)\n    private readonly diagnosisRepository: Repository,\n    private readonly fileOperationService: FileOperationService,\n    private readonly dataSource: DataSource,\n  ) {}\n\n  private handleFileMd5 = (filePath: string) =>\n    new Promise((resolve, reject) => {\n      const hash = crypto.createHash('md5');\n      const stream = fs.createReadStream(filePath);\n      stream.on('data', (data) => hash.update(data));\n      stream.on('end', () => resolve(hash.digest('hex')));\n      stream.on('error', (error) => reject(error));\n    });\n\n  // 上传待诊断数据\n  async uploadData(userId: number, file: Express.Multer.File) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const diagnosisHistory = queryRunner.manager.create(DiagnosisHistory, {\n        createdBy: userId,\n        updatedBy: userId,\n        status: Status.PENDING,\n      });\n      const fileMd5 = await this.handleFileMd5(file.path);\n      const fileEntity = queryRunner.manager.create(FileEntity, {\n        originalFileName: file.originalname,\n        storageFileName: file.filename,\n        fileSize: file.size,\n        fileType: file.mimetype,\n        filePath: file.path,\n        createdBy: userId,\n        updatedBy: userId,\n        fileMd5,\n      });\n      diagnosisHistory.file = fileEntity;\n      await queryRunner.manager.save(diagnosisHistory);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, null, '上传成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new error();\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 开始诊断数据\n  async startDiagnosis(id: number, userId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const diagnosis = await queryRunner.manager.findOne(DiagnosisHistory, {\n        where: { id },\n        lock: { mode: 'pessimistic_write' },\n        relations: ['file'],\n      });\n      if (!diagnosis) {\n        throw new NotFoundException('未找到诊断记录');\n      }\n      if (diagnosis.createdBy !== userId) {\n        throw new UnauthorizedException('无权操作');\n      }\n      diagnosis.status = Status.IN_PROGRESS;\n      await queryRunner.manager.save(diagnosis);\n      const file = diagnosis.file;\n      if (!file) {\n        throw new NotFoundException('未找到文件');\n      }\n      const fileStream = await this.fileOperationService.readFile(\n        file.filePath,\n      );\n      const fileBlob = new Blob([fileStream]);\n      const formData = new FormData();\n      formData.append('image', fileBlob, file.originalFileName);\n      const response = await axios.post(\n        'http://localhost:5001/yolo11/plant/classify',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        },\n      );\n      diagnosis.status = Status.COMPLETED;\n      diagnosis.diagnosisResult = response.data;\n      await queryRunner.manager.save(diagnosis);\n      await queryRunner.commitTransaction();\n      return formatResponse(200, response.data, '诊断成功');\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw new BadGatewayException('诊断失败');\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  // 获取诊断服务状态\n  async getDiagnosisStatus(id: number) {\n    const diagnosis = await this.diagnosisRepository.findOne({\n      where: { id },\n    });\n    if (!diagnosis) {\n      throw new NotFoundException('未找到诊断记录');\n    }\n    return formatResponse(200, diagnosis, '开始诊断成功');\n  }\n\n  async diagnosisHistoryGet(userId: number) {\n    const diagnosisHistory = await this.diagnosisRepository.find({\n      where: { createdBy: userId },\n      order: { createdAt: 'DESC' },\n      relations: ['file'],\n    });\n    return formatResponse(200, diagnosisHistory, '获取诊断历史记录成功');\n  }\n\n  async diagnosisSupportGet() {\n    return formatResponse(\n      200,\n      {\n        plantId: 1,\n        modelId: 1,\n      },\n      '获取诊断支持成功',\n    );\n  }\n\n  // 获取诊断历史记录\n  async diagnosisHistoryListGet(\n    page: number = 1,\n    pageSize: number = 10,\n    userId: number,\n  ) {\n    const [list, total] = await this.diagnosisRepository.findAndCount({\n      where: { createdBy: userId },\n      order: { createdAt: 'DESC' },\n      relations: ['file'],\n      take: pageSize,\n      skip: (page - 1) * pageSize,\n    });\n    return formatResponse(\n      200,\n      { list, total, page, pageSize },\n      '获取诊断历史记录成功',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/DownloadController.html': {
      url: 'controllers/DownloadController.html',
      title: 'controller - DownloadController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  DownloadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/download-service/src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                downloadFile\n                            \n                            \n                                    \n                                    Async\n                                downloadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'file.download'})\n                \n            \n\n                    \n                        \n                            Defined in apps/download-service/src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        downloadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFiles(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.download'})\n                \n            \n\n                    \n                        \n                            Defined in apps/download-service/src/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { DownloadService } from './app.service';\n\n@Controller()\nexport class DownloadController {\n  constructor(private readonly downloadService: DownloadService) {}\n\n  @MessagePattern({ cmd: 'file.download' })\n  async downloadFile(@Payload() payload: { fileMeta: FileEntity }) {\n    return this.downloadService.downloadFile(payload);\n  }\n\n  @MessagePattern({ cmd: 'files.download' })\n  async downloadFiles(@Payload() payload: { filesMeta: FileEntity[] }) {\n    return this.downloadService.downloadFilesAsZip(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/DownloadFilesDto.html': {
      url: 'classes/DownloadFilesDto.html',
      title: 'class - DownloadFilesDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadFilesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/download-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                fileIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'fileIds 参数不能为空！'})@IsArray({message: 'fileIds 参数必须是数组！'})@ArrayMinSize(1, {message: 'fileIds 参数必须存在！'})@Transform( => , {toClassOnly: true})@IsInt({each: true})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/download-file.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsNotEmpty, IsInt } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class DownloadFilesDto {\n  @IsNotEmpty({ message: 'fileIds 参数不能为空！' })\n  @IsArray({ message: 'fileIds 参数必须是数组！' })\n  @ArrayMinSize(1, { message: 'fileIds 参数必须存在！' })\n  @Transform(({ value }) => value.map((v: string) => Number(v)), {\n    toClassOnly: true,\n  })\n  @IsInt({ each: true })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/DownloadService.html': {
      url: 'injectables/DownloadService.html',
      title: 'injectable - DownloadService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/download-service/src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadFile\n                            \n                            \n                                    Async\n                                downloadFilesAsZip\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/download-service/src/app.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFilesAsZip\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFilesAsZip(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/download-service/src/app.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DownloadService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/download-service/src/app.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport { Injectable, Logger } from '@nestjs/common';\nimport * as archiver from 'archiver';\nimport { createReadStream, existsSync } from 'fs';\nimport { join } from 'path';\n\n@Injectable()\nexport class DownloadService {\n  private readonly logger = new Logger(DownloadService.name);\n\n  async downloadFile(data: { fileMeta: FileEntity }) {\n    try {\n      const filePath = data.fileMeta.filePath;\n      if (!filePath || !existsSync(filePath)) {\n        return { success: false, message: '文件不存在' };\n      }\n      const fileStream = createReadStream(filePath);\n      let fileData = Buffer.alloc(0);\n      for await (const chunk of fileStream) {\n        fileData = Buffer.concat([fileData, chunk]);\n      }\n      return { success: true, data: fileData.toString('base64') };\n    } catch (err) {\n      this.logger.error(`下载失败: ${err.message}`);\n      return { success: false, message: '文件下载失败' };\n    }\n  }\n\n  async downloadFilesAsZip(data: { filesMeta: FileEntity[] }) {\n    try {\n      if (!data.filesMeta || data.filesMeta.length === 0) {\n        return { success: false, message: '没有可下载的文件' };\n      }\n      const zip = archiver('zip', { zlib: { level: 9 } });\n\n      let zipBuffer = Buffer.alloc(0);\n      zip.on('data', (chunk) => {\n        zipBuffer = Buffer.concat([zipBuffer, chunk]);\n      });\n\n      await new Promise((resolve, reject) => {\n        zip.on('end', resolve);\n        zip.on('error', reject);\n\n        // 遍历所有文件并添加到 zip\n        for (const fileMeta of data.filesMeta) {\n          const filePath = fileMeta.filePath;\n          if (existsSync(filePath)) {\n            zip.append(createReadStream(filePath), {\n              name: fileMeta.originalFileName,\n            });\n          } else {\n            this.logger.warn(`文件未找到: ${filePath}`);\n          }\n        }\n        zip.finalize();\n      });\n\n      return { success: true, data: zipBuffer.toString('base64') };\n    } catch (err) {\n      this.logger.error(`打包失败: ${err.message}`);\n      return { success: false, message: '文件打包失败' };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/File.html': {
      url: 'entities/File.html',
      title: 'entity - File',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                datasets\n                            \n                            \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                filePath\n                            \n                            \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                fileType\n                            \n                            \n                                    \n                                originalFileName\n                            \n                            \n                                    \n                                storageFileName\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 30, default: 'private'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        datasets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dataset[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, dataset => dataset.files, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'char', length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        originalFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/file.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { Dataset } from './dataset.entity';\nimport { BaseEntity } from './base.entity';\n\n@Entity('file')\n@Index('file_user_id_fk', ['createdBy'])\n@Index('file_user_id_fk_2', ['updatedBy'])\nexport class File extends BaseEntity {\n  @Column({ type: 'varchar', length: 255 })\n  originalFileName: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  storageFileName: string;\n\n  @Column({ type: 'text' })\n  filePath: string;\n\n  @Column({ type: 'bigint' })\n  fileSize: number;\n\n  @Column({ type: 'varchar', length: 100 })\n  fileType: string;\n\n  @Column({ type: 'char', length: 32 })\n  fileMd5: string;\n\n  @Column({ type: 'varchar', length: 30, default: 'private' })\n  access: string;\n\n  @Column({ type: 'int' })\n  createdBy: number;\n\n  @Column({ type: 'int' })\n  updatedBy: number;\n\n  @Column({ type: 'int', default: 1 })\n  version: number;\n\n  @ManyToMany(() => Dataset, (dataset) => dataset.files, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  datasets: Dataset[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/FileController-1.html': {
      url: 'controllers/FileController-1.html',
      title: 'controller - FileController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-service/src/modules/file/file.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                deleteFile\n                            \n                            \n                                    \n                                    Async\n                                deleteFiles\n                            \n                            \n                                    \n                                    Async\n                                getFile\n                            \n                            \n                                    \n                                    Async\n                                getFileById\n                            \n                            \n                                    \n                                    Async\n                                getFiles\n                            \n                            \n                                    \n                                    Async\n                                getFilesById\n                            \n                            \n                                    \n                                    Async\n                                getFilesList\n                            \n                            \n                                    \n                                    Async\n                                getFilesStatisticUsage\n                            \n                            \n                                    \n                                    Async\n                                updateFile\n                            \n                            \n                                    \n                                    Async\n                                updateFilesAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'file.delete'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFiles(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.delete'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'file.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileById(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'file.get.byId'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFiles(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFilesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilesById(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.get.byId'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFilesList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilesList(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.get.list'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFilesStatisticUsage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilesStatisticUsage(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.statistic.usage'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFile(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'file.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateFilesAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFilesAccess(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'files.update.access'})\n                \n            \n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  UpdateFileDto,\n  UpdateFilesAccessDto,\n} from '@common/dto/file/update-file.dto';\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { FileService } from './file.service';\n\n@Controller()\nexport class FileController {\n  constructor(private fileService: FileService) {}\n\n  @MessagePattern({ cmd: 'file.get' })\n  async getFile(@Payload() payload: { fileId: number }) {\n    return this.fileService.getFile(payload.fileId);\n  }\n\n  @MessagePattern({ cmd: 'file.get.byId' })\n  async getFileById(@Payload() payload: { fileId: number }) {\n    return this.fileService.getFileById(payload.fileId);\n  }\n\n  @MessagePattern({ cmd: 'file.update' })\n  async updateFile(@Payload() payload: { userId: number; dto: UpdateFileDto }) {\n    return this.fileService.updateFile(payload.userId, payload.dto);\n  }\n\n  @MessagePattern({ cmd: 'file.delete' })\n  async deleteFile(@Payload() payload: { fileId: number; userId: number }) {\n    return this.fileService.deleteFile(payload.fileId, payload.userId);\n  }\n\n  @MessagePattern({ cmd: 'files.get' })\n  async getFiles(@Payload() payload: { userId: number }) {\n    return this.fileService.getFiles(payload.userId);\n  }\n\n  @MessagePattern({ cmd: 'files.get.byId' })\n  async getFilesById(@Payload() payload: { fileIds: number[] }) {\n    return this.fileService.getFilesById(payload.fileIds);\n  }\n\n  @MessagePattern({ cmd: 'files.get.list' })\n  async getFilesList(\n    @Payload()\n    payload: {\n      page: number;\n      pageSize: number;\n      filters: {\n        fileType?: string[];\n        originalFileName?: string;\n        createdStart?: string;\n        createdEnd?: string;\n        updatedStart?: string;\n        updatedEnd?: string;\n      };\n      userId: number;\n    },\n  ) {\n    return this.fileService.getFilesList(\n      payload.page,\n      payload.pageSize,\n      payload.filters,\n      payload.userId,\n    );\n  }\n\n  @MessagePattern({ cmd: 'files.update.access' })\n  async updateFilesAccess(\n    @Payload() payload: { userId: number; dto: UpdateFilesAccessDto },\n  ) {\n    return this.fileService.updateFilesAccess(payload.userId, payload.dto);\n  }\n\n  @MessagePattern({ cmd: 'files.delete' })\n  async deleteFiles(@Payload() payload: { fileIds: number[]; userId: number }) {\n    return this.fileService.deleteFiles(payload.fileIds, payload.userId);\n  }\n\n  @MessagePattern({ cmd: 'files.statistic.usage' })\n  async getFilesStatisticUsage(@Payload() payload: { userId: number }) {\n    return this.fileService.getFilesStatisticUsage(payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/FileGuard.html': {
      url: 'guards/FileGuard.html',
      title: 'guard - FileGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api-gateway/src/modules/file/guards/file.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(fileClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/file/guards/file.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/guards/file.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { File as FileEntity } from '@app/database/entities';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { FILE_SERVICE_NAME } from 'config/microservice.config';\nimport { Request } from 'express';\nimport { firstValueFrom } from 'rxjs';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      fileMeta: FileEntity;\n    }\n  }\n}\n\n@Injectable()\nexport class FileGuard implements CanActivate {\n  constructor(\n    @Inject(FILE_SERVICE_NAME) private readonly fileClient: ClientProxy,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileId = request.params.fileId;\n    const userId = request.user?.userId;\n\n    if (!fileId) {\n      throw new BadRequestException('文件 ID 不能为空');\n    }\n\n    // 远程调用 file-service 获取文件信息\n    const { result: file } = await firstValueFrom(\n      this.fileClient.send('file.get.byId', fileId),\n    );\n\n    if (!file) {\n      throw new BadRequestException('文件不存在');\n    }\n\n    if (\n      file.access === 'public' ||\n      (file.access === 'private' && userId === file.createdBy)\n    ) {\n      request.fileMeta = file;\n      return true;\n    }\n\n    throw new ForbiddenException('当前文件无权限访问.');\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/FileModule.html': {
      url: 'modules/FileModule.html',
      title: 'module - FileModule',
      body: "\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_FileModule_exports\n\n\n\n\nFileOperationService \n\nFileOperationService \n\n\n\nFileModule\n\nFileModule\n\nFileOperationService  -->\n\nFileModule->FileOperationService \n\n\n\n\n\nFileOperationService\n\nFileOperationService\n\nFileModule -->\n\nFileOperationService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileOperationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileOperationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ConfigEnum } from '@shared/enum/config.enum';\nimport {\n  DOWNLOAD_SERVICE_NAME,\n  DOWNLOAD_SERVICE_TCP_PORT,\n  FILE_SERVICE_NAME,\n  FILE_SERVICE_TCP_PORT,\n  UPLOAD_SERVICE_NAME,\n  UPLOAD_SERVICE_TCP_PORT,\n} from 'config/microservice.config';\nimport { FileController } from './file.controller';\nimport { FileOperationService } from './services/file-operation.service';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(ConfigEnum.SECRET),\n          signOptions: {\n            expiresIn: '1h', // 默认一小时\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ClientsModule.register([\n      {\n        name: UPLOAD_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: UPLOAD_SERVICE_TCP_PORT },\n      },\n      {\n        name: FILE_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: FILE_SERVICE_TCP_PORT },\n      },\n      {\n        name: DOWNLOAD_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: DOWNLOAD_SERVICE_TCP_PORT },\n      },\n    ]),\n  ],\n  providers: [FileOperationService],\n  controllers: [FileController],\n  exports: [FileOperationService, ClientsModule],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/FileOperationModule.html': {
      url: 'modules/FileOperationModule.html',
      title: 'module - FileOperationModule',
      body: '\n                   \n\n\n\n\n    Modules\n    FileOperationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileOperationModule\n\n\n\ncluster_FileOperationModule_providers\n\n\n\ncluster_FileOperationModule_exports\n\n\n\n\nFileOperationService \n\nFileOperationService \n\n\n\nFileOperationModule\n\nFileOperationModule\n\nFileOperationService  -->\n\nFileOperationModule->FileOperationService \n\n\n\n\n\nFileOperationService\n\nFileOperationService\n\nFileOperationModule -->\n\nFileOperationService->FileOperationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/file-operation/src/file-operation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileOperationService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileOperationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\nimport { FileOperationService } from \'./file-operation.service\';\n\n@Module({\n  providers: [FileOperationService],\n  exports: [FileOperationService],\n})\nexport class FileOperationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/FileOperationService.html': {
      url: 'injectables/FileOperationService.html',
      title: 'injectable - FileOperationService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileOperationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/file-operation/src/file-operation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateFileMd5\n                            \n                            \n                                    Private\n                                    Async\n                                checkFileExists\n                            \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                ensureDirectoryExists\n                            \n                            \n                                mergeFile\n                            \n                            \n                                    Async\n                                mergeFiles\n                            \n                            \n                                    Async\n                                moveFile\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Private\n                                validatePath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateFileMd5\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateFileMd5(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:65\n                        \n                    \n\n\n            \n                \n                        计算文件 MD5 值（流式计算，提高大文件效率）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    目标文件路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                文件的 MD5 值\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkFileExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkFileExists(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:161\n                        \n                    \n\n\n            \n                \n                        检查文件是否存在（防止文件不存在时的操作）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    目标文件路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:48\n                        \n                    \n\n\n            \n                \n                        删除文件（确保路径安全）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    目标文件路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ensureDirectoryExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureDirectoryExists(dirPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:21\n                        \n                    \n\n\n            \n                \n                        确保目录存在\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dirPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    目标目录\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeFile\n                        \n                    \n                \n            \n            \n                \nmergeFile(chunkPath: string, finalPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:90\n                        \n                    \n\n\n            \n                \n                        合并单个文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chunkPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finalPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        mergeFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeFiles(chunkPaths: string[], finalPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:107\n                        \n                    \n\n\n            \n                \n                        合并多个文件（支持大文件合并）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chunkPaths\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    需要合并的文件路径数组\n\n                                            \n                                        \n                                        \n                                                finalPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    合并后的文件路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        moveFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFile(oldPath: string, newPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:135\n                        \n                    \n\n\n            \n                \n                        移动文件（带路径检查）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                oldPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    旧路径\n\n                                            \n                                        \n                                        \n                                                newPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    新路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:34\n                        \n                    \n\n\n            \n                \n                        读取文件（确保路径安全）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    目标文件路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                文件内容（Buffer）\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePath(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/file-operation/src/file-operation.service.ts:150\n                        \n                    \n\n\n            \n                \n                        校验路径是否合法（防止路径遍历攻击）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    目标路径\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport * as crypto from 'crypto';\nimport { createReadStream, createWriteStream } from 'fs';\nimport {\n  access,\n  constants,\n  mkdir,\n  readFile,\n  rename,\n  unlink,\n} from 'fs/promises';\nimport * as path from 'path';\n\n@Injectable()\nexport class FileOperationService {\n  /**\n   * 确保目录存在\n   * @param dirPath 目标目录\n   */\n  async ensureDirectoryExists(dirPath: string): Promise {\n    try {\n      await mkdir(dirPath, { recursive: true });\n    } catch (error) {\n      throw new RpcException({ message: `无法创建目录: ${dirPath}`, error });\n    }\n  }\n\n  /**\n   * 读取文件（确保路径安全）\n   * @param filePath 目标文件路径\n   * @returns 文件内容（Buffer）\n   */\n  async readFile(filePath: string): Promise {\n    try {\n      this.validatePath(filePath);\n      await this.checkFileExists(filePath);\n      return await readFile(filePath);\n    } catch (error) {\n      throw new RpcException({ message: '读取文件失败', error });\n    }\n  }\n\n  /**\n   * 删除文件（确保路径安全）\n   * @param filePath 目标文件路径\n   */\n  async deleteFile(filePath: string): Promise {\n    try {\n      this.validatePath(filePath);\n      await this.checkFileExists(filePath);\n      await unlink(filePath);\n      return true;\n    } catch (error) {\n      if (error instanceof NotFoundException) return false;\n      throw new RpcException({ message: '删除文件失败', error });\n    }\n  }\n\n  /**\n   * 计算文件 MD5 值（流式计算，提高大文件效率）\n   * @param filePath 目标文件路径\n   * @returns 文件的 MD5 值\n   */\n  async calculateFileMd5(filePath: string): Promise {\n    try {\n      this.validatePath(filePath);\n      await this.checkFileExists(filePath);\n      const hash = crypto.createHash('md5');\n      const stream = createReadStream(filePath);\n\n      return await new Promise((resolve, reject) => {\n        stream.on('data', (data) => hash.update(data));\n        stream.on('end', () => resolve(hash.digest('hex')));\n        stream.on('error', (error) =>\n          reject(new RpcException({ message: '读取文件时出错', error })),\n        );\n      });\n    } catch (error) {\n      throw new RpcException({ message: '无法计算文件 MD5', error });\n    }\n  }\n\n  /**\n   * 合并单个文件\n   * @param chunkPath\n   * @param finalPath\n   * @returns\n   */\n  mergeFile(chunkPath: string, finalPath: string) {\n    return new Promise((resolve, reject) => {\n      const chunkStream = createReadStream(chunkPath);\n      const writeStream = createWriteStream(finalPath, { flags: 'a' }); // 追加模式\n      chunkStream.pipe(writeStream, { end: false }); // 不结束流\n      chunkStream.on('end', resolve);\n      chunkStream.on('error', reject);\n      writeStream.on('finish', resolve);\n      writeStream.on('error', reject);\n    });\n  }\n\n  /**\n   * 合并多个文件（支持大文件合并）\n   * @param chunkPaths 需要合并的文件路径数组\n   * @param finalPath 合并后的文件路径\n   */\n  async mergeFiles(chunkPaths: string[], finalPath: string): Promise {\n    try {\n      this.validatePath(finalPath);\n      const writeStream = createWriteStream(finalPath, { flags: 'w' });\n\n      for (const chunkPath of chunkPaths) {\n        this.validatePath(chunkPath);\n        await this.checkFileExists(chunkPath);\n        const readStream = createReadStream(chunkPath);\n\n        await new Promise((resolve, reject) => {\n          readStream.pipe(writeStream, { end: false });\n          readStream.on('end', resolve);\n          readStream.on('error', reject);\n        });\n      }\n\n      writeStream.end();\n    } catch (error) {\n      throw new RpcException({ message: '合并文件失败', error });\n    }\n  }\n\n  /**\n   * 移动文件（带路径检查）\n   * @param oldPath 旧路径\n   * @param newPath 新路径\n   */\n  async moveFile(oldPath: string, newPath: string): Promise {\n    try {\n      this.validatePath(oldPath);\n      this.validatePath(newPath);\n      await this.checkFileExists(oldPath);\n      await rename(oldPath, newPath);\n    } catch (error) {\n      throw new RpcException({ message: '移动文件失败', error });\n    }\n  }\n\n  /**\n   * 校验路径是否合法（防止路径遍历攻击）\n   * @param filePath 目标路径\n   */\n  private validatePath(filePath: string): void {\n    const resolvedPath = path.resolve(filePath);\n    if (!resolvedPath.startsWith(path.resolve('./'))) {\n      throw new RpcException({ message: '非法路径访问' });\n    }\n  }\n\n  /**\n   * 检查文件是否存在（防止文件不存在时的操作）\n   * @param filePath 目标文件路径\n   */\n  private async checkFileExists(filePath: string): Promise {\n    try {\n      await access(filePath, constants.F_OK | constants.R_OK);\n    } catch {\n      throw new NotFoundException({\n        message: `文件不存在或无法访问: ${filePath}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FileOperationService-1.html': {
      url: 'injectables/FileOperationService-1.html',
      title: 'injectable - FileOperationService-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileOperationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/services/file-operation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateFileMd5\n                            \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                mergeFile\n                            \n                            \n                                    Async\n                                readFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateFileMd5\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateFileMd5(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/services/file-operation.service.ts:61\n                        \n                    \n\n\n            \n                \n                        计算文件 MD5\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                MD5 值\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/services/file-operation.service.ts:26\n                        \n                    \n\n\n            \n                \n                        删除文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeFile\n                        \n                    \n                \n            \n            \n                \nmergeFile(chunkPath: string, finalPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/services/file-operation.service.ts:44\n                        \n                    \n\n\n            \n                \n                        合并文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chunkPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                finalPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/services/file-operation.service.ts:13\n                        \n                    \n\n\n            \n                \n                        读取文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport { createReadStream, createWriteStream, existsSync } from 'fs';\nimport { readFile, unlink } from 'fs/promises';\n\n@Injectable()\nexport class FileOperationService {\n  /**\n   * 读取文件\n   * @param filePath\n   * @returns\n   */\n  async readFile(filePath: string): Promise {\n    try {\n      return await readFile(filePath);\n    } catch (error) {\n      throw new InternalServerErrorException('读取文件失败', error);\n    }\n  }\n\n  /**\n   * 删除文件\n   * @param filePath\n   * @returns\n   */\n  async deleteFile(filePath: string) {\n    try {\n      if (existsSync(filePath)) {\n        await unlink(filePath);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      throw new InternalServerErrorException('删除文件失败', error);\n    }\n  }\n\n  /**\n   * 合并文件\n   * @param chunkPath\n   * @param finalPath\n   * @returns\n   */\n  mergeFile(chunkPath: string, finalPath: string) {\n    return new Promise((resolve, reject) => {\n      const chunkStream = createReadStream(chunkPath);\n      const writeStream = createWriteStream(finalPath, { flags: 'a' }); // 追加模式\n      chunkStream.pipe(writeStream, { end: false }); // 不结束流\n      chunkStream.on('end', resolve);\n      chunkStream.on('error', reject);\n      writeStream.on('finish', resolve);\n      writeStream.on('error', reject);\n    });\n  }\n\n  /**\n   * 计算文件 MD5\n   * @param filePath\n   * @returns MD5 值\n   */\n  async calculateFileMd5(filePath: string): Promise {\n    try {\n      const hash = crypto.createHash('md5');\n      const stream = createReadStream(filePath);\n      return await new Promise((resolve, reject) => {\n        stream.on('data', (data) => hash.update(data));\n        stream.on('end', () => resolve(hash.digest('hex')));\n        stream.on('error', (error) =>\n          reject(new InternalServerErrorException('读取文件时出错', error)),\n        );\n      });\n    } catch (error) {\n      throw new InternalServerErrorException('无法读取文件', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FileService.html': {
      url: 'injectables/FileService.html',
      title: 'injectable - FileService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/file-service/src/modules/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                deleteFiles\n                            \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getFileById\n                            \n                            \n                                    Async\n                                getFiles\n                            \n                            \n                                    Async\n                                getFilesById\n                            \n                            \n                                    Async\n                                getFilesList\n                            \n                            \n                                    Async\n                                getFilesStatisticUsage\n                            \n                            \n                                    Async\n                                updateFile\n                            \n                            \n                                    Async\n                                updateFilesAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, fileOperationService: FileOperationService, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in apps/file-service/src/modules/file/file.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileOperationService\n                                                  \n                                                        \n                                                                        FileOperationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileId: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:253\n                        \n                    \n\n\n            \n                \n                        删除文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFiles(fileIds: number[], userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:301\n                        \n                    \n\n\n            \n                \n                        批量删除文件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(fileId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:140\n                        \n                    \n\n\n            \n                \n                        获取文件信息\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileById(fileId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:155\n                        \n                    \n\n\n            \n                \n                        获取文件信息\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFiles(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:30\n                        \n                    \n\n\n            \n                \n                        获取文件列表\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilesById(fileIds: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:45\n                        \n                    \n\n\n            \n                \n                        获取文件列表\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilesList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilesList(page: number, pageSize: number, filters: literal type, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:63\n                        \n                    \n\n\n            \n                \n                        获取文件列表分页\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilesStatisticUsage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilesStatisticUsage(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:353\n                        \n                    \n\n\n            \n                \n                        获取文件使用量统计\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFile(userId: number, dto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:168\n                        \n                    \n\n\n            \n                \n                        更新文件信息\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFilesAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFilesAccess(userId: number, dto: UpdateFilesAccessDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/file-service/src/modules/file/file.service.ts:210\n                        \n                    \n\n\n            \n                \n                        批量更新文件权限\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateFilesAccessDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport { FileOperationService } from '@app/file-operation/file-operation.service';\nimport {\n  UpdateFileDto,\n  UpdateFilesAccessDto,\n} from '@common/dto/file/update-file.dto';\nimport { HttpStatus, Injectable } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { getFileType } from '@shared/utils';\nimport { DataSource, In, Repository } from 'typeorm';\n\n@Injectable()\nexport class FileService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n    private readonly fileOperationService: FileOperationService,\n    private readonly dataSource: DataSource,\n  ) {}\n\n  /**\n   * 获取文件列表\n   * @param page\n   * @param pageSize\n   * @param filters\n   * @param userId\n   * @returns\n   */\n  async getFiles(userId: number) {\n    const files = await this.fileRepository.find({\n      where: { createdBy: userId },\n    });\n    return {\n      success: true,\n      result: files,\n    };\n  }\n\n  /**\n   * 获取文件列表\n   * @param fileIds\n   * @returns\n   */\n  async getFilesById(fileIds: number[]) {\n    const files = await this.fileRepository.find({\n      where: { id: In(fileIds) },\n    });\n    return {\n      success: true,\n      result: files,\n    };\n  }\n\n  /**\n   * 获取文件列表分页\n   * @param page\n   * @param pageSize\n   * @param filters\n   * @param userId\n   * @returns\n   */\n  async getFilesList(\n    page: number,\n    pageSize: number,\n    filters: {\n      fileType?: string[];\n      originalFileName?: string;\n      createdStart?: string;\n      createdEnd?: string;\n      updatedStart?: string;\n      updatedEnd?: string;\n    },\n    userId: number, // 添加用户ID\n  ) {\n    const queryBuilder = this.fileRepository.createQueryBuilder('file');\n\n    // 过滤当前用户的文件\n    queryBuilder.andWhere('file.createdBy = :userId', { userId });\n\n    // 过滤文件类型\n    if (filters.fileType) {\n      queryBuilder.andWhere('file.fileType IN (:...fileType)', {\n        fileType: filters.fileType,\n      });\n    }\n\n    // 模糊匹配文件名\n    if (filters.originalFileName) {\n      queryBuilder.andWhere('file.originalFileName LIKE :originalFileName', {\n        originalFileName: `%${filters.originalFileName}%`,\n      });\n    }\n\n    // 创建时间范围\n    if (filters.createdStart && filters.createdEnd) {\n      queryBuilder.andWhere(\n        'file.createdAt BETWEEN :createdStart AND :createdEnd',\n        {\n          createdStart: new Date(filters.createdStart),\n          createdEnd: new Date(filters.createdEnd),\n        },\n      );\n    }\n\n    // 更新时间范围\n    if (filters.updatedStart && filters.updatedEnd) {\n      queryBuilder.andWhere(\n        'file.updatedAt BETWEEN :updatedStart AND :updatedEnd',\n        {\n          updatedStart: new Date(filters.updatedStart),\n          updatedEnd: new Date(filters.updatedEnd),\n        },\n      );\n    }\n\n    // 获取文件列表及总数\n    const [list, total] = await queryBuilder\n      .orderBy('file.id', 'DESC')\n      .skip((page - 1) * pageSize)\n      .take(pageSize)\n      .getManyAndCount();\n\n    return {\n      success: true,\n      result: {\n        list,\n        total,\n        page,\n        pageSize,\n      },\n    };\n  }\n\n  /**\n   * 获取文件信息\n   * @param fileId\n   * @returns\n   */\n  async getFile(fileId: number) {\n    const file = await this.fileRepository.findOne({\n      where: { id: fileId },\n    });\n    return {\n      success: true,\n      result: file,\n    };\n  }\n\n  /**\n   * 获取文件信息\n   * @param fileId\n   * @returns\n   */\n  async getFileById(fileId: number) {\n    const file = await this.fileRepository.findOne({\n      where: { id: fileId },\n    });\n    return { success: true, result: file };\n  }\n\n  /**\n   * 更新文件信息\n   * @param userId\n   * @param dto\n   * @returns\n   */\n  async updateFile(userId: number, dto: UpdateFileDto) {\n    const { fileId, ...fileMeta } = dto;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const file = await queryRunner.manager.findOne(FileEntity, {\n        where: { id: fileId },\n        lock: { mode: 'pessimistic_write' },\n      });\n      if (!file) {\n        throw new RpcException({\n          code: HttpStatus.NOT_FOUND,\n          message: '未找到文件',\n        });\n      }\n      if (file.createdBy !== userId) {\n        throw new RpcException({\n          code: HttpStatus.FORBIDDEN,\n          message: '无权修改他人文件',\n        });\n      }\n      Object.assign(file, fileMeta);\n      file.updatedBy = userId;\n      file.version += 1;\n      await queryRunner.manager.save(file);\n      await queryRunner.commitTransaction();\n      return { success: true };\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 批量更新文件权限\n   * @param userId\n   * @param dto\n   * @returns\n   */\n  async updateFilesAccess(userId: number, dto: UpdateFilesAccessDto) {\n    const { fileIds, access } = dto;\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const files = await queryRunner.manager.find(FileEntity, {\n        where: { id: In(fileIds) },\n      });\n      if (files.length === 0) {\n        throw new RpcException({\n          code: HttpStatus.NOT_FOUND,\n          message: '未找到文件',\n        });\n      }\n      for (const file of files) {\n        if (file.createdBy !== userId) {\n          throw new RpcException({\n            code: HttpStatus.FORBIDDEN,\n            message: '无权修改他人文件',\n          });\n        }\n        file.access = access;\n        file.updatedBy = userId;\n        file.version += 1;\n      }\n      await queryRunner.manager.save(files);\n      await queryRunner.commitTransaction();\n      return { success: true };\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 删除文件\n   * @param fileId\n   * @param userId\n   * @returns\n   */\n  async deleteFile(fileId: number, userId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const file = await queryRunner.manager.findOne(FileEntity, {\n        where: { id: fileId },\n        lock: { mode: 'pessimistic_write' },\n      });\n      if (!file) {\n        throw new RpcException({\n          code: HttpStatus.NOT_FOUND,\n          message: '未找到文件',\n        });\n      }\n      if (file.createdBy !== userId) {\n        throw new RpcException({\n          code: HttpStatus.FORBIDDEN,\n          message: '无权删除他人文件',\n        });\n      }\n      // 检查文件是否被引用\n      const referenceCount = await queryRunner.manager.count(FileEntity, {\n        where: { fileMd5: file.fileMd5 },\n      });\n      // 如果文件没有被引用，删除文件元数据及文件\n      if (referenceCount === 0) {\n        await queryRunner.manager.delete(FileEntity, fileId);\n        await queryRunner.commitTransaction();\n        await this.fileOperationService.deleteFile(file.filePath);\n      } else {\n        // 如果文件被引用，直接删除文件元数据，不删除实际文件\n        await queryRunner.manager.delete(FileEntity, fileId);\n        await queryRunner.commitTransaction();\n      }\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 批量删除文件\n   * @param fileIds\n   * @returns\n   */\n  async deleteFiles(fileIds: number[], userId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const files = await queryRunner.manager.find(FileEntity, {\n        where: { id: In(fileIds) },\n      });\n      if (files.length === 0) {\n        throw new RpcException({\n          code: HttpStatus.NOT_FOUND,\n          message: '未找到文件',\n        });\n      }\n      for (const file of files) {\n        if (file.createdBy !== userId) {\n          throw new RpcException({\n            code: HttpStatus.FORBIDDEN,\n            message: '无权删除他人文件',\n          });\n        }\n      }\n      // 检查是否有引用该文件\n      const fileMd5s = files.map((file) => file.fileMd5);\n      const referenceCount = await queryRunner.manager.count(FileEntity, {\n        where: { fileMd5: In(fileMd5s) },\n      });\n      const filesToDelete = files.filter((file) => {\n        const count = referenceCount[file.fileMd5];\n        return count === 0;\n      });\n      // 删除文件\n      const deletionPromises = filesToDelete.map((file) =>\n        this.fileOperationService.deleteFile(file.filePath),\n      );\n      await Promise.all(deletionPromises);\n      // 删除文件元数据\n      await queryRunner.manager.delete(FileEntity, fileIds);\n      await queryRunner.commitTransaction();\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  /**\n   * 获取文件使用量统计\n   * @param userId\n   * @returns\n   */\n  async getFilesStatisticUsage(userId: number) {\n    const computeFileSizeByType = async (\n      createdBy: number,\n      fileTypes: string[],\n    ) => {\n      const queryBuilder = this.fileRepository\n        .createQueryBuilder('file')\n        .select([\n          'SUM(file.fileSize) AS used',\n          'MAX(file.updatedAt) AS last_updated',\n        ])\n        .where('file.createdBy = :createdBy', { createdBy });\n\n      if (fileTypes.length > 0) {\n        queryBuilder.andWhere('file.fileType IN (:...fileTypes)', {\n          fileTypes,\n        });\n      }\n      return queryBuilder.getRawOne();\n    };\n\n    const imageTypes = getFileType('image');\n    const videoTypes = getFileType('video');\n    const appTypes = getFileType('app');\n    const audioTypes = getFileType('audio');\n    const docTypes = getFileType('application');\n    const otherTypes = getFileType('other');\n\n    try {\n      const [total, image, video, app, audio, docs, other] = await Promise.all([\n        computeFileSizeByType(userId, []),\n        computeFileSizeByType(userId, imageTypes),\n        computeFileSizeByType(userId, videoTypes),\n        computeFileSizeByType(userId, appTypes),\n        computeFileSizeByType(userId, audioTypes),\n        computeFileSizeByType(userId, docTypes),\n        computeFileSizeByType(userId, otherTypes),\n      ]);\n\n      return {\n        success: true,\n        result: {\n          total: total || { used: 0, last_updated: null },\n          image: image || { used: 0, last_updated: null },\n          video: video || { used: 0, last_updated: null },\n          app: app || { used: 0, last_updated: null },\n          audio: audio || { used: 0, last_updated: null },\n          docs: docs || { used: 0, last_updated: null },\n          other: other || { used: 0, last_updated: null },\n        },\n      };\n    } catch (error) {\n      throw new RpcException('获取文件空间信息失败: ' + error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FileSizeValidationPipe.html': {
      url: 'injectables/FileSizeValidationPipe.html',
      title: 'injectable - FileSizeValidationPipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSizeValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/pipe/file-size.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxSize: string)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/file/pipe/file-size.pipe.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxSize\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/pipe/file-size.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Express.Multer.File\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { parseSize } from '@shared/utils';\nimport { BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { unlinkSync } from 'fs';\n\n@Injectable()\nexport class FileSizeValidationPipe implements PipeTransform {\n  constructor(private readonly maxSize: string) {}\n\n  transform(file: Express.Multer.File) {\n    // 解析传入的 maxSize 字符串，转换为字节数\n    let parsedSize: number;\n    try {\n      parsedSize = parseSize(this.maxSize);\n    } catch (error) {\n      throw new BadRequestException(`无效的文件大小限制: ${this.maxSize}`);\n    }\n\n    if (!file) {\n      throw new BadRequestException('未找到上传的文件');\n    }\n    // 判断文件大小是否超出限制\n    if (file.size > parsedSize) {\n      // 删除文件\n      if (file.path) {\n        try {\n          unlinkSync(file.path); // 立即删除文件\n        } catch (error) {\n          console.error('文件删除失败:', error);\n        }\n      }\n\n      throw new BadRequestException(`单次上传数据大小不能超过 ${this.maxSize}`);\n    }\n    return file;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FileTypeValidationPipe.html': {
      url: 'injectables/FileTypeValidationPipe.html',
      title: 'injectable - FileTypeValidationPipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileTypeValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/pipe/file-type.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allowedTypes: MIME_TYPE[])\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/file/pipe/file-type.pipe.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowedTypes\n                                                  \n                                                        \n                                                                        MIME_TYPE[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/pipe/file-type.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Express.Multer.File\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MIME_TYPE } from '@shared/enum/mime.enum';\nimport { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class FileTypeValidationPipe implements PipeTransform {\n  constructor(private readonly allowedTypes: MIME_TYPE[]) {}\n\n  transform(file: Express.Multer.File) {\n    // 检查文件的 MIME 类型是否在允许的类型中\n    if (!this.allowedTypes.includes(file.mimetype as any)) {\n      throw new BadRequestException(\n        `仅支持以下格式的图片: ${this.allowedTypes.join(', ')}`,\n      );\n    }\n    return file;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/FilesGuard.html': {
      url: 'guards/FilesGuard.html',
      title: 'guard - FilesGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FilesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api-gateway/src/modules/file/guards/files.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(fileClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/file/guards/files.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/guards/files.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { File as FileEntity } from '@app/database/entities';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { FILE_SERVICE_NAME } from 'config/microservice.config';\nimport { Request } from 'express';\nimport { firstValueFrom } from 'rxjs';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      filesMeta: FileEntity[];\n    }\n  }\n}\n\n@Injectable()\nexport class FilesGuard implements CanActivate {\n  constructor(\n    @Inject(FILE_SERVICE_NAME) private readonly fileClient: ClientProxy,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileIds = request.body.fileIds;\n    const userId = request.user?.userId;\n\n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      throw new BadRequestException('非法参数');\n    }\n\n    // 远程调用 file-service 获取多个文件信息\n    const { result: files } = await firstValueFrom(\n      this.fileClient.send('file.findByIds', fileIds),\n    );\n\n    if (!files || files.length === 0) {\n      throw new BadRequestException('文件不存在');\n    }\n\n    const filesWithAccess: FileEntity[] = [];\n\n    for (const file of files) {\n      if (\n        file.access === 'public' ||\n        (file.access === 'private' && userId === file.createdBy)\n      ) {\n        filesWithAccess.push(file);\n      } else {\n        throw new ForbiddenException('您无权操作.');\n      }\n    }\n\n    request.filesMeta = filesWithAccess;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/HttpExceptionFilter.html': {
      url: 'classes/HttpExceptionFilter.html',
      title: 'class - HttpExceptionFilter',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/common/src/filters/http-exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n    const responseBody = exception.getResponse() as any;\n\n    // 可以通过传递的错误对象设置不同的 code 和 message\n    const code = responseBody.code || status; // 如果没有自定义 code，就使用 HTTP 状态码\n    const message = responseBody.message || 'An error occurred';\n\n    response.status(status).json({\n      code, // 错误代码（可以根据需要自定义）\n      data: null, // 错误时数据为 null\n      message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ImageRequest.html': {
      url: 'classes/ImageRequest.html',
      title: 'class - ImageRequest',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/image-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image_data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        image_data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/image-request.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImageRequest {\n  image_data: Buffer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/JwtStrategy.html': {
      url: 'injectables/JwtStrategy.html',
      title: 'injectable - JwtStrategy',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/auth/auth.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: UserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserPayload } from '@common/guards/auth.guard';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigEnum } from '@shared/enum/config.enum';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(protected configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(ConfigEnum.SECRET),\n    });\n  }\n\n  async validate(payload: UserPayload) {\n    return {\n      userId: payload.userId,\n      username: payload.username,\n      roles: payload.roles,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/KnowledgeController.html': {
      url: 'controllers/KnowledgeController.html',
      title: 'controller - KnowledgeController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  KnowledgeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/knowledge/knowledge.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                knowledge\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                knowledgeCreate\n                            \n                            \n                                    \n                                    \n                                    Async\n                                knowledgeDelete\n                            \n                            \n                                    \n                                    Async\n                                knowledgeDetailGet\n                            \n                            \n                                    \n                                    Async\n                                knowledgeGet\n                            \n                            \n                                    \n                                    Async\n                                knowledgeListGet\n                            \n                            \n                                    \n                                    Async\n                                knowledgeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        knowledgeCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeCreate(dto: CreatePlantDiseaseKnowledgeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        knowledgeDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeDelete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id(\\d+)')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        knowledgeDetailGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeDetailGet(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        knowledgeGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        knowledgeListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeListGet(page: number, pageSize: number, category?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        knowledgeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeUpdate(id: number, dto: UpdatePlantDiseaseKnowledgeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@common/decorator/roles.decorator';\nimport { Role } from '@shared/enum/role.enum';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreatePlantDiseaseKnowledgeDto } from './dto/create-knowledge.dto';\nimport { UpdatePlantDiseaseKnowledgeDto } from './dto/update-knowledge.dto';\nimport { KnowledgeService } from './knowledge.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('病害知识库管理')\n@Controller('knowledge')\n@Roles(Role.Admin, Role.Expert)\n@UseGuards(AuthGuard, RolesGuard)\nexport class KnowledgeController {\n  constructor(private readonly KnowledgeService: KnowledgeService) {}\n\n  // 创建病害知识记录\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async knowledgeCreate(@Body() dto: CreatePlantDiseaseKnowledgeDto) {\n    await this.KnowledgeService.create(dto);\n    return formatResponse(201, null, '病害知识记录创建成功');\n  }\n\n  // 获取所有病害知识记录\n  @Get()\n  async knowledgeGet() {\n    const knowledge = await this.KnowledgeService.knowledgeGet();\n    return formatResponse(200, knowledge, '病害知识记录获取成功');\n  }\n\n  // 获取所有病害知识记录分页\n  @Get('list')\n  async knowledgeListGet(\n    @Query('page', ParseIntPipe) page: number = 1,\n    @Query('pageSize', ParseIntPipe) pageSize: number = 10,\n    @Query('category') category?: string,\n  ) {\n    const [list, total] = await this.KnowledgeService.knowledgeListGet(\n      page,\n      pageSize,\n      { category },\n    );\n    return formatResponse(\n      200,\n      {\n        list,\n        page,\n        pageSize,\n        total,\n      },\n      '病害知识列表获取成功',\n    );\n  }\n\n  // 获取单个病害知识记录\n  @Get(':id(\\d+)')\n  async knowledgeDetailGet(@Param('id') id: number) {\n    const knowledge = await this.KnowledgeService.findById(id);\n    return formatResponse(200, knowledge, '病害知识记录获取成功');\n  }\n\n  // 更新病害知识记录\n  @Put(':id(\\d+)')\n  async knowledgeUpdate(\n    @Param('id') id: number,\n    @Body() dto: UpdatePlantDiseaseKnowledgeDto,\n  ) {\n    await this.KnowledgeService.update(id, dto);\n    return formatResponse(200, null, '病害知识记录更新成功');\n  }\n\n  // 删除病害知识记录\n  @Delete(':id(\\d+)')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async knowledgeDelete(@Param('id') id: number) {\n    await this.KnowledgeService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/KnowledgeModule.html': {
      url: 'modules/KnowledgeModule.html',
      title: 'module - KnowledgeModule',
      body: "\n                   \n\n\n\n\n    Modules\n    KnowledgeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KnowledgeModule\n\n\n\ncluster_KnowledgeModule_providers\n\n\n\n\nKnowledgeService\n\nKnowledgeService\n\n\n\nKnowledgeModule\n\nKnowledgeModule\n\nKnowledgeModule -->\n\nKnowledgeService->KnowledgeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/knowledge/knowledge.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KnowledgeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KnowledgeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { KnowledgeController } from './knowledge.controller';\nimport { PlantDiseaseKnowledge } from './knowledge.entity';\nimport { KnowledgeService } from './knowledge.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([PlantDiseaseKnowledge])],\n  controllers: [KnowledgeController],\n  providers: [KnowledgeService],\n})\nexport class KnowledgeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/KnowledgeService.html': {
      url: 'injectables/KnowledgeService.html',
      title: 'injectable - KnowledgeService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KnowledgeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/knowledge/knowledge.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                knowledgeGet\n                            \n                            \n                                    Async\n                                knowledgeListGet\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(knowledgeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        knowledgeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreatePlantDiseaseKnowledgeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeGet()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        knowledgeListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    knowledgeListGet(page: number, pageSize: number, filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdatePlantDiseaseKnowledgeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/knowledge/knowledge.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdatePlantDiseaseKnowledgeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreatePlantDiseaseKnowledgeDto } from './dto/create-knowledge.dto';\nimport { UpdatePlantDiseaseKnowledgeDto } from './dto/update-knowledge.dto';\nimport { PlantDiseaseKnowledge } from './knowledge.entity';\nimport { formatResponse } from '@shared/helpers/response.helper';\n\n@Injectable()\nexport class KnowledgeService {\n  constructor(\n    @InjectRepository(PlantDiseaseKnowledge)\n    private readonly knowledgeRepository: Repository,\n  ) {}\n\n  // 创建病害知识记录\n  async create(dto: CreatePlantDiseaseKnowledgeDto) {\n    const knowledge = this.knowledgeRepository.create(dto);\n    return this.knowledgeRepository.save(knowledge);\n  }\n\n  // 获取所有病害知识记录\n  findAll() {\n    return this.knowledgeRepository.find();\n  }\n\n  // 获取所有病害知识记录\n  async knowledgeListGet(\n    page: number = 1,\n    pageSize: number = 10,\n    filters: {\n      category?: string;\n    },\n  ) {\n    const queryBuilder = this.knowledgeRepository.createQueryBuilder(\n      'plant_disease_knowledge',\n    );\n    if (filters.category) {\n      queryBuilder.where('knowledge.category = :category', {\n        category: filters.category,\n      });\n    }\n    return await queryBuilder\n      .skip((page - 1) * pageSize)\n      .take(pageSize)\n      .getManyAndCount();\n  }\n\n  async knowledgeGet() {\n    return await this.knowledgeRepository.find();\n  }\n\n  // 获取单个病害知识记录\n  async findById(id: number) {\n    const knowledge = await this.knowledgeRepository.findOne({ where: { id } });\n    if (!knowledge) {\n      throw new NotFoundException('病害知识记录不存在');\n    }\n    return knowledge;\n  }\n\n  // 更新病害知识记录\n  async update(id: number, dto: UpdatePlantDiseaseKnowledgeDto) {\n    const knowledge = await this.knowledgeRepository.findOne({ where: { id } });\n    if (!knowledge) {\n      return null;\n    }\n    const updatedKnowledge = this.knowledgeRepository.merge(knowledge, dto);\n    return this.knowledgeRepository.save(updatedKnowledge);\n  }\n\n  // 删除病害知识记录\n  remove(id: number) {\n    return this.knowledgeRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/LoginDto.html': {
      url: 'classes/LoginDto.html',
      title: 'class - LoginDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '登陆必须为字符串类型！'})@IsNotEmpty({message: '登陆输入不能为空！'})@ValidateIf(o => )@IsEmail({}, {message: '请输入有效的邮箱地址！'})@ValidateIf(o => )@Matches(/^[a-zA-Z0-9_-]{3,16}$/, {message: '用户名必须由3-16个字母、数字、下划线或破折号组成！'})@ApiProperty({description: '用户名/邮箱', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/login.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '密码必须为字符串类型！'})@IsNotEmpty({message: '密码输入不能为空！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/login.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  ValidateIf,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsString({ message: '登陆必须为字符串类型！' })\n  @IsNotEmpty({ message: '登陆输入不能为空！' })\n  @ValidateIf((o) => /^\\S+@\\S+\\.\\S+$/.test(o.login)) // 如果是邮箱格式，执行邮箱验证\n  @IsEmail({}, { message: '请输入有效的邮箱地址！' }) // 邮箱格式验证\n  @ValidateIf((o) => !/^\\S+@\\S+\\.\\S+$/.test(o.login)) // 如果不是邮箱格式，认为它是用户名\n  @Matches(/^[a-zA-Z0-9_-]{3,16}$/, {\n    message: '用户名必须由3-16个字母、数字、下划线或破折号组成！',\n  })\n  @ApiProperty({\n    description: '用户名/邮箱',\n    example: 'admin',\n  })\n  login: string;\n\n  @IsString({ message: '密码必须为字符串类型！' })\n  @IsNotEmpty({ message: '密码输入不能为空！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/LoginDto-1.html': {
      url: 'classes/LoginDto-1.html',
      title: 'class - LoginDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '登陆必须为字符串类型！'})@IsNotEmpty({message: '登陆输入不能为空！'})@ValidateIf(o => )@IsEmail({}, {message: '请输入有效的邮箱地址！'})@ValidateIf(o => )@Matches(/^[a-zA-Z0-9_-]{3,16}$/, {message: '用户名必须由3-16个字母、数字、下划线或破折号组成！'})@ApiProperty({description: '用户名/邮箱', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/auth/dto/login.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '密码必须为字符串类型！'})@IsNotEmpty({message: '密码输入不能为空！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/auth/dto/login.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  ValidateIf,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsString({ message: '登陆必须为字符串类型！' })\n  @IsNotEmpty({ message: '登陆输入不能为空！' })\n  @ValidateIf((o) => /^\\S+@\\S+\\.\\S+$/.test(o.login)) // 如果是邮箱格式，执行邮箱验证\n  @IsEmail({}, { message: '请输入有效的邮箱地址！' }) // 邮箱格式验证\n  @ValidateIf((o) => !/^\\S+@\\S+\\.\\S+$/.test(o.login)) // 如果不是邮箱格式，认为它是用户名\n  @Matches(/^[a-zA-Z0-9_-]{3,16}$/, {\n    message: '用户名必须由3-16个字母、数字、下划线或破折号组成！',\n  })\n  @ApiProperty({\n    description: '用户名/邮箱',\n    example: 'admin',\n  })\n  login: string;\n\n  @IsString({ message: '密码必须为字符串类型！' })\n  @IsNotEmpty({ message: '密码输入不能为空！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/MailModule.html': {
      url: 'modules/MailModule.html',
      title: 'module - MailModule',
      body: "\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_imports\n\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailModule->MailModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/mail/src/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true, // 让配置全局可用\n      envFilePath: [\n        '.env',\n        `.env.${process.env.NODE_ENV || 'development'}.local`,\n      ],\n    }),\n    MailModule,\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MailService.html': {
      url: 'injectables/MailService.html',
      title: 'injectable - MailService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/mail/src/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/mail/src/mail.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(to: string, subject: string, text: string, html?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/mail/src/mail.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                html\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     nodemailer.Transporter\n\n                    \n                \n                    \n                        \n                                Defined in libs/mail/src/mail.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ConfigEnum } from '@shared/enum/config.enum';\nimport * as nodemailer from 'nodemailer';\n\n@Injectable()\nexport class MailService {\n  private transporter: nodemailer.Transporter;\n\n  constructor(private readonly configService: ConfigService) {\n    this.transporter = nodemailer.createTransport({\n      host: this.configService.get(\n        ConfigEnum.MAIL_HOST,\n        'smtp.example.com',\n      ),\n      port: this.configService.get(ConfigEnum.MAIL_PORT, 465),\n      secure: this.configService.get(ConfigEnum.MAIL_SECURE, true),\n      auth: {\n        user: this.configService.get(ConfigEnum.MAIL_USER),\n        pass: this.configService.get(ConfigEnum.MAIL_PASS),\n      },\n    });\n  }\n\n  async sendMail(to: string, subject: string, text: string, html?: string) {\n    try {\n      const info = await this.transporter.sendMail({\n        from: `\"${this.configService.get(ConfigEnum.MAIL_FROM)}\" (ConfigEnum.MAIL_USER)}>`,\n        to,\n        subject,\n        text,\n        html,\n      });\n      console.log('Message sent: %s', info.messageId);\n      return { code: 200, message: '邮件发送成功', data: info.messageId };\n    } catch (error) {\n      console.error('邮件发送失败:', error);\n      return { code: 500, message: '邮件发送失败', data: error };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/Menu.html': {
      url: 'entities/Menu.html',
      title: 'entity - Menu',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/menu/menu.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                isLink\n                            \n                            \n                                    \n                                    \n                                parent\n                            \n                            \n                                    \n                                    Optional\n                                parentId\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                sort\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, menu => menu.parent)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Menu\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, menu => menu.children)@JoinColumn({name: 'parentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/menu/menu.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\n@Entity('menu')\nexport class Menu {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  icon: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  title: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  path: string;\n\n  @Column({ type: 'int', default: 0 })\n  sort: number;\n\n  @Column({ nullable: true })\n  parentId?: number;\n\n  @Column({ type: 'varchar', nullable: true })\n  isLink?: string;\n\n  // 定义父级菜单（OneToMany）\n  @ManyToOne(() => Menu, (menu) => menu.children)\n  @JoinColumn({ name: 'parentId' })\n  parent: Menu;\n\n  // 定义子级菜单（OneToMany）\n  @OneToMany(() => Menu, (menu) => menu.parent)\n  children: Menu[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/MenuController.html': {
      url: 'controllers/MenuController.html',
      title: 'controller - MenuController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/menu/menu.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                menu\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getRoutes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(menuData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/menu/menu.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/menu/menu.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/menu/menu.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoutes(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('routes')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/menu/menu.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/menu/menu.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, menuData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/menu/menu.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                menuData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@common/decorator/roles.decorator';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Role } from '@shared/enum/role.enum';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport { AUTH_SERVICE_NAME } from 'config/microservice.config';\nimport { defaultIfEmpty, lastValueFrom } from 'rxjs';\n\n@ApiTags('菜单管理')\n@UseGuards(AuthGuard)\n@Controller('menu')\nexport class MenuController {\n  constructor(\n    @Inject(AUTH_SERVICE_NAME) private readonly authClient: ClientProxy,\n  ) {}\n\n  // 获取个人路由权限\n  @Get('routes')\n  async getRoutes(@Req() req) {\n    const userId = req.user.id;\n    const routes = await lastValueFrom(\n      this.authClient\n        .send({ cmd: 'menu.getRoutes' }, { userId })\n        .pipe(defaultIfEmpty([])),\n    );\n    return formatResponse(200, routes, '获取个人路由权限成功');\n  }\n\n  // 获取所有菜单\n  @Get()\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findAll() {\n    const list = await lastValueFrom(\n      this.authClient\n        .send({ cmd: 'menu.findAll' }, {})\n        .pipe(defaultIfEmpty([])),\n    );\n    return formatResponse(200, list, '获取所有菜单成功');\n  }\n\n  // 获取单个菜单\n  @Get(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findOne(@Param('id') id: number) {\n    const menu = await lastValueFrom(\n      this.authClient\n        .send({ cmd: 'menu.findOne' }, { id })\n        .pipe(defaultIfEmpty({})),\n    );\n    return formatResponse(200, menu, '获取单个菜单成功');\n  }\n\n  // 创建新菜单\n  @Post()\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.CREATED)\n  async create(@Body() menuData: any) {\n    await lastValueFrom(\n      this.authClient\n        .send({ cmd: 'menu.create' }, { menuData })\n        .pipe(defaultIfEmpty({})),\n    );\n    return formatResponse(201, {}, '创建成功');\n  }\n\n  // 更新菜单\n  @Put(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async update(@Param('id') id: number, @Body() menuData: any) {\n    await lastValueFrom(\n      this.authClient\n        .send({ cmd: 'menu.update' }, { menuData: { id, ...menuData } })\n        .pipe(defaultIfEmpty({})),\n    );\n    return formatResponse(200, {}, '更新菜单成功');\n  }\n\n  // 删除菜单\n  @Delete(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async remove(@Param('id') id: number) {\n    await lastValueFrom(\n      this.authClient\n        .send({ cmd: 'menu.remove' }, { id })\n        .pipe(defaultIfEmpty({})),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/MenuController-1.html': {
      url: 'controllers/MenuController-1.html',
      title: 'controller - MenuController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/menu/menu.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                menu\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getRoutes\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'menu.create'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'menu.findAll'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'menu.findOne'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoutes(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'menu.getRoutes'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'menu.remove'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'menu.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { TypeormFilter } from '@common/filters/typeorm.filter';\nimport { Controller, UseFilters } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { Menu } from './menu.entity';\nimport { MenuService } from './menu.service';\n\n@Controller('menu')\n@UseFilters(TypeormFilter)\nexport class MenuController {\n  constructor(private readonly menuService: MenuService) {}\n\n  // 获取个人路由权限\n  @MessagePattern({ cmd: 'menu.getRoutes' })\n  async getRoutes(@Payload() data: { userId: number }) {\n    return this.menuService.findAuthRoutes(data.userId);\n  }\n\n  // 获取所有菜单\n  @MessagePattern({ cmd: 'menu.findAll' })\n  async findAll() {\n    return this.menuService.findAll();\n  }\n\n  // 获取单个菜单\n  @MessagePattern({ cmd: 'menu.findOne' })\n  async findOne(@Payload() data: { id: number }) {\n    return this.menuService.findOne(data.id);\n  }\n\n  // 创建新菜单\n  @MessagePattern({ cmd: 'menu.create' })\n  async create(@Payload() data: { menuData: Partial }) {\n    return this.menuService.create(data.menuData);\n  }\n\n  // 更新菜单\n  @MessagePattern({ cmd: 'menu.update' })\n  async update(@Payload() data: { menuData: Partial & { id: number } }) {\n    return this.menuService.update(data.menuData.id, data.menuData);\n  }\n\n  // 删除菜单\n  @MessagePattern({ cmd: 'menu.remove' })\n  async remove(@Payload() data: { id: number }) {\n    return this.menuService.remove(data.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/MenuModule.html': {
      url: 'modules/MenuModule.html',
      title: 'module - MenuModule',
      body: "\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/menu/menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport {\n  AUTH_SERVICE_NAME,\n  AUTH_SERVICE_TCP_PORT,\n} from 'config/microservice.config';\nimport { MenuController } from './menu.controller';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: AUTH_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: AUTH_SERVICE_TCP_PORT },\n      },\n    ]),\n  ],\n  controllers: [MenuController],\n})\nexport class MenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MenuService.html': {
      url: 'injectables/MenuService.html',
      title: 'injectable - MenuService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/menu/menu.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAuthRoutes\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/auth-service/src/modules/menu/menu.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(menuData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAuthRoutes\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAuthRoutes(roleId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, menuData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth-service/src/modules/menu/menu.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                menuData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Menu } from './menu.entity';\n\n@Injectable()\nexport class MenuService {\n  constructor(\n    @InjectRepository(Menu)\n    private readonly menuRepository: Repository,\n  ) {}\n\n  async findAuthRoutes(roleId: number) {\n    const menus = await this.menuRepository.find({\n      relations: ['parent', 'children'],\n      // TODO: 这里可以根据实际情况加入角色ID过滤\n      // where: {\n      //   roleId: roleId,\n      // },\n      order: { id: 'ASC' }, // 按照ID升序排列\n    });\n\n    // 按照 sort 属性对菜单进行排序\n    menus.sort((a, b) => a.sort - b.sort); // 升序排序，如果是降序则改为 b.sort - a.sort\n\n    // 构建菜单树\n    const buildMenuTree = (parentId: number | null): any[] => {\n      return menus\n        .filter((menu) => menu.parentId === parentId)\n        .sort((a, b) => a.sort - b.sort) // 对每一层级的菜单进行排序\n        .map((menu) => ({\n          icon: menu.icon,\n          title: menu.title,\n          path: menu.path,\n          isLink: menu.isLink,\n          children: buildMenuTree(menu.id), // 递归构建子菜单\n        }));\n    };\n\n    // 返回顶层菜单\n    return buildMenuTree(null);\n  }\n\n  // 获取所有菜单\n  async findAll(): Promise {\n    return this.menuRepository.find({\n      relations: ['parent', 'children'],\n    });\n  }\n\n  // 根据ID获取单个菜单\n  async findOne(id: number): Promise {\n    return this.menuRepository.findOne({\n      where: { id },\n      relations: ['parent', 'children'],\n    });\n  }\n\n  // 创建新菜单\n  async create(menuData: Partial): Promise {\n    const menu = this.menuRepository.create(menuData);\n    return this.menuRepository.save(menu);\n  }\n\n  // 更新菜单\n  async update(id: number, menuData: Partial) {\n    await this.menuRepository.update(id, menuData);\n    return this.findOne(id);\n  }\n\n  // 删除菜单\n  async remove(id: number): Promise {\n    await this.menuRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/OtherExceptionsFilter.html': {
      url: 'classes/OtherExceptionsFilter.html',
      title: 'class - OtherExceptionsFilter',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OtherExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/filters/other-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/common/src/filters/other-exception.filter.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { Response } from 'express';\n\n@Catch()\nexport class OtherExceptionsFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    if (exception instanceof HttpException) {\n      throw exception;\n    }\n\n    if (exception instanceof RpcException) {\n      throw exception;\n    }\n\n    // 如果是处理好的 RpcException\n    if (exception?.code || exception?.message || exception?.data) {\n      const ctx = host.switchToHttp();\n      const response = ctx.getResponse();\n\n      let code = exception.code || HttpStatus.INTERNAL_SERVER_ERROR;\n      let message = exception.message || 'Internal server error';\n      let data = exception.data || null;\n\n      // 返回统一的 JSON 格式\n      response.status(code).json({ code, message, data });\n      return;\n    } else {\n      const ctx = host.switchToHttp();\n      const response = ctx.getResponse();\n\n      let code = HttpStatus.INTERNAL_SERVER_ERROR;\n      let message =\n        exception instanceof Error\n          ? exception.message\n          : 'Internal server error';\n      let data = null;\n\n      // 返回统一的 JSON 格式\n      response.status(code).json({ code, message, data });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ParseFileIdsPipe.html': {
      url: 'injectables/ParseFileIdsPipe.html',
      title: 'injectable - ParseFileIdsPipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseFileIdsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/pipe/delete.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/pipe/delete.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  PipeTransform,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\n\n@Injectable()\nexport class ParseFileIdsPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    // 如果没有传递参数，抛出异常\n    if (!value) {\n      throw new BadRequestException('文件 ID 不能为空');\n    }\n\n    // 如果值是字符串，尝试分割并转换为数字数组\n    if (typeof value === 'string') {\n      const fileIds = value.split(',').map((id) => {\n        const numberId = Number(id);\n        if (isNaN(numberId)) {\n          throw new BadRequestException(`无效的文件 ID: ${id}`);\n        }\n        return numberId;\n      });\n\n      return fileIds;\n    }\n\n    // 如果值已经是数组，直接返回数组\n    if (Array.isArray(value)) {\n      const fileIds = value.map((id) => {\n        const numberId = Number(id);\n        if (isNaN(numberId)) {\n          throw new BadRequestException(`无效的文件 ID: ${id}`);\n        }\n        return numberId;\n      });\n\n      return fileIds;\n    }\n\n    // 如果值既不是字符串也不是数组，抛出异常\n    throw new BadRequestException('文件 ID 参数格式错误');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ParseFileTypePipe.html': {
      url: 'injectables/ParseFileTypePipe.html',
      title: 'injectable - ParseFileTypePipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseFileTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/pipe/type.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/file/pipe/type.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\n\n@Injectable()\nexport class ParseFileTypePipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    // 如果值是 undefined 或 null，直接返回\n    if (value === undefined || value === null || value === '') {\n      return value;\n    }\n\n    // 如果值是字符串并且包含逗号，尝试将其分割为字符串数组\n    if (typeof value === 'string') {\n      // 去除多余的空格后再拆分\n      const result = value\n        .split(',')\n        .map((item) => item.trim())\n        .filter((item) => item);\n\n      // 如果分割后的结果为空，抛出错误\n      if (result.length === 0) {\n        throw new BadRequestException('文件类型不能为空');\n      }\n\n      return result;\n    }\n\n    // 如果值已经是数组，确保数组元素是字符串类型\n    if (Array.isArray(value)) {\n      // 确保数组中的每个元素都是字符串\n      const result = value.map((item) => {\n        if (typeof item !== 'string') {\n          throw new BadRequestException('文件类型数组中的每个元素必须是字符串');\n        }\n        return item.trim();\n      });\n\n      return result;\n    }\n\n    // 如果值既不是字符串也不是数组，抛出错误\n    throw new BadRequestException('文件类型参数格式不正确');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ParseStringDatePipe.html': {
      url: 'injectables/ParseStringDatePipe.html',
      title: 'injectable - ParseStringDatePipe',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseStringDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/pipe/string-date.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/common/src/pipe/string-date.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { isDate } from 'class-validator'; // 可使用 class-validator 库检查日期格式\n\n@Injectable()\nexport class ParseStringDatePipe implements PipeTransform {\n  transform(value: string) {\n    if (value && !isDate(new Date(value))) {\n      throw new BadRequestException('非法日期格式');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/Plant.html': {
      url: 'entities/Plant.html',
      title: 'entity - Plant',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  Plant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/plant.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                supportModels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/plant.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/plant.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        supportModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AIModel[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, model => model.supportPlants)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/plant.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { AIModel } from './ai-model.entity';\nimport { BaseEntity } from './base.entity';\n\n@Entity('plants')\nexport class Plant extends BaseEntity {\n  @Column({ type: 'varchar', length: 255 })\n  name: string; // 模型名称\n\n  @Column({ type: 'varchar', length: 255 })\n  description: string; // 模型描述\n\n  @ManyToMany(() => AIModel, (model) => model.supportPlants)\n  supportModels: AIModel[] | null; // 支持的模型\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/PlantController.html': {
      url: 'controllers/PlantController.html',
      title: 'controller - PlantController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  PlantController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/plant/plant.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                plant\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPlantDto: CreatePlantDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlantDto\n                                            \n                                                            CreatePlantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePlantDto: UpdatePlantDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id(\\d+)')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePlantDto\n                                            \n                                                            UpdatePlantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreatePlantDto } from './dto/create-plant.dto';\nimport { UpdatePlantDto } from './dto/update-plant.dto';\nimport { PlantService } from './plant.service';\n\n@ApiTags('植物管理')\n@Controller('plant')\nexport class PlantController {\n  constructor(private readonly plantService: PlantService) {}\n\n  @Post()\n  create(@Body() createPlantDto: CreatePlantDto) {\n    return this.plantService.create(createPlantDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.plantService.findAll();\n  }\n\n  @Get(':id(\\d+)')\n  findOne(@Param('id') id: string) {\n    return this.plantService.findOne(+id);\n  }\n\n  @Patch(':id(\\d+)')\n  update(@Param('id') id: string, @Body() updatePlantDto: UpdatePlantDto) {\n    return this.plantService.update(+id, updatePlantDto);\n  }\n\n  @Delete(':id(\\d+)')\n  remove(@Param('id') id: string) {\n    return this.plantService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/PlantDiseaseKnowledge.html': {
      url: 'entities/PlantDiseaseKnowledge.html',
      title: 'entity - PlantDiseaseKnowledge',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  PlantDiseaseKnowledge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/knowledge/knowledge.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                affectedPart\n                            \n                            \n                                    \n                                affectedPlant\n                            \n                            \n                                    \n                                biologicalControl\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                cause\n                            \n                            \n                                    \n                                chemicalControl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                culturalPractices\n                            \n                            \n                                    \n                                diseaseCode\n                            \n                            \n                                    \n                                diseaseCycle\n                            \n                            \n                                    \n                                diseaseName\n                            \n                            \n                                    \n                                diseaseType\n                            \n                            \n                                    \n                                documentUrl\n                            \n                            \n                                    \n                                firstReported\n                            \n                            \n                                    \n                                geographicalArea\n                            \n                            \n                                    \n                                historicalCases\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imageUrl\n                            \n                            \n                                    \n                                preventiveMeasures\n                            \n                            \n                                    \n                                researchSources\n                            \n                            \n                                    \n                                resistantVarieties\n                            \n                            \n                                    \n                                scientificName\n                            \n                            \n                                    \n                                severity\n                            \n                            \n                                    \n                                spreadMethod\n                            \n                            \n                                    \n                                symptoms\n                            \n                            \n                                    \n                                synonyms\n                            \n                            \n                                    \n                                tags\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                videoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affectedPart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '受影响的植物部位'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        affectedPlant\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '受影响的植物种类'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        biologicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '生物防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害分类'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cause\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病因'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chemicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '化学防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, comment: '记录创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        culturalPractices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '文化控制措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true, comment: '病害唯一编码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseCycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害生命周期'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, comment: '病害名称'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diseaseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true, comment: '病害类型'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        documentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '相关文档的 URL 地址'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstReported\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: true, comment: '首次报告时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        geographicalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害地理分布'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historicalCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '历史病例'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害图片的 URL 地址'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preventiveMeasures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '防治措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        researchSources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '研究来源'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resistantVarieties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '抗病品种'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '病害的学名（如果有）'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: true, comment: '病害严重程度'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        spreadMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害传播方式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symptoms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害症状描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        synonyms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害的同义词'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, comment: '病害标签'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP', comment: '记录更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        videoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true, comment: '相关视频的 URL 地址'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/knowledge.entity.ts:115\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('plant_disease_knowledge')\n@Index('diseaseCode', ['diseaseCode'], { unique: true })\nexport class PlantDiseaseKnowledge {\n  @PrimaryGeneratedColumn()\n  id: number; // 唯一标识每条病害记录\n\n  @Column({ type: 'varchar', length: 255, comment: '病害名称' })\n  diseaseName: string; // 病害名称\n\n  @Column({\n    type: 'varchar',\n    length: 100,\n    nullable: true,\n    comment: '病害唯一编码',\n  })\n  diseaseCode: string | null; // 病害唯一编码\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '病害的学名（如果有）',\n  })\n  scientificName: string | null; // 病害的学名（如果有）\n\n  @Column({ type: 'text', nullable: true, comment: '病害的同义词' })\n  synonyms: string | null; // 病害的同义词\n\n  @Column({ type: 'text', nullable: true, comment: '病害症状描述' })\n  symptoms: string | null; // 病害症状描述\n\n  @Column({ type: 'varchar', length: 255, nullable: true, comment: '病因' })\n  cause: string | null; // 病因\n\n  @Column({ type: 'varchar', length: 100, nullable: true, comment: '病害类型' })\n  diseaseType: string | null; // 病害类型\n\n  @Column({ type: 'text', nullable: true, comment: '受影响的植物种类' })\n  affectedPlant: string | null; // 受影响的植物种类\n\n  @Column({ type: 'text', nullable: true, comment: '受影响的植物部位' })\n  affectedPart: string | null; // 受影响的植物部位\n\n  @Column({ type: 'text', nullable: true, comment: '病害生命周期' })\n  diseaseCycle: string | null; // 病害生命周期\n\n  @Column({ type: 'text', nullable: true, comment: '病害传播方式' })\n  spreadMethod: string | null; // 病害传播方式\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '病害地理分布',\n  })\n  geographicalArea: string | null; // 病害地理分布\n\n  @Column({ type: 'date', nullable: true, comment: '首次报告时间' })\n  firstReported: string | null; // 首次报告时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    comment: '记录创建时间',\n  })\n  createdAt: Date; // 记录创建时间\n\n  @Column({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP',\n    onUpdate: 'CURRENT_TIMESTAMP',\n    comment: '记录更新时间',\n  })\n  updatedAt: Date; // 记录更新时间\n\n  @Column({ type: 'text', nullable: true, comment: '防治措施' })\n  preventiveMeasures: string | null; // 防治措施\n\n  @Column({ type: 'text', nullable: true, comment: '化学防治方法' })\n  chemicalControl: string | null; // 化学防治方法\n\n  @Column({ type: 'text', nullable: true, comment: '生物防治方法' })\n  biologicalControl: string | null; // 生物防治方法\n\n  @Column({ type: 'text', nullable: true, comment: '文化控制措施' })\n  culturalPractices: string | null; // 文化控制措施\n\n  @Column({ type: 'text', nullable: true, comment: '抗病品种' })\n  resistantVarieties: string | null; // 抗病品种\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '病害图片的 URL 地址',\n  })\n  imageUrl: string | null; // 病害图片的 URL 地址\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '相关文档的 URL 地址',\n  })\n  documentUrl: string | null; // 相关文档的 URL 地址\n\n  @Column({\n    type: 'varchar',\n    length: 255,\n    nullable: true,\n    comment: '相关视频的 URL 地址',\n  })\n  videoUrl: string | null; // 相关视频的 URL 地址\n\n  @Column({ type: 'varchar', length: 255, nullable: true, comment: '病害分类' })\n  category: string | null; // 病害分类\n\n  @Column({\n    type: 'varchar',\n    length: 100,\n    nullable: true,\n    comment: '病害严重程度',\n  })\n  severity: string | null; // 病害严重程度\n\n  @Column({ type: 'text', nullable: true, comment: '病害标签' })\n  tags: string | null; // 病害标签\n\n  @Column({ type: 'text', nullable: true, comment: '历史病例' })\n  historicalCases: string | null; // 历史病例\n\n  @Column({ type: 'text', nullable: true, comment: '研究来源' })\n  researchSources: string | null; // 研究来源\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/PlantModule.html': {
      url: 'modules/PlantModule.html',
      title: 'module - PlantModule',
      body: "\n                   \n\n\n\n\n    Modules\n    PlantModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlantModule\n\n\n\ncluster_PlantModule_providers\n\n\n\n\nPlantService\n\nPlantService\n\n\n\nPlantModule\n\nPlantModule\n\nPlantModule -->\n\nPlantService->PlantModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/plant/plant.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlantService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlantController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PlantService } from './plant.service';\nimport { PlantController } from './plant.controller';\n\n@Module({\n  controllers: [PlantController],\n  providers: [PlantService],\n})\nexport class PlantModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PlantService.html': {
      url: 'injectables/PlantService.html',
      title: 'injectable - PlantService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlantService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/plant/plant.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPlantDto: CreatePlantDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlantDto\n                                            \n                                                            CreatePlantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePlantDto: UpdatePlantDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/plant/plant.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePlantDto\n                                            \n                                                            UpdatePlantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePlantDto } from './dto/create-plant.dto';\nimport { UpdatePlantDto } from './dto/update-plant.dto';\n\n@Injectable()\nexport class PlantService {\n  create(createPlantDto: CreatePlantDto) {\n    return 'This action adds a new plant';\n  }\n\n  findAll() {\n    return `This action returns all plant`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} plant`;\n  }\n\n  update(id: number, updatePlantDto: UpdatePlantDto) {\n    return `This action updates a #${id} plant`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} plant`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/Profile.html': {
      url: 'entities/Profile.html',
      title: 'entity - Profile',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity('profile')\nexport class Profile {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'tinyint', default: 0 })\n  gender: number;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  avatar: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  name: string | null;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  phone: string | null;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  address: string | null;\n\n  // 个人信息和用户是一对一关系\n  @OneToOne(() => User)\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RedisModule.html': {
      url: 'modules/RedisModule.html',
      title: 'module - RedisModule',
      body: "\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/redis/src/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { RedisService } from './redis.service';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: [\n        '.env',\n        `.env.${process.env.NODE_ENV || 'development'}.local`,\n      ],\n    }),\n  ],\n  providers: [RedisService],\n  exports: [RedisService],\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/RedisService.html': {
      url: 'injectables/RedisService.html',
      title: 'injectable - RedisService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/redis/src/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acquireLock\n                            \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                executeWithLock\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                increment\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                releaseLock\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/redis/src/redis.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        acquireLock\n                        \n                    \n                \n            \n            \n                \n                        \n                    acquireLock(lockKey: string, ttl: number, retryDelay: number, maxRetries: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:83\n                        \n                    \n\n\n            \n                \n                        尝试获取分布式锁\n采用 SET key value NX PX ttl 方式实现，内置重试机制确保尽可能获取锁\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lockKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    锁的键\n\n                                            \n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    锁的有效期（毫秒）\n\n                                            \n                                        \n                                        \n                                                retryDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    100\n                                            \n\n                                            \n                                                    每次重试间隔（毫秒），默认 100ms\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    最大重试次数，默认 10 次\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                成功则返回唯一 token，否则抛出异常\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:59\n                        \n                    \n\n\n            \n                \n                        删除指定的缓存键\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    缓存键\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回被删除的键数量\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        executeWithLock\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeWithLock(lockKey: string, ttl: number, fn: () => void, retryDelay: number, maxRetries: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:131\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        包装带锁操作\n在获取锁后执行回调函数，确保操作的原子性和互斥性\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lockKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    锁的键\n\n                                            \n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    锁的有效期（毫秒）\n\n                                            \n                                        \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    回调函数，返回 Promise\n\n                                            \n                                        \n                                        \n                                                retryDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    100\n                                            \n\n                                            \n                                                    每次重试间隔（毫秒），默认 100ms\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    最大重试次数，默认 10 次\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                回调函数的返回结果\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        获取缓存内容\n通过反序列化还原原始数据\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    缓存键\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回缓存值或 null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        increment\n                        \n                    \n                \n            \n            \n                \n                        \n                    increment(key: string, delta: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:70\n                        \n                    \n\n\n            \n                \n                        对缓存中存储的数字进行自增操作\n利用 Redis 内置的 incrby 命令保证操作的原子性\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    缓存键\n\n                                            \n                                        \n                                        \n                                                delta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    增量，默认为 1\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回自增后的值\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:149\n                        \n                    \n\n\n            \n                \n                        模块销毁时自动关闭 Redis 连接，确保资源得以妥善释放\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseLock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseLock(lockKey: string, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:109\n                        \n                    \n\n\n            \n                \n                        释放分布式锁\n利用 Lua 脚本确保只有持有正确 token 的客户端才能释放锁\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lockKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    锁的键\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    锁的唯一 token\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                是否成功释放锁\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: any, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/redis/src/redis.service.ts:28\n                        \n                    \n\n\n            \n                \n                        设置缓存，支持可选 TTL（单位：秒）\n数据将被 JSON 序列化存储，从而兼容任意类型\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    缓存键\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    缓存值\n\n                                            \n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    可选过期时间（秒）\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in libs/redis/src/redis.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport Redis from 'ioredis';\nimport { v4 as uuidv4 } from 'uuid'; // npm install uuid\nimport { ConfigEnum } from '@shared/enum/config.enum';\n\n@Injectable()\nexport class RedisService implements OnModuleDestroy {\n  private readonly client: Redis;\n\n  constructor(private readonly configService: ConfigService) {\n    const host = this.configService.get(ConfigEnum.REDIS_HOST);\n    const port = this.configService.get(ConfigEnum.REDIS_PORT);\n    this.client = new Redis({\n      host,\n      port,\n      db: 0, // 目标数据库\n    });\n  }\n\n  /**\n   * 设置缓存，支持可选 TTL（单位：秒）\n   * 数据将被 JSON 序列化存储，从而兼容任意类型\n   * @param key 缓存键\n   * @param value 缓存值\n   * @param ttl 可选过期时间（秒）\n   */\n  async set(key: string, value: any, ttl?: number): Promise {\n    const serialized = JSON.stringify(value);\n    if (ttl) {\n      await this.client.set(key, serialized, 'EX', ttl);\n    } else {\n      await this.client.set(key, serialized);\n    }\n  }\n\n  /**\n   * 获取缓存内容\n   * 通过反序列化还原原始数据\n   * @param key 缓存键\n   * @returns 返回缓存值或 null\n   */\n  async get(key: string): Promise {\n    const data = await this.client.get(key);\n    if (!data) return null;\n    try {\n      return JSON.parse(data) as T;\n    } catch (error) {\n      // 如果反序列化失败，则原样返回数据\n      return data as unknown as T;\n    }\n  }\n\n  /**\n   * 删除指定的缓存键\n   * @param key 缓存键\n   * @returns 返回被删除的键数量\n   */\n  async del(key: string): Promise {\n    return await this.client.del(key);\n  }\n\n  /**\n   * 对缓存中存储的数字进行自增操作\n   * 利用 Redis 内置的 incrby 命令保证操作的原子性\n   * @param key 缓存键\n   * @param delta 增量，默认为 1\n   * @returns 返回自增后的值\n   */\n  async increment(key: string, delta: number = 1): Promise {\n    return await this.client.incrby(key, delta);\n  }\n\n  /**\n   * 尝试获取分布式锁\n   * 采用 SET key value NX PX ttl 方式实现，内置重试机制确保尽可能获取锁\n   * @param lockKey 锁的键\n   * @param ttl 锁的有效期（毫秒）\n   * @param retryDelay 每次重试间隔（毫秒），默认 100ms\n   * @param maxRetries 最大重试次数，默认 10 次\n   * @returns 成功则返回唯一 token，否则抛出异常\n   */\n  async acquireLock(\n    lockKey: string,\n    ttl: number,\n    retryDelay = 100,\n    maxRetries = 10,\n  ): Promise {\n    const token = uuidv4();\n    let retries = 0;\n    while (retries  setTimeout(resolve, retryDelay));\n      retries++;\n    }\n    throw new Error(`无法获取锁：${lockKey}`);\n  }\n\n  /**\n   * 释放分布式锁\n   * 利用 Lua 脚本确保只有持有正确 token 的客户端才能释放锁\n   * @param lockKey 锁的键\n   * @param token 锁的唯一 token\n   * @returns 是否成功释放锁\n   */\n  async releaseLock(lockKey: string, token: string): Promise {\n    const script = `\n      if redis.call(\"get\", KEYS[1]) == ARGV[1] then \n        return redis.call(\"del\", KEYS[1]) \n      else \n        return 0 \n      end\n    `;\n    const result = await this.client.eval(script, 1, lockKey, token);\n    return result === 1;\n  }\n\n  /**\n   * 包装带锁操作\n   * 在获取锁后执行回调函数，确保操作的原子性和互斥性\n   * @param lockKey 锁的键\n   * @param ttl 锁的有效期（毫秒）\n   * @param fn 回调函数，返回 Promise\n   * @param retryDelay 每次重试间隔（毫秒），默认 100ms\n   * @param maxRetries 最大重试次数，默认 10 次\n   * @returns 回调函数的返回结果\n   */\n  async executeWithLock(\n    lockKey: string,\n    ttl: number,\n    fn: () => Promise,\n    retryDelay = 100,\n    maxRetries = 10,\n  ): Promise {\n    const token = await this.acquireLock(lockKey, ttl, retryDelay, maxRetries);\n    try {\n      return await fn();\n    } finally {\n      await this.releaseLock(lockKey, token);\n    }\n  }\n\n  /**\n   * 模块销毁时自动关闭 Redis 连接，确保资源得以妥善释放\n   */\n  async onModuleDestroy() {\n    await this.client.quit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/RegisterDto.html': {
      url: 'classes/RegisterDto.html',
      title: 'class - RegisterDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: '邮箱格式不正确！'})@IsNotEmpty({message: '邮箱不能为空！'})@ApiProperty({description: '邮箱', example: 'haojingxin0121@qq.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '用户名必须为字符串类型！'})@IsNotEmpty({message: '用户名不能为空！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/register.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegisterDto {\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @IsNotEmpty({ message: '邮箱不能为空！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: 'haojingxin0121@qq.com',\n  })\n  email: string;\n\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @IsNotEmpty({ message: '用户名不能为空！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/RegisterDto-1.html': {
      url: 'classes/RegisterDto-1.html',
      title: 'class - RegisterDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth-service/src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: '邮箱格式不正确！'})@IsNotEmpty({message: '邮箱不能为空！'})@ApiProperty({description: '邮箱', example: 'haojingxin0121@qq.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/auth/dto/register.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '用户名必须为字符串类型！'})@IsNotEmpty({message: '用户名不能为空！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth-service/src/modules/auth/dto/register.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegisterDto {\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @IsNotEmpty({ message: '邮箱不能为空！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: 'haojingxin0121@qq.com',\n  })\n  email: string;\n\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @IsNotEmpty({ message: '用户名不能为空！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Request.html': {
      url: 'interfaces/Request.html',
      title: 'interface - Request',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/guards/auth.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport interface UserPayload {\n  userId: number;\n  roles: string[];\n  username?: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserPayload;\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Request-1.html': {
      url: 'interfaces/Request-1.html',
      title: 'interface - Request-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/guards/file.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileMeta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileMeta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileMeta:         FileEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { FILE_SERVICE_NAME } from 'config/microservice.config';\nimport { Request } from 'express';\nimport { firstValueFrom } from 'rxjs';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      fileMeta: FileEntity;\n    }\n  }\n}\n\n@Injectable()\nexport class FileGuard implements CanActivate {\n  constructor(\n    @Inject(FILE_SERVICE_NAME) private readonly fileClient: ClientProxy,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileId = request.params.fileId;\n    const userId = request.user?.userId;\n\n    if (!fileId) {\n      throw new BadRequestException('文件 ID 不能为空');\n    }\n\n    // 远程调用 file-service 获取文件信息\n    const { result: file } = await firstValueFrom(\n      this.fileClient.send('file.get.byId', fileId),\n    );\n\n    if (!file) {\n      throw new BadRequestException('文件不存在');\n    }\n\n    if (\n      file.access === 'public' ||\n      (file.access === 'private' && userId === file.createdBy)\n    ) {\n      request.fileMeta = file;\n      return true;\n    }\n\n    throw new ForbiddenException('当前文件无权限访问.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Request-2.html': {
      url: 'interfaces/Request-2.html',
      title: 'interface - Request-2',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/file/guards/files.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filesMeta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filesMeta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filesMeta:         FileEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { FILE_SERVICE_NAME } from 'config/microservice.config';\nimport { Request } from 'express';\nimport { firstValueFrom } from 'rxjs';\n\nexport type DownloadRequest = Request;\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      filesMeta: FileEntity[];\n    }\n  }\n}\n\n@Injectable()\nexport class FilesGuard implements CanActivate {\n  constructor(\n    @Inject(FILE_SERVICE_NAME) private readonly fileClient: ClientProxy,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const fileIds = request.body.fileIds;\n    const userId = request.user?.userId;\n\n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      throw new BadRequestException('非法参数');\n    }\n\n    // 远程调用 file-service 获取多个文件信息\n    const { result: files } = await firstValueFrom(\n      this.fileClient.send('file.findByIds', fileIds),\n    );\n\n    if (!files || files.length === 0) {\n      throw new BadRequestException('文件不存在');\n    }\n\n    const filesWithAccess: FileEntity[] = [];\n\n    for (const file of files) {\n      if (\n        file.access === 'public' ||\n        (file.access === 'private' && userId === file.createdBy)\n      ) {\n        filesWithAccess.push(file);\n      } else {\n        throw new ForbiddenException('您无权操作.');\n      }\n    }\n\n    request.filesMeta = filesWithAccess;\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ResetPasswordDto.html': {
      url: 'classes/ResetPasswordDto.html',
      title: 'class - ResetPasswordDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/dto/reset-pass.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/reset-pass.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, Length } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ResetPasswordDto-1.html': {
      url: 'classes/ResetPasswordDto-1.html',
      title: 'class - ResetPasswordDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/dto/reset-pass.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/reset-pass.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, Length } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/Role.html': {
      url: 'entities/Role.html',
      title: 'entity - Role',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                alias\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/role.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/role.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.roles)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/role.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToMany } from 'typeorm';\nimport { BaseEntity } from './base.entity';\nimport { User } from './user.entity';\n\n@Entity('role')\nexport class Role extends BaseEntity {\n  @Column({ type: 'varchar', length: 255, unique: true })\n  name: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: true })\n  alias: string | null;\n\n  @ManyToMany(() => User, (user) => user.roles)\n  users: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/RoleController.html': {
      url: 'controllers/RoleController.html',
      title: 'controller - RoleController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                dict\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(Role.Admin)@HttpCode(HttpStatus.CREATED)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/role/role.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        dict\n                        \n                    \n                \n            \n            \n                \n                        \n                    dict()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dict')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/role/role.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/role/role.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/role/role.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id(\\d+)')@HttpCode(HttpStatus.NO_CONTENT)@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/role/role.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/role/role.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@common/decorator/roles.decorator';\nimport { TypeormFilter } from '@common/filters/typeorm.filter';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Role } from '@shared/enum/role.enum';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport { USER_SERVICE_NAME } from 'config/microservice.config';\nimport { defaultIfEmpty, lastValueFrom } from 'rxjs';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\n\n@ApiTags('角色模块')\n@Controller('role')\n@UseGuards(AuthGuard)\n@UseFilters(TypeormFilter)\nexport class RoleController {\n  constructor(\n    @Inject(USER_SERVICE_NAME) private readonly userClient: ClientProxy,\n  ) {}\n\n  @Get('dict')\n  async dict() {\n    const dict = await lastValueFrom(\n      this.userClient.send({ cmd: 'role.dict' }, {}),\n    );\n    return formatResponse(200, dict, '角色字典获取成功');\n  }\n\n  @Get()\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findAll() {\n    const roles = await lastValueFrom(\n      this.userClient.send({ cmd: 'role.findAll' }, {}),\n    );\n    return formatResponse(200, roles, '获取角色列表成功');\n  }\n\n  @Get(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async findOne(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    const role = await lastValueFrom(\n      this.userClient.send({ cmd: 'role.findOne' }, { id }),\n    );\n    return formatResponse(200, role, '获取角色成功');\n  }\n\n  @Post()\n  @Roles(Role.Admin)\n  @HttpCode(HttpStatus.CREATED)\n  @UseGuards(RolesGuard)\n  async create(@Body() dto: CreateRoleDto) {\n    await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'role.create' }, { dto })\n        .pipe(defaultIfEmpty(null)),\n    );\n    return formatResponse(201, null, '角色创建成功');\n  }\n\n  @Put(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async update(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() dto: UpdateRoleDto,\n  ) {\n    const updatedRole = await lastValueFrom(\n      this.userClient.send({ cmd: 'role.update' }, { id, dto }),\n    );\n    return formatResponse(200, updatedRole, '角色更新成功');\n  }\n\n  @Delete(':id(\\d+)')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async remove(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    return await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'role.remove' }, { id })\n        .pipe(defaultIfEmpty(null)),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/RoleController-1.html': {
      url: 'controllers/RoleController-1.html',
      title: 'controller - RoleController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/role/role.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getRoleDict\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'role.create'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'role.findAll'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'role.findOne'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getRoleDict\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoleDict()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'role.dict'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'role.remove'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'role.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { RoleService } from './role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\n\n@Controller()\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @MessagePattern({ cmd: 'role.dict' })\n  async getRoleDict() {\n    return this.roleService.findDict();\n  }\n\n  @MessagePattern({ cmd: 'role.findAll' })\n  async findAll() {\n    return this.roleService.findAll();\n  }\n\n  @MessagePattern({ cmd: 'role.findOne' })\n  async findOne(@Payload() payload: { id: number }) {\n    return this.roleService.findOne(payload.id);\n  }\n\n  @MessagePattern({ cmd: 'role.create' })\n  async create(@Payload() payload: { dto: CreateRoleDto }) {\n    return this.roleService.create(payload.dto);\n  }\n\n  @MessagePattern({ cmd: 'role.update' })\n  async update(@Payload() payload: { id: number; dto: UpdateRoleDto }) {\n    return this.roleService.update(payload.id, payload.dto);\n  }\n\n  @MessagePattern({ cmd: 'role.remove' })\n  async remove(@Payload() payload: { id: number }) {\n    return this.roleService.remove(payload.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RoleModule.html': {
      url: 'modules/RoleModule.html',
      title: 'module - RoleModule',
      body: "\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport {\n  USER_SERVICE_NAME,\n  USER_SERVICE_TCP_PORT,\n} from 'config/microservice.config';\nimport { RoleController } from './role.controller';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: USER_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: USER_SERVICE_TCP_PORT },\n      },\n    ]),\n  ],\n  controllers: [RoleController],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/RoleService.html': {
      url: 'injectables/RoleService.html',
      title: 'injectable - RoleService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findDict\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user-service/src/modules/role/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDict\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDict()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user-service/src/modules/role/role.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Role } from '@app/database/entities';\nimport { Injectable } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(Role)\n    private roleRepository: Repository,\n  ) {}\n\n  // 获取所有角色\n  async findAll() {\n    return await this.roleRepository.find();\n  }\n\n  // 获取单个角色\n  async findOne(id: number) {\n    const role = await this.roleRepository.findOne({\n      where: { id },\n      relations: ['users'],\n    });\n    if (!role) {\n      throw new RpcException({\n        code: 404,\n        message: '角色不存在',\n      });\n    }\n    return role;\n  }\n\n  // 创建角色\n  async create(dto: CreateRoleDto) {\n    if (await this.roleRepository.findOne({ where: { name: dto.name } })) {\n      throw new RpcException({\n        code: 400,\n        message: '角色已存在',\n      });\n    }\n    const role = this.roleRepository.create(dto);\n    return await this.roleRepository.save(role);\n  }\n\n  // 更新角色\n  async update(id: number, dto: UpdateRoleDto) {\n    const role = await this.findOne(id);\n    Object.assign(role, dto);\n    return await this.roleRepository.save(role);\n  }\n\n  // 删除角色\n  async remove(id: number) {\n    const role = await this.findOne(id);\n    await this.roleRepository.remove(role);\n  }\n\n  // 角色字典\n  async findDict() {\n    const roles = await this.findAll();\n    return roles.map((role) => ({\n      key: role.id,\n      value: role.alias || role.name,\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/RolesGuard.html': {
      url: 'guards/RolesGuard.html',
      title: 'guard - RolesGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/common/src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in packages/common/src/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/common/src/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '@shared/enum/role.enum';\nimport { ROLES_KEY } from '../decorator/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/Task.html': {
      url: 'entities/Task.html',
      title: 'entity - Task',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                chunkStatus\n                            \n                            \n                                    \n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                fileMd5\n                            \n                            \n                                    \n                                fileName\n                            \n                            \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                fileType\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                totalChunks\n                            \n                            \n                                    \n                                    Optional\n                                updatedBy\n                            \n                            \n                                    \n                                uploadedChunks\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        chunkStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 32, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 50, default: 'pending', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uploadedChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 0, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @VersionColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/task.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, VersionColumn } from 'typeorm';\nimport { BaseEntity } from './base.entity';\n\n@Entity('task')\nexport class Task extends BaseEntity {\n  @Column({ type: 'varchar', length: 255, nullable: false })\n  fileName: string;\n\n  @Column({ type: 'varchar', length: 255, nullable: false })\n  fileType: string;\n\n  @Column({ type: 'int', nullable: false })\n  fileSize: number;\n\n  @Column({ type: 'varchar', length: 32, nullable: true })\n  fileMd5?: string;\n\n  @Column({ type: 'int', nullable: false })\n  totalChunks: number;\n\n  @Column({ type: 'int', default: 0, nullable: false })\n  uploadedChunks: number;\n\n  @Column({ type: 'varchar', length: 50, default: 'pending', nullable: true })\n  status: string;\n\n  @Column({ type: 'json', nullable: true })\n  chunkStatus?: any;\n\n  @Column({ type: 'int', nullable: true })\n  createdBy?: number;\n\n  @Column({ type: 'int', nullable: true })\n  updatedBy?: number;\n\n  @VersionColumn()\n  version: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/TaskCreateDto.html': {
      url: 'classes/TaskCreateDto.html',
      title: 'class - TaskCreateDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/upload-service/src/dto/task-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                    \n                                    \n                                fileName\n                            \n                            \n                                    \n                                    \n                                    \n                                fileSize\n                            \n                            \n                                    \n                                    \n                                    \n                                fileType\n                            \n                            \n                                    \n                                    \n                                    \n                                totalChunks\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件MD5不能为空！'})@IsString({message: '文件MD5必须为字符串类型！'})@ApiProperty({description: '文件MD5', example: 'd41d8cd98f00b204e9800998ecf8427e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/task-create.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件名不能为空！'})@IsString({message: '文件名必须为字符串类型！'})@ApiProperty({description: '文件名', example: 'test.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/task-create.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件大小不能为空！'})@IsNumber({}, {message: '文件大小必须为数字类型！'})@ApiProperty({description: '文件大小', example: 1024})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/task-create.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fileType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件类型不能为空！'})@IsString({message: '文件类型必须为字符串类型！'})@ApiProperty({description: '文件类型', example: 'image/jpeg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/task-create.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        totalChunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '总块数不能为空！'})@IsNumber({}, {message: '总块数必须为数字类型！'})@ApiProperty({description: '总块数', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/task-create.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/task-create.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class TaskCreateDto {\n  @IsNotEmpty({ message: '文件名不能为空！' })\n  @IsString({ message: '文件名必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件名',\n    example: 'test.jpg',\n  })\n  fileName: string;\n\n  @IsNotEmpty({ message: '文件大小不能为空！' })\n  @IsNumber({}, { message: '文件大小必须为数字类型！' })\n  @ApiProperty({\n    description: '文件大小',\n    example: 1024,\n  })\n  fileSize: number;\n\n  @IsNotEmpty({ message: '文件类型不能为空！' })\n  @IsString({ message: '文件类型必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件类型',\n    example: 'image/jpeg',\n  })\n  fileType: string;\n\n  @IsNotEmpty({ message: '文件MD5不能为空！' })\n  @IsString({ message: '文件MD5必须为字符串类型！' })\n  @ApiProperty({\n    description: '文件MD5',\n    example: 'd41d8cd98f00b204e9800998ecf8427e',\n  })\n  fileMd5: string;\n\n  @IsNotEmpty({ message: '总块数不能为空！' })\n  @IsNumber({}, { message: '总块数必须为数字类型！' })\n  @ApiProperty({\n    description: '总块数',\n    example: 1,\n  })\n  totalChunks: number;\n  userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/TypeormFilter.html': {
      url: 'classes/TypeormFilter.html',
      title: 'class - TypeormFilter',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeormFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/filters/typeorm.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: TypeORMError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/common/src/filters/typeorm.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        TypeORMError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from \'@nestjs/common\';\nimport { QueryFailedError, TypeORMError } from \'typeorm\';\n\n@Catch(TypeORMError)\nexport class TypeormFilter implements ExceptionFilter {\n  catch(exception: TypeORMError, host: ArgumentsHost) {\n    // 获取请求对象\n    const request = host.switchToHttp().getRequest();\n    const ctx = host.switchToHttp();\n    let code = 500;\n    if (exception instanceof QueryFailedError) {\n      code = exception.driverError.errno;\n    }\n    // 响应 请求对象\n    const response = ctx.getResponse();\n    response.status(500).json({\n      code: code,\n      data: {\n        timestamp: new Date().toISOString(),\n        path: request.url,\n        method: request.method,\n      },\n      message: exception.message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateAiConfigDto.html': {
      url: 'classes/UpdateAiConfigDto.html',
      title: 'class - UpdateAiConfigDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAiConfigDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/dto/update-ai-config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                configKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                configValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        configKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '配置项键名必须是字符串'})@IsOptional()@Type(undefined)@ApiProperty({description: '配置项键名', example: 'model_path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-config.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        configValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '配置项值必须是字符串'})@IsOptional()@Type(undefined)@ApiProperty({description: '配置项值', example: '/path/to/model'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateAiConfigDto {\n  @IsString({ message: '配置项键名必须是字符串' })\n  @IsOptional()\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项键名',\n    example: 'model_path',\n  })\n  configKey?: string;\n\n  @IsString({ message: '配置项值必须是字符串' })\n  @IsOptional()\n  @Type(() => String)\n  @ApiProperty({\n    description: '配置项值',\n    example: '/path/to/model',\n  })\n  configValue?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateAiModelDto.html': {
      url: 'classes/UpdateAiModelDto.html',
      title: 'class - UpdateAiModelDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAiModelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-model/dto/update-ai-model.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAiModelDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreateAiModelDto } from \'./create-ai-model.dto\';\n\nexport class UpdateAiModelDto extends PartialType(CreateAiModelDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateAiServiceDto.html': {
      url: 'classes/UpdateAiServiceDto.html',
      title: 'class - UpdateAiServiceDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAiServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                endpointUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务描述', example: '用于病害智能诊断的服务'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务的访问URL', example: 'http://localhost:5001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        serviceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: '服务名称', example: '病害智能诊断服务'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        serviceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '服务类型', example: 'diagnosis'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"active\" | \"inactive\" | \"under_maintenance\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['active', 'inactive', 'under_maintenance'])@IsOptional()@ApiProperty({description: '服务状态', example: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsOptional, IsEnum } from 'class-validator';\n\nexport class UpdateAiServiceDto {\n  @IsString()\n  @ApiProperty({\n    description: '服务名称',\n    example: '病害智能诊断服务',\n  })\n  @IsOptional()\n  serviceName?: string; // 服务名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务类型',\n    example: 'diagnosis',\n  })\n  serviceType?: string; // 服务类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务描述',\n    example: '用于病害智能诊断的服务',\n  })\n  description?: string; // 服务描述\n\n  @IsEnum(['active', 'inactive', 'under_maintenance'])\n  @IsOptional()\n  @ApiProperty({\n    description: '服务状态',\n    example: 'active',\n  })\n  status?: 'active' | 'inactive' | 'under_maintenance'; // 服务状态\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '服务的访问URL',\n    example: 'http://localhost:5001',\n  })\n  endpointUrl?: string; // 服务的访问URL\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateDatasetDto.html': {
      url: 'classes/UpdateDatasetDto.html',
      title: 'class - UpdateDatasetDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/dataset/update-dataset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                fileIds\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '数据集description必须是字符串！'})@ApiProperty({description: '数据集描述', example: '这是一个数据集'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/dataset/update-dataset.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: 'fileIds 必须是数组'})@Transform( => )@IsInt({each: true, message: 'fileIds 必须是数字'})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/dataset/update-dataset.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '数据集name必须是字符串！'})@IsOptional({message: '数据集name不能为空！'})@ApiProperty({description: '数据集名称', example: '数据集1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/dataset/update-dataset.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsArray, IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateDatasetDto {\n  @IsString({ message: '数据集name必须是字符串！' })\n  @IsOptional({ message: '数据集name不能为空！' })\n  @ApiProperty({\n    description: '数据集名称',\n    example: '数据集1',\n  })\n  name: string;\n\n  @IsOptional()\n  @IsString({ message: '数据集description必须是字符串！' })\n  @ApiProperty({\n    description: '数据集描述',\n    example: '这是一个数据集',\n  })\n  description?: string;\n\n  @IsOptional()\n  @IsArray({\n    message: 'fileIds 必须是数组',\n  })\n  @Transform(({ value }) => {\n    if (typeof value === 'string' && value.includes(',')) {\n      return value.split(',').map((item) => parseInt(item, 10));\n    } else {\n      return value.map((item) => parseInt(item, 10));\n    }\n  })\n  @IsInt({ each: true, message: 'fileIds 必须是数字' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateFileDto.html': {
      url: 'classes/UpdateFileDto.html',
      title: 'class - UpdateFileDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/update-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                access\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fileId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                originalFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '文件路径必须为字符串类型！'})@IsIn(['public', 'private'], {message: '请使用 \"public\" 或者 \"private\" 来设置权限'})@ApiProperty({description: '权限', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/update-file.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件ID不能为空！'})@IsInt({message: '文件ID必须为数字类型！'})@Type(undefined)@ApiProperty({description: '文件ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/update-file.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        originalFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '文件名称必须为字符串类型！'})@Length(5, 255, {message: '文件名称应该过短或者过长'})@ApiProperty({description: '文件名称', example: '文件1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/update-file.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform, Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsIn,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateFileDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsInt({ message: '文件ID必须为数字类型！' })\n  @Type(() => Number)\n  @ApiProperty({\n    description: '文件ID',\n    example: 1,\n  })\n  fileId: number;\n\n  @IsOptional()\n  @IsString({ message: '文件名称必须为字符串类型！' })\n  @Length(5, 255, {\n    message: '文件名称应该过短或者过长',\n  })\n  @ApiProperty({\n    description: '文件名称',\n    example: '文件1',\n  })\n  originalFileName?: string;\n\n  @IsOptional()\n  @IsString({ message: '文件路径必须为字符串类型！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access?: string;\n}\n\nexport class UpdateFilesAccessDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsArray({ message: '文件ID必须为数组类型！' })\n  @ArrayMinSize(1, { message: '文件ID数组长度至少为1！' })\n  @Transform(({ value }) => value.map((v: string) => Number(v)), {\n    toClassOnly: true,\n  })\n  @IsInt({ each: true, message: '文件ID必须为数字类型！' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds: number[];\n\n  @IsNotEmpty({ message: '权限不能为空！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateFilesAccessDto.html': {
      url: 'classes/UpdateFilesAccessDto.html',
      title: 'class - UpdateFilesAccessDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFilesAccessDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/update-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                access\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                fileIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '权限不能为空！'})@IsIn(['public', 'private'], {message: '请使用 \"public\" 或者 \"private\" 来设置权限'})@ApiProperty({description: '权限', example: 'public'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/update-file.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        fileIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件ID不能为空！'})@IsArray({message: '文件ID必须为数组类型！'})@ArrayMinSize(1, {message: '文件ID数组长度至少为1！'})@Transform( => , {toClassOnly: true})@IsInt({each: true, message: '文件ID必须为数字类型！'})@ApiProperty({description: '文件ID', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/update-file.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform, Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsIn,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateFileDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsInt({ message: '文件ID必须为数字类型！' })\n  @Type(() => Number)\n  @ApiProperty({\n    description: '文件ID',\n    example: 1,\n  })\n  fileId: number;\n\n  @IsOptional()\n  @IsString({ message: '文件名称必须为字符串类型！' })\n  @Length(5, 255, {\n    message: '文件名称应该过短或者过长',\n  })\n  @ApiProperty({\n    description: '文件名称',\n    example: '文件1',\n  })\n  originalFileName?: string;\n\n  @IsOptional()\n  @IsString({ message: '文件路径必须为字符串类型！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access?: string;\n}\n\nexport class UpdateFilesAccessDto {\n  @IsNotEmpty({ message: '文件ID不能为空！' })\n  @IsArray({ message: '文件ID必须为数组类型！' })\n  @ArrayMinSize(1, { message: '文件ID数组长度至少为1！' })\n  @Transform(({ value }) => value.map((v: string) => Number(v)), {\n    toClassOnly: true,\n  })\n  @IsInt({ each: true, message: '文件ID必须为数字类型！' })\n  @ApiProperty({\n    description: '文件ID',\n    example: [1, 2, 3],\n  })\n  fileIds: number[];\n\n  @IsNotEmpty({ message: '权限不能为空！' })\n  @IsIn(['public', 'private'], {\n    message: '请使用 \"public\" 或者 \"private\" 来设置权限',\n  })\n  @ApiProperty({\n    description: '权限',\n    example: 'public',\n  })\n  access: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdatePasswordDto.html': {
      url: 'classes/UpdatePasswordDto.html',
      title: 'class - UpdatePasswordDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/dto/change-pass.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '新密码必顼为字符串类型'})@IsNotEmpty({message: '新密码不能为空'})@Length(6, 20, {message: '密码长度必须为6-20位'})@ApiProperty({description: '新密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/change-pass.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, Length } from 'class-validator';\n\nexport class UpdatePasswordDto {\n  @IsString({ message: '新密码必顼为字符串类型' })\n  @IsNotEmpty({ message: '新密码不能为空' })\n  @Length(6, 20, { message: '密码长度必须为6-20位' })\n  @ApiProperty({\n    description: '新密码',\n    example: '123456',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdatePasswordDto-1.html': {
      url: 'classes/UpdatePasswordDto-1.html',
      title: 'class - UpdatePasswordDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/dto/change-pass.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '新密码必顼为字符串类型'})@IsNotEmpty({message: '新密码不能为空'})@Length(6, 20, {message: '密码长度必须为6-20位'})@ApiProperty({description: '新密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/change-pass.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, Length } from 'class-validator';\n\nexport class UpdatePasswordDto {\n  @IsString({ message: '新密码必顼为字符串类型' })\n  @IsNotEmpty({ message: '新密码不能为空' })\n  @Length(6, 20, { message: '密码长度必须为6-20位' })\n  @ApiProperty({\n    description: '新密码',\n    example: '123456',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdatePlantDiseaseKnowledgeDto.html': {
      url: 'classes/UpdatePlantDiseaseKnowledgeDto.html',
      title: 'class - UpdatePlantDiseaseKnowledgeDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlantDiseaseKnowledgeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPart\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                affectedPlant\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                biologicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                cause\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                chemicalControl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                culturalPractices\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseCycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                diseaseType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                documentUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstReported\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                geographicalArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                historicalCases\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preventiveMeasures\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                researchSources\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                resistantVarieties\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                scientificName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                severity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                spreadMethod\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                symptoms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                synonyms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                videoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物部位', example: '叶片'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        affectedPlant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '受影响的植物种类', example: '草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        biologicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '生物防治方法', example: '生物防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害分类', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        cause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害病因', example: '病害病因'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        chemicalControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '化学防治方法', example: '化学防治方法'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        culturalPractices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '文化控制措施', example: '文化控制措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害唯一编码', example: '01110'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseCycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害生命周期', example: '病害生命周期'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害名称', example: '炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        diseaseType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害类型', example: '真菌性病害'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        documentUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关文档的 URL 地址', example: 'https://example.com/document.pdf'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstReported\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()@ApiProperty({description: '首次报告时间', example: '2021-06-01'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        geographicalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害地理分布', example: '病害地理分布'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        historicalCases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '历史病例', example: '历史病例'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '病害图片的 URL 地址', example: 'https://example.com/image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preventiveMeasures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '防治措施', example: '防治措施'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        researchSources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '研究来源', example: '研究来源'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        resistantVarieties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '抗病品种', example: '抗病品种'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        scientificName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害学名', example: 'Colletotrichum gloeosporioides'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        severity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害严重程度', example: '轻度'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:190\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        spreadMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害传播方式', example: '病害传播方式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        symptoms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害症状描述', example: '病害症状描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        synonyms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害别名', example: '草莓炭疽病'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '病害标签', example: '炭疽病, 草莓'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        videoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()@ApiProperty({description: '相关视频的 URL 地址', example: 'https://example.com/video.mp4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts:174\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsDateString, IsUrl } from 'class-validator';\n\nexport class UpdatePlantDiseaseKnowledgeDto {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害名称',\n    example: '炭疽病',\n  })\n  diseaseName?: string; // 病害名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害唯一编码',\n    example: '01110',\n  })\n  diseaseCode?: string; // 病害唯一编码\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害学名',\n    example: 'Colletotrichum gloeosporioides',\n  })\n  scientificName?: string; // 病害的学名（如果有）\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害别名',\n    example: '草莓炭疽病',\n  })\n  synonyms?: string; // 病害的同义词\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害症状描述',\n    example: '病害症状描述',\n  })\n  symptoms?: string; // 病害症状描述\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害病因',\n    example: '病害病因',\n  })\n  cause?: string; // 病因\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害类型',\n    example: '真菌性病害',\n  })\n  diseaseType?: string; // 病害类型\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物种类',\n    example: '草莓',\n  })\n  affectedPlant?: string; // 受影响的植物种类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '受影响的植物部位',\n    example: '叶片',\n  })\n  affectedPart?: string; // 受影响的植物部位\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害生命周期',\n    example: '病害生命周期',\n  })\n  diseaseCycle?: string; // 病害生命周期\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害传播方式',\n    example: '病害传播方式',\n  })\n  spreadMethod?: string; // 病害传播方式\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害地理分布',\n    example: '病害地理分布',\n  })\n  geographicalArea?: string; // 病害地理分布\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({\n    description: '首次报告时间',\n    example: '2021-06-01',\n  })\n  firstReported?: string; // 首次报告时间\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '防治措施',\n    example: '防治措施',\n  })\n  preventiveMeasures?: string; // 防治措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '化学防治方法',\n    example: '化学防治方法',\n  })\n  chemicalControl?: string; // 化学防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '生物防治方法',\n    example: '生物防治方法',\n  })\n  biologicalControl?: string; // 生物防治方法\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '文化控制措施',\n    example: '文化控制措施',\n  })\n  culturalPractices?: string; // 文化控制措施\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '抗病品种',\n    example: '抗病品种',\n  })\n  resistantVarieties?: string; // 抗病品种\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '病害图片的 URL 地址',\n    example: 'https://example.com/image.jpg',\n  })\n  imageUrl?: string; // 病害图片的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关文档的 URL 地址',\n    example: 'https://example.com/document.pdf',\n  })\n  documentUrl?: string; // 相关文档的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  @ApiProperty({\n    description: '相关视频的 URL 地址',\n    example: 'https://example.com/video.mp4',\n  })\n  videoUrl?: string; // 相关视频的 URL 地址\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害分类',\n    example: '炭疽病',\n  })\n  category?: string; // 病害分类\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害严重程度',\n    example: '轻度',\n  })\n  severity?: string; // 病害严重程度\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '病害标签',\n    example: '炭疽病, 草莓',\n  })\n  tags?: string; // 病害标签\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '历史病例',\n    example: '历史病例',\n  })\n  historicalCases?: string; // 历史病例\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '研究来源',\n    example: '研究来源',\n  })\n  researchSources?: string; // 研究来源\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdatePlantDto.html': {
      url: 'classes/UpdatePlantDto.html',
      title: 'class - UpdatePlantDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/plant/dto/update-plant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePlantDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \'@nestjs/mapped-types\';\nimport { CreatePlantDto } from \'./create-plant.dto\';\n\nexport class UpdatePlantDto extends PartialType(CreatePlantDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdateProfileDto.html': {
      url: 'classes/UpdateProfileDto.html',
      title: 'class - UpdateProfileDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '地址必须为字符串类型！'})@IsOptional()@ApiProperty({description: '地址', example: '北京市朝阳区'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: '性别必须为数字类型！'})@IsOptional()@ApiProperty({description: '性别', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-profile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '昵称必须为字符串类型！'})@IsOptional()@ApiProperty({description: '姓名', example: '张三'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('CN')@IsOptional()@ApiProperty({description: '手机号', example: '18888888888'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsPhoneNumber, IsString } from 'class-validator';\n\nexport class UpdateProfileDto {\n  @IsNumber({}, { message: '性别必须为数字类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '性别',\n    example: 1,\n  })\n  gender?: number;\n\n  @IsString({ message: '昵称必须为字符串类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '姓名',\n    example: '张三',\n  })\n  name?: string;\n\n  @IsPhoneNumber('CN')\n  @IsOptional()\n  @ApiProperty({\n    description: '手机号',\n    example: '18888888888',\n  })\n  phone?: string;\n\n  @IsString({ message: '地址必须为字符串类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '地址',\n    example: '北京市朝阳区',\n  })\n  address?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateProfileDto-1.html': {
      url: 'classes/UpdateProfileDto-1.html',
      title: 'class - UpdateProfileDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '地址必须为字符串类型！'})@IsOptional()@ApiProperty({description: '地址', example: '北京市朝阳区'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: '性别必须为数字类型！'})@IsOptional()@ApiProperty({description: '性别', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-profile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '昵称必须为字符串类型！'})@IsOptional()@ApiProperty({description: '姓名', example: '张三'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('CN')@IsOptional()@ApiProperty({description: '手机号', example: '18888888888'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsPhoneNumber, IsString } from 'class-validator';\n\nexport class UpdateProfileDto {\n  @IsNumber({}, { message: '性别必须为数字类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '性别',\n    example: 1,\n  })\n  gender?: number;\n\n  @IsString({ message: '昵称必须为字符串类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '姓名',\n    example: '张三',\n  })\n  name?: string;\n\n  @IsPhoneNumber('CN')\n  @IsOptional()\n  @ApiProperty({\n    description: '手机号',\n    example: '18888888888',\n  })\n  phone?: string;\n\n  @IsString({ message: '地址必须为字符串类型！' })\n  @IsOptional()\n  @ApiProperty({\n    description: '地址',\n    example: '北京市朝阳区',\n  })\n  address?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateRoleDto.html': {
      url: 'classes/UpdateRoleDto.html',
      title: 'class - UpdateRoleDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/role/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                alias\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色别名', example: '管理员'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/role/dto/update-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色描述', example: '管理员角色'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/role/dto/update-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色名称', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/role/dto/update-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateRoleDto {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色名称',\n    example: 'admin',\n  })\n  name?: string; // 角色名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色别名',\n    example: '管理员',\n  })\n  alias?: string; // 角色别名\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色描述',\n    example: '管理员角色',\n  })\n  description?: string; // 角色描述\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateRoleDto-1.html': {
      url: 'classes/UpdateRoleDto-1.html',
      title: 'class - UpdateRoleDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/role/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                alias\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色别名', example: '管理员'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/role/dto/update-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色描述', example: '管理员角色'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/role/dto/update-role.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: '角色名称', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/role/dto/update-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateRoleDto {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色名称',\n    example: 'admin',\n  })\n  name?: string; // 角色名称\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色别名',\n    example: '管理员',\n  })\n  alias?: string; // 角色别名\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: '角色描述',\n    example: '管理员角色',\n  })\n  description?: string; // 角色描述\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateUserDto.html': {
      url: 'classes/UpdateUserDto.html',
      title: 'class - UpdateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail({}, {message: '邮箱格式不正确！'})@ApiProperty({description: '邮箱', example: '5165133@asdf.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度必须为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject({message: 'Profile 必须为一个对象！'})@IsOptional()@ApiProperty({description: 'Profile', type: Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色必须是数组！'})@ArrayMinSize(1, {message: '请至少选择一个角色！'})@ApiProperty({description: '角色', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus, {message: '状态值只能是 0 或 1'})@ApiProperty({description: '状态', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '用户名必须为字符串类型！'})@Length(5, 20, {message: '用户名长度必须为5-20位！'})@ApiProperty({description: '用户名', example: 'sdfgsafgasgsad'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/user/dto/update-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from '@app/database/entities';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserStatus } from '@shared/enum/user.enum';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsObject,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: '5165133@asdf.com',\n  })\n  email?: string;\n\n  @IsOptional()\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @Length(5, 20, { message: '用户名长度必须为5-20位！' })\n  @ApiProperty({\n    description: '用户名',\n    example: 'sdfgsafgasgsad',\n  })\n  username?: string;\n\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度必须为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus, { message: '状态值只能是 0 或 1' })\n  @ApiProperty({\n    description: '状态',\n    example: 1,\n  })\n  status?: UserStatus; // 使用枚举来限制状态值\n\n  @IsOptional()\n  @IsArray({ message: '角色必须是数组！' })\n  @ArrayMinSize(1, { message: '请至少选择一个角色！' })\n  @ApiProperty({\n    description: '角色',\n    example: [1, 2],\n  })\n  roles?: number[];\n\n  @IsOptional()\n  @IsObject({ message: 'Profile 必须为一个对象！' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Profile',\n    type: Profile,\n  })\n  profile?: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateUserDto-1.html': {
      url: 'classes/UpdateUserDto-1.html',
      title: 'class - UpdateUserDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail({}, {message: '邮箱格式不正确！'})@ApiProperty({description: '邮箱', example: '5165133@asdf.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '密码必须为字符串类型！'})@Length(6, 20, {message: '密码长度必须为6-20位！'})@ApiProperty({description: '密码', example: '123456'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject({message: 'Profile 必须为一个对象！'})@IsOptional()@ApiProperty({description: 'Profile', type: Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray({message: '角色必须是数组！'})@ArrayMinSize(1, {message: '请至少选择一个角色！'})@ApiProperty({description: '角色', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(UserStatus, {message: '状态值只能是 0 或 1'})@ApiProperty({description: '状态', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: '用户名必须为字符串类型！'})@Length(5, 20, {message: '用户名长度必须为5-20位！'})@ApiProperty({description: '用户名', example: 'sdfgsafgasgsad'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user-service/src/modules/user/dto/update-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from '@app/database/entities';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { UserStatus } from '@shared/enum/user.enum';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsObject,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsEmail({}, { message: '邮箱格式不正确！' })\n  @ApiProperty({\n    description: '邮箱',\n    example: '5165133@asdf.com',\n  })\n  email?: string;\n\n  @IsOptional()\n  @IsString({ message: '用户名必须为字符串类型！' })\n  @Length(5, 20, { message: '用户名长度必须为5-20位！' })\n  @ApiProperty({\n    description: '用户名',\n    example: 'sdfgsafgasgsad',\n  })\n  username?: string;\n\n  @IsOptional()\n  @IsString({ message: '密码必须为字符串类型！' })\n  @Length(6, 20, { message: '密码长度必须为6-20位！' })\n  @ApiProperty({\n    description: '密码',\n    example: '123456',\n  })\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(UserStatus, { message: '状态值只能是 0 或 1' })\n  @ApiProperty({\n    description: '状态',\n    example: 1,\n  })\n  status?: UserStatus; // 使用枚举来限制状态值\n\n  @IsOptional()\n  @IsArray({ message: '角色必须是数组！' })\n  @ArrayMinSize(1, { message: '请至少选择一个角色！' })\n  @ApiProperty({\n    description: '角色',\n    example: [1, 2],\n  })\n  roles?: number[];\n\n  @IsOptional()\n  @IsObject({ message: 'Profile 必须为一个对象！' })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Profile',\n    type: Profile,\n  })\n  profile?: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UploadChunkDto.html': {
      url: 'classes/UploadChunkDto.html',
      title: 'class - UploadChunkDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadChunkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/upload-service/src/dto/upload-chunk.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chunkData\n                            \n                            \n                                taskMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chunkData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-chunk.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-chunk.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UploadChunkDto {\n  taskMeta: {\n    taskId: string;\n    chunkIndex: number;\n    totalChunks: number;\n  };\n  chunkData: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UploadChunkDto-1.html': {
      url: 'classes/UploadChunkDto-1.html',
      title: 'class - UploadChunkDto-1',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadChunkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/dto/file/upload-chunk.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                chunkIndex\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fileMd5\n                            \n                            \n                                    \n                                    \n                                taskId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        chunkIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件块不能为空！'})@IsInt({message: '文件块必须为数字类型！'})@Type(undefined)@ApiProperty({description: '文件块', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/upload-chunk.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '文件MD5不能为空！'})@IsString({message: '文件MD5必须为字符串类型！'})@Type(undefined)@ApiProperty({description: '文件MD5', example: 'd41d8cd98f00b204e9800998ecf8427e'})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/upload-chunk.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '任务ID不能为空！'})@ApiProperty({description: '任务ID', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/common/src/dto/file/upload-chunk.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UploadChunkDto {\n  @IsNotEmpty({ message: '任务ID不能为空！' })\n  @ApiProperty({\n    description: '任务ID',\n    example: 1,\n  })\n  taskId: string;\n\n  @IsNotEmpty({ message: '文件MD5不能为空！' })\n  @IsString({ message: '文件MD5必须为字符串类型！' })\n  @Type(() => String)\n  @ApiProperty({\n    description: '文件MD5',\n    example: 'd41d8cd98f00b204e9800998ecf8427e',\n  })\n  fileMd5: string;\n\n  @IsNotEmpty({ message: '文件块不能为空！' })\n  @IsInt({ message: '文件块必须为数字类型！' })\n  @Type(() => Number) // 自动转换为 number\n  @ApiProperty({\n    description: '文件块',\n    example: 1,\n  })\n  chunkIndex: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UploadController.html': {
      url: 'controllers/UploadController.html',
      title: 'controller - UploadController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UploadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/upload-service/src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                chunkFile\n                            \n                            \n                                    \n                                    Async\n                                completeFile\n                            \n                            \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    Async\n                                getTask\n                            \n                            \n                                    \n                                    Async\n                                preloadFile\n                            \n                            \n                                    \n                                    Async\n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        chunkFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    chunkFile(payload: UploadChunkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'upload.chunk'})\n                \n            \n\n                    \n                        \n                            Defined in apps/upload-service/src/app.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UploadChunkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        completeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeFile(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'upload.complete'})\n                \n            \n\n                    \n                        \n                            Defined in apps/upload-service/src/app.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(payload: TaskCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'task.create'})\n                \n            \n\n                    \n                        \n                            Defined in apps/upload-service/src/app.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            TaskCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTask(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'task.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/upload-service/src/app.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        preloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadFile(payload: UploadPreloadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'upload.preload'})\n                \n            \n\n                    \n                        \n                            Defined in apps/upload-service/src/app.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UploadPreloadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        saveFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveFile(payload: UploadSingleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'upload.single'})\n                \n            \n\n                    \n                        \n                            Defined in apps/upload-service/src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UploadSingleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { UploadService } from './app.service';\nimport { TaskCreateDto } from './dto/task-create.dto';\nimport { UploadChunkDto } from './dto/upload-chunk.dto';\nimport { UploadPreloadDto } from './dto/upload-preload.dto';\nimport { UploadSingleDto } from './dto/upload-single.dto';\n\n@Controller()\nexport class UploadController {\n  constructor(private uploadService: UploadService) {}\n\n  @MessagePattern({ cmd: 'upload.single' })\n  async saveFile(@Payload() payload: UploadSingleDto) {\n    return this.uploadService.saveFile(\n      payload.fileMeta,\n      Buffer.from(payload.fileData, 'base64'),\n      payload.userId,\n    );\n  }\n\n  @MessagePattern({ cmd: 'upload.preload' })\n  async preloadFile(@Payload() payload: UploadPreloadDto) {\n    return this.uploadService.preloadFile(\n      payload.fileMd5,\n      payload.originalFileName,\n      payload.userId,\n    );\n  }\n\n  @MessagePattern({ cmd: 'upload.chunk' })\n  async chunkFile(@Payload() payload: UploadChunkDto) {\n    return this.uploadService.chunkFile(\n      payload.taskMeta,\n      Buffer.from(payload.chunkData, 'base64'),\n    );\n  }\n\n  @MessagePattern({ cmd: 'upload.complete' })\n  async completeFile(@Payload() payload: { taskId: string }) {\n    return this.uploadService.completeUpload(payload.taskId);\n  }\n\n  @MessagePattern({ cmd: 'task.create' })\n  async createTask(@Payload() payload: TaskCreateDto) {\n    return this.uploadService.createTask(payload);\n  }\n\n  @MessagePattern({ cmd: 'task.get' })\n  async getTask(@Payload() payload: { taskId: string }) {\n    return this.uploadService.getTask(payload.taskId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UploadPreloadDto.html': {
      url: 'classes/UploadPreloadDto.html',
      title: 'class - UploadPreloadDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadPreloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/upload-service/src/dto/upload-preload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileMd5\n                            \n                            \n                                originalFileName\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-preload.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-preload.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-preload.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UploadPreloadDto {\n  fileMd5: string;\n  originalFileName: string;\n  userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/UploadService.html': {
      url: 'injectables/UploadService.html',
      title: 'injectable - UploadService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/upload-service/src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chunkDir\n                            \n                            \n                                    Private\n                                handleFileMd5\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                uploadDir\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chunkFile\n                            \n                            \n                                    Async\n                                completeUpload\n                            \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                getTask\n                            \n                            \n                                    Async\n                                preloadFile\n                            \n                            \n                                    Async\n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, dataSource: DataSource, redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in apps/upload-service/src/app.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        chunkFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    chunkFile(taskMeta: literal type, chunkData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/upload-service/src/app.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskMeta\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                chunkData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeUpload(taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/upload-service/src/app.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(taskMeta: TaskCreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/upload-service/src/app.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskMeta\n                                            \n                                                            TaskCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTask(taskId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/upload-service/src/app.service.ts:248\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        preloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadFile(fileMd5: string, originalFileName: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/upload-service/src/app.service.ts:260\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileMd5\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                originalFileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveFile(fileMeta: UploadSingleDto, fileData: Buffer, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/upload-service/src/app.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileMeta\n                                            \n                                                            UploadSingleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chunkDir\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, '../..', 'chunks')\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/app.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleFileMd5\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/app.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UploadService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/app.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadDir\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, '../..', 'uploads')\n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/app.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { File as FileEntity } from '@app/database/entities';\nimport { RedisService } from '@app/redis';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { getModelMimeType } from '@shared/utils';\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { DataSource, Repository } from 'typeorm';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TaskCreateDto } from './dto/task-create.dto';\nimport { UploadSingleDto } from './dto/upload-single.dto';\n\nexport type UploadTask = TaskCreateDto & {\n  taskId: string;\n  uploadedChunks: number[];\n};\n\n@Injectable()\nexport class UploadService {\n  private readonly logger = new Logger(UploadService.name);\n  // 用于临时存储分片的目录\n  private chunkDir = path.join(__dirname, '../..', 'chunks');\n  // 用于保存最终文件的目录\n  private uploadDir = path.join(__dirname, '../..', 'uploads');\n\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n    private readonly dataSource: DataSource,\n    private readonly redisService: RedisService,\n  ) {\n    // 确保必要的存储目录存在\n    if (!fs.existsSync(this.chunkDir)) {\n      fs.mkdirSync(this.chunkDir, { recursive: true });\n      this.logger.log(`创建分片存储目录: ${this.chunkDir}`);\n    }\n    if (!fs.existsSync(this.uploadDir)) {\n      fs.mkdirSync(this.uploadDir, { recursive: true });\n      this.logger.log(`创建文件上传目录: ${this.uploadDir}`);\n    }\n  }\n\n  private handleFileMd5 = (filePath: string) =>\n    new Promise((resolve, reject) => {\n      const hash = crypto.createHash('md5');\n      const stream = fs.createReadStream(filePath);\n      stream.on('data', (data) => hash.update(data));\n      stream.on('end', () => resolve(hash.digest('hex')));\n      stream.on('error', (error) => reject(error));\n    });\n\n  //———————————————————————————————————————\n  // 单文件上传：直接保存文件数据并更新数据库记录\n  async saveFile(\n    fileMeta: UploadSingleDto['fileMeta'],\n    fileData: Buffer,\n    userId: number,\n  ) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    const fileName = Date.now() + uuidv4();\n    const filePath = path.join(this.uploadDir, fileName);\n    const fileType = fileMeta.mimetype\n      ? fileMeta.mimetype\n      : getModelMimeType(path.extname(fileMeta.originalname));\n    // 将文件数据写入目标目录\n    await fs.promises.writeFile(filePath, fileData);\n    const fileMd5 = await this.handleFileMd5(filePath);\n    try {\n      const found = await queryRunner.manager.findOne(FileEntity, {\n        where: { fileMd5 },\n      });\n      let file;\n      if (found) {\n        file = this.fileRepository.create({\n          originalFileName: fileMeta.originalname,\n          storageFileName: found.storageFileName,\n          filePath: found.filePath,\n          fileType: found.fileType,\n          fileSize: found.fileSize,\n          fileMd5: found.fileMd5,\n          createdBy: userId,\n          updatedBy: userId,\n        });\n      } else {\n        file = this.fileRepository.create({\n          originalFileName: fileMeta.originalname,\n          storageFileName: fileName,\n          filePath,\n          fileType,\n          fileSize: fileData.length,\n          fileMd5,\n          createdBy: userId,\n          updatedBy: userId,\n        });\n      }\n      await queryRunner.manager.save(file);\n      await queryRunner.commitTransaction();\n      return { success: true, file };\n    } catch (error) {\n      this.logger.error(`保存文件失败: ${error.message}`);\n      await queryRunner.rollbackTransaction();\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  //———————————————————————————————————————\n  // 创建上传任务：基于 CreateTaskDto 的属性生成任务，并缓存至 Redis\n  async createTask(taskMeta: TaskCreateDto): Promise {\n    const taskId = crypto.randomBytes(16).toString('hex');\n    const task: UploadTask = {\n      taskId,\n      userId: taskMeta.userId,\n      fileName: taskMeta.fileName,\n      fileSize: taskMeta.fileSize,\n      fileType: taskMeta.fileType,\n      fileMd5: taskMeta.fileMd5,\n      totalChunks: taskMeta.totalChunks,\n      uploadedChunks: [],\n    };\n    await this.redisService.set(`upload:task:${taskId}`, task);\n    return task;\n  }\n\n  //———————————————————————————————————————\n  // 分片上传：写入单个分片，并更新 Redis 中的任务状态\n  async chunkFile(\n    taskMeta: {\n      taskId: string;\n      chunkIndex: number;\n      totalChunks: number;\n    },\n    chunkData: Buffer,\n  ): Promise {\n    const { taskId, chunkIndex } = taskMeta;\n    // 使用 Redis 锁确保在并发情况下对任务状态的修改不会冲突\n    const lockKey = `upload:lock:${taskId}`;\n    // 此处设置锁的有效期为 5000 毫秒，可根据业务需要调整\n    return await this.redisService.executeWithLock(lockKey, 5000, async () => {\n      // 再次从 Redis 中获取上传任务信息，确保在锁保护下获得最新状态\n      const task = await this.redisService.get(\n        `upload:task:${taskId}`,\n      );\n      if (!task) {\n        throw new RpcException('上传任务不存在或已过期');\n      }\n      // 构造分片文件名并写入临时目录\n      const chunkFileName = `${taskId}_chunk_${chunkIndex}`;\n      const chunkFilePath = path.join(this.chunkDir, chunkFileName);\n      await fs.promises.writeFile(chunkFilePath, chunkData);\n      // 更新任务记录，确保每个分片只记录一次\n      if (!task.uploadedChunks.includes(chunkIndex)) {\n        task.uploadedChunks.push(chunkIndex);\n      }\n      // 将更新后的任务重新存入 Redis\n      await this.redisService.set(`upload:task:${taskId}`, task);\n      return { message: '分片上传成功', chunkIndex };\n    });\n  }\n\n  //———————————————————————————————————————\n  // 合并文件：当所有分片上传完毕后，按顺序合并文件，并保存数据库记录\n  async completeUpload(taskId: string) {\n    const task = await this.redisService.get(\n      `upload:task:${taskId}`,\n    );\n    if (!task) {\n      throw new RpcException('上传任务不存在或已过期');\n    }\n    if (task.uploadedChunks.length !== task.totalChunks) {\n      console.log('task', task.uploadedChunks.length, task.totalChunks);\n      throw new RpcException('尚未接收到所有分片，无法合并文件');\n    }\n    // 对分片索引排序，确保正确合并顺序\n    task.uploadedChunks.sort((a, b) => a - b);\n    const finalFileName = Date.now() + uuidv4();\n    const finalFilePath = path.join(this.uploadDir, finalFileName);\n    const writeStream = fs.createWriteStream(finalFilePath);\n    for (let i = 1; i  {\n      writeStream.on('finish', () => resolve(true));\n      writeStream.on('error', reject);\n    });\n    // 开启数据库事务，确保写入操作的原子性\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const found = await queryRunner.manager.findOne(FileEntity, {\n        where: { fileMd5: task.fileMd5 },\n      });\n      let fileEntity;\n      if (found) {\n        fileEntity = this.fileRepository.create({\n          originalFileName: task.fileName,\n          storageFileName: found.storageFileName,\n          filePath: found.filePath,\n          fileType: found.fileType,\n          fileSize: task.fileSize,\n          fileMd5: found.fileMd5,\n          createdBy: task.userId,\n          updatedBy: task.userId,\n        });\n      } else {\n        fileEntity = this.fileRepository.create({\n          originalFileName: task.fileName,\n          storageFileName: finalFileName,\n          filePath: finalFilePath,\n          fileType: task.fileType,\n          fileSize: task.fileSize,\n          fileMd5: task.fileMd5,\n          createdBy: task.userId,\n          updatedBy: task.userId,\n        });\n      }\n      await queryRunner.manager.save(fileEntity);\n      await queryRunner.commitTransaction();\n      // 合并成功后，清理 Redis 中的任务缓存\n      await this.redisService.del(`upload:task:${taskId}`);\n      return { success: true, file: fileEntity };\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      this.logger.error(`合并文件失败: ${error.message}`);\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  //———————————————————————————————————————\n  // 获取上传任务信息：从 Redis 中检索任务详情\n  async getTask(taskId: string) {\n    const task = await this.redisService.get(\n      `upload:task:${taskId}`,\n    );\n    if (!task) {\n      throw new RpcException('上传任务不存在或已过期');\n    }\n    return { success: true, result: task };\n  }\n\n  //———————————————————————————————————————\n  // 预载文件：如果文件存在则直接保存文件元数据\n  async preloadFile(fileMd5: string, originalFileName: string, userId: number) {\n    const queryRunner = this.dataSource.createQueryRunner();\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const found = await queryRunner.manager.findOne(FileEntity, {\n        where: { fileMd5 },\n      });\n      if (!found) {\n        return { success: false, result: null };\n      }\n      const file = this.fileRepository.create({\n        originalFileName,\n        storageFileName: found.storageFileName,\n        filePath: found.filePath,\n        fileType: found.fileType,\n        fileMd5: found.fileMd5,\n        fileSize: found.fileSize,\n        createdBy: userId,\n        updatedBy: userId,\n      });\n      await queryRunner.manager.save(file);\n      await queryRunner.commitTransaction();\n      return { success: true, result: file };\n    } catch (error) {\n      await queryRunner.rollbackTransaction();\n      this.logger.error(`保存文件元数据失败: ${error.message}`);\n      throw error;\n    } finally {\n      await queryRunner.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UploadSingleDto.html': {
      url: 'classes/UploadSingleDto.html',
      title: 'class - UploadSingleDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadSingleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/upload-service/src/dto/upload-single.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fileData\n                            \n                            \n                                    \n                                fileMeta\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-single.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pick\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-single.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/upload-service/src/dto/upload-single.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \'@nestjs/swagger\';\n\nexport class UploadSingleDto {\n  @ApiProperty()\n  fileMeta: Pick;\n\n  @ApiProperty()\n  fileData: string;\n\n  @ApiProperty()\n  userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/User.html': {
      url: 'entities/User.html',
      title: 'entity - User',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/database/src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                profile\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profile => profile.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, role => role.users)@JoinTable({name: 'users_roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"0\" | \"1\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255, unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/database/src/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinTable, ManyToMany, OneToOne } from 'typeorm';\nimport { BaseEntity } from './base.entity';\nimport { Profile } from './profile.entity';\nimport { Role } from './role.entity';\n\n@Entity('user')\nexport class User extends BaseEntity {\n  @Column({ type: 'varchar', length: 255, unique: true, nullable: true })\n  email: string | null;\n\n  @Column({ type: 'varchar', length: 255, unique: true, nullable: true })\n  username: string | null;\n\n  @Column({ type: 'varchar', length: 255 })\n  password: string;\n\n  @Column({ type: 'tinyint', default: 0 })\n  status: 0 | 1;\n\n  // 用户和角色是多对多关系\n  @ManyToMany(() => Role, (role) => role.users)\n  @JoinTable({ name: 'users_roles' })\n  roles: Role[];\n\n  // 用户和个人信息是一对一关系\n  @OneToOne(() => Profile, (profile) => profile.user, { cascade: true })\n  profile: Profile;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UserController.html': {
      url: 'controllers/UserController.html',
      title: 'controller - UserController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAvatar\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Async\n                                profileGet\n                            \n                            \n                                    \n                                    Async\n                                profileUpdate\n                            \n                            \n                                    \n                                    Async\n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                uploadAvatar\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                userCreate\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                userDelete\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userGet\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userListGet\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userReset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvatar(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('avatar')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        profileGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileGet(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        profileUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileUpdate(req: Request, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('profile')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfileDto\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(req: Request, updatePasswordDto: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('reset/password')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePasswordDto\n                                            \n                                                            UpdatePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(req: Request, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('avatar')@HttpCode(HttpStatus.OK)@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        userCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userCreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        userDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    userDelete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    userGet(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    userListGet(page?: number, pageSize?: number, username?: string, name?: string, phone?: string, address?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                phone\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    userReset(id: number, resetPasswordDto: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/reset/password')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resetPasswordDto\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userUpdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id(\\d+)')@Roles(Role.Admin)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/user/user.controller.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@common/decorator/roles.decorator';\nimport { AuthGuard } from '@common/guards/auth.guard';\nimport { RolesGuard } from '@common/guards/roles.guard';\nimport {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiTags } from '@nestjs/swagger';\nimport { MIME_TYPE } from '@shared/enum/mime.enum';\nimport { Role } from '@shared/enum/role.enum';\nimport { formatResponse } from '@shared/helpers/response.helper';\nimport { USER_SERVICE_NAME } from 'config/microservice.config';\nimport { Request, Response } from 'express';\nimport { existsSync, mkdirSync } from 'fs';\nimport { diskStorage } from 'multer';\nimport { extname, join } from 'path';\nimport { defaultIfEmpty, lastValueFrom } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FileSizeValidationPipe } from '../file/pipe/file-size.pipe';\nimport { FileTypeValidationPipe } from '../file/pipe/file-type.pipe';\nimport { UpdatePasswordDto } from './dto/change-pass.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ResetPasswordDto } from './dto/reset-pass.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@ApiTags('用户模块')\n@Controller('user')\n@UseGuards(AuthGuard)\nexport class UserController {\n  constructor(\n    @Inject(USER_SERVICE_NAME) private readonly userClient: ClientProxy,\n  ) {}\n\n  // HTTP GET /user/profile —— 获取个人信息\n  @Get('profile')\n  async profileGet(@Req() req: Request) {\n    const payload = { userId: req.user.userId };\n    const result = await lastValueFrom(\n      this.userClient.send({ cmd: 'user.profile.get' }, payload),\n    );\n    return formatResponse(200, result, '获取个人信息成功');\n  }\n\n  // HTTP PUT /user/profile —— 更新个人信息\n  @Put('profile')\n  async profileUpdate(\n    @Req() req: Request,\n    @Body() updateProfileDto: UpdateProfileDto,\n  ) {\n    const payload = { userId: req.user.userId, dto: updateProfileDto };\n    const result = await lastValueFrom(\n      this.userClient.send({ cmd: 'user.profile.update' }, payload),\n    );\n    return formatResponse(200, result, '更新个人信息成功');\n  }\n\n  // HTTP POST /user/avatar —— 上传个人头像\n  @Post('avatar')\n  @HttpCode(HttpStatus.OK)\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadAvatar(\n    @Req() req: Request,\n    @UploadedFile(\n      new FileSizeValidationPipe('1MB'),\n      new FileTypeValidationPipe([MIME_TYPE.PNG, MIME_TYPE.JPEG]),\n    )\n    file: Express.Multer.File,\n  ) {\n    try {\n      await lastValueFrom(\n        this.userClient\n          .send(\n            { cmd: 'user.avatar.upload' },\n            {\n              userId: req.user.userId,\n              fileData: file.buffer.toString('base64'),\n              mimetype: file.mimetype,\n            },\n          )\n          .pipe(defaultIfEmpty(null)),\n      );\n      return formatResponse(200, null, '上传头像成功');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // HTTP GET /user/avatar —— 获取个人头像\n  @Get('avatar')\n  async getAvatar(@Req() req: Request, @Res() res: Response) {\n    const avatarPath = await lastValueFrom(\n      this.userClient.send(\n        { cmd: 'user.avatar.get' },\n        { userId: req.user.userId },\n      ),\n    );\n    if (avatarPath) {\n      if (!existsSync(avatarPath)) {\n        throw new BadRequestException('头像文件不存在');\n      }\n      return res.sendFile(avatarPath);\n    } else {\n      return formatResponse(404, null, '头像不存在');\n    }\n  }\n\n  // HTTP PUT /user/reset/password —— 修改密码\n  @Put('reset/password')\n  async updatePassword(\n    @Req() req: Request,\n    @Body() updatePasswordDto: UpdatePasswordDto,\n  ) {\n    const payload = { userId: req.user.userId, dto: updatePasswordDto };\n    await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'user.password.update' }, payload)\n        .pipe(defaultIfEmpty(null)),\n    );\n    return formatResponse(200, null, '修改密码成功');\n  }\n\n  // HTTP POST /user/logout —— 退出登录\n  @Post('logout')\n  async logout() {\n    await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'user.logout' }, {})\n        .pipe(defaultIfEmpty(null)),\n    );\n    return formatResponse(200, null, '退出登录成功');\n  }\n\n  // HTTP GET /user/list —— 获取用户列表（需要管理员权限）\n  @Get('list')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userListGet(\n    @Query('page') page?: number,\n    @Query('pageSize') pageSize?: number,\n    @Query('username') username?: string,\n    @Query('name') name?: string,\n    @Query('phone') phone?: string,\n    @Query('address') address?: string,\n  ) {\n    const payload = { page, pageSize, username, name, phone, address };\n    const result = await lastValueFrom(\n      this.userClient.send({ cmd: 'user.list.get' }, payload),\n    );\n    return formatResponse(200, result, '获取用户列表成功');\n  }\n\n  // HTTP POST /user/create —— 创建单个用户（需要管理员权限）\n  @Post('create')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.CREATED)\n  async userCreate(@Body() createUserDto: CreateUserDto) {\n    await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'user.create' }, createUserDto)\n        .pipe(defaultIfEmpty(null)),\n    );\n    return formatResponse(201, null, '创建用户成功');\n  }\n\n  // HTTP GET /user/:id —— 获取单个用户信息（需要管理员权限）\n  @Get(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userGet(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    const payload = { id };\n    const result = await lastValueFrom(\n      this.userClient.send({ cmd: 'user.get' }, payload),\n    );\n    return formatResponse(200, result, '获取用户信息成功');\n  }\n\n  // HTTP DELETE /user/:id —— 删除单个用户（需要管理员权限）\n  @Delete(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async userDelete(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n  ) {\n    const payload = { id };\n    return this.userClient\n      .send({ cmd: 'user.delete' }, payload)\n      .pipe(defaultIfEmpty(null));\n  }\n\n  // HTTP PUT /user/:id —— 更新单个用户（需要管理员权限）\n  @Put(':id(\\d+)')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userUpdate(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    const payload = { id, dto: updateUserDto };\n    await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'user.update' }, payload)\n        .pipe(defaultIfEmpty(null)),\n    );\n    return formatResponse(200, null, '更新用户信息成功');\n  }\n\n  // HTTP PUT /user/:id/reset/password —— 重置用户密码（需要管理员权限）\n  @Put(':id/reset/password')\n  @Roles(Role.Admin)\n  @UseGuards(RolesGuard)\n  async userReset(\n    @Param(\n      'id',\n      new ParseIntPipe({ errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE }),\n    )\n    id: number,\n    @Body() resetPasswordDto: ResetPasswordDto,\n  ) {\n    const payload = { id, dto: resetPasswordDto };\n    await lastValueFrom(\n      this.userClient\n        .send({ cmd: 'user.password.reset' }, payload)\n        .pipe(defaultIfEmpty(null)),\n    );\n    return formatResponse(200, null, '重置用户密码成功');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UserController-1.html': {
      url: 'controllers/UserController-1.html',
      title: 'controller - UserController-1',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/user.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                用户模块微服务控制器\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findByEmail\n                            \n                            \n                                    \n                                    Async\n                                findByEmailAndUsername\n                            \n                            \n                                    \n                                    Async\n                                findByUsername\n                            \n                            \n                                    \n                                    Async\n                                getAvatar\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Async\n                                profileGet\n                            \n                            \n                                    \n                                    Async\n                                profileUpdate\n                            \n                            \n                                    \n                                    Async\n                                updatePassword\n                            \n                            \n                                    \n                                    Async\n                                uploadAvatar\n                            \n                            \n                                    \n                                    Async\n                                userActivate\n                            \n                            \n                                    \n                                    Async\n                                userCreate\n                            \n                            \n                                    \n                                    Async\n                                userDelete\n                            \n                            \n                                    \n                                    Async\n                                userGet\n                            \n                            \n                                    \n                                    Async\n                                userListGet\n                            \n                            \n                                    \n                                    Async\n                                userReset\n                            \n                            \n                                    \n                                    Async\n                                userUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.find.byEmail'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findByEmailAndUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmailAndUsername(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.find.byLogin'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.find.byUsername'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvatar(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.avatar.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.logout'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        profileGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileGet(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.profile.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        profileUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileUpdate(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.profile.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.password.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.avatar.upload'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userActivate(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.update.activate'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userCreate(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.create'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    userDelete(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.delete'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    userGet(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userListGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    userListGet(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.list.get'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    userReset(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.password.reset'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    userUpdate(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'user.update'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user-service/src/modules/user/user.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { UpdatePasswordDto } from './dto/change-pass.dto';\nimport { ResetPasswordDto } from './dto/reset-pass.dto';\n\n/**\n * 用户模块微服务控制器\n */\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  // 获取个人信息\n  @MessagePattern({ cmd: 'user.profile.get' })\n  async profileGet(@Payload() payload: { userId: number }) {\n    return this.userService.profileGet(payload.userId);\n  }\n\n  // 更新个人信息\n  @MessagePattern({ cmd: 'user.profile.update' })\n  async profileUpdate(\n    @Payload() payload: { userId: number; dto: UpdateProfileDto },\n  ) {\n    return this.userService.profileUpdate(payload.userId, payload.dto);\n  }\n\n  // 上传个人头像\n  @MessagePattern({ cmd: 'user.avatar.upload' })\n  async uploadAvatar(\n    @Payload() payload: { userId: number; fileData: string; mimetype: string },\n  ) {\n    return this.userService.updateAvatar(\n      payload.userId,\n      Buffer.from(payload.fileData, 'base64'),\n      payload.mimetype,\n    );\n  }\n\n  // 获取个人头像路径\n  @MessagePattern({ cmd: 'user.avatar.get' })\n  async getAvatar(@Payload() payload: { userId: number }) {\n    return this.userService.getAvatar(payload.userId);\n  }\n\n  // 修改密码\n  @MessagePattern({ cmd: 'user.password.update' })\n  async updatePassword(\n    @Payload() payload: { userId: number; dto: UpdatePasswordDto },\n  ) {\n    return this.userService.updatePassword(\n      payload.userId,\n      payload.dto.confirmPassword,\n    );\n  }\n\n  // 退出登录\n  @MessagePattern({ cmd: 'user.logout' })\n  async logout() {\n    return { status: 200, message: '退出登录成功' };\n  }\n\n  // 获取用户列表\n  @MessagePattern({ cmd: 'user.list.get' })\n  async userListGet(\n    @Payload()\n    payload: {\n      page?: number;\n      pageSize?: number;\n      username?: string;\n      name?: string;\n      phone?: string;\n      address?: string;\n    },\n  ) {\n    return this.userService.userListGet(\n      payload.page,\n      payload.pageSize,\n      payload,\n    );\n  }\n\n  // 创建用户\n  @MessagePattern({ cmd: 'user.create' })\n  async userCreate(@Payload() dto: CreateUserDto) {\n    const { profile, ...user } = dto;\n    await this.userService.setRoles(user as any);\n    await this.userService.userCreate(user as any, profile);\n    return { status: 201, message: '用户创建成功' };\n  }\n\n  // 获取单个用户信息\n  @MessagePattern({ cmd: 'user.get' })\n  async userGet(@Payload() payload: { id: number }) {\n    return this.userService.userGet(payload.id);\n  }\n\n  // 删除用户\n  @MessagePattern({ cmd: 'user.delete' })\n  async userDelete(@Payload() payload: { id: number }) {\n    return this.userService.userDelete(payload.id);\n  }\n\n  // 更新用户\n  @MessagePattern({ cmd: 'user.update' })\n  async userUpdate(@Payload() payload: { id: number; dto: UpdateUserDto }) {\n    return this.userService.userUpdate(payload.id, payload.dto);\n  }\n\n  @MessagePattern({ cmd: 'user.update.activate' })\n  async userActivate(@Payload() payload: { id: number }) {\n    return this.userService.userActivate(payload.id);\n  }\n\n  // 重置用户密码\n  @MessagePattern({ cmd: 'user.password.reset' })\n  async userReset(@Payload() payload: { id: number; dto: ResetPasswordDto }) {\n    return this.userService.userReset(payload.id, payload.dto.password);\n  }\n\n  // 根据邮箱和用户名查找用户\n  @MessagePattern({ cmd: 'user.find.byLogin' })\n  async findByEmailAndUsername(@Payload() payload: { login: string }) {\n    return this.userService.findByLogin(payload.login);\n  }\n\n  // 根据用户名查找用户\n  @MessagePattern({ cmd: 'user.find.byUsername' })\n  async findByUsername(@Payload() payload: { username: string }) {\n    return this.userService.findByUsername(payload.username);\n  }\n\n  // 根据邮箱查找用户\n  @MessagePattern({ cmd: 'user.find.byEmail' })\n  async findByEmail(@Payload() payload: { email: string }) {\n    return this.userService.findByEmail(payload.email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/UserModule.html': {
      url: 'modules/UserModule.html',
      title: 'module - UserModule',
      body: "\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            用户模块\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport {\n  USER_SERVICE_NAME,\n  USER_SERVICE_TCP_PORT,\n} from 'config/microservice.config';\nimport { UserController } from './user.controller';\n\n/**\n * 用户模块\n */\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: USER_SERVICE_NAME,\n        transport: Transport.TCP,\n        options: { host: 'localhost', port: USER_SERVICE_TCP_PORT },\n      },\n    ]),\n  ],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UserPayload.html': {
      url: 'interfaces/UserPayload.html',
      title: 'interface - UserPayload',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/common/src/guards/auth.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport interface UserPayload {\n  userId: number;\n  roles: string[];\n  username?: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserPayload;\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/UserQuery.html': {
      url: 'interfaces/UserQuery.html',
      title: 'interface - UserQuery',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/user/dto/get-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface UserQuery {\n  page: number;\n  pageSize?: number;\n  username?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/UserQuery-1.html': {
      url: 'interfaces/UserQuery-1.html',
      title: 'interface - UserQuery-1',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user-service/src/modules/user/dto/get-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface UserQuery {\n  page: number;\n  pageSize?: number;\n  username?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-model/ai-model.controller.ts\n            \n            controller\n            AiModelController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-model/ai-model.service.ts\n            \n            injectable\n            AiModelService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-model/dto/create-ai-model.dto.ts\n            \n            class\n            CreateAiModelDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-model/dto/update-ai-model.dto.ts\n            \n            class\n            UpdateAiModelDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/ai-service.controller.ts\n            \n            controller\n            AiServiceController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/dto/create-ai-config.dto.ts\n            \n            class\n            CreateAiConfigDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts\n            \n            class\n            ConfigDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/dto/create-ai-configs.dto.ts\n            \n            class\n            CreateAiConfigsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/dto/create-ai-service.dto.ts\n            \n            class\n            CreateAiServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/dto/update-ai-config.dto.ts\n            \n            class\n            UpdateAiConfigDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/dto/update-ai-service.dto.ts\n            \n            class\n            UpdateAiServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/services/ai-service-config.service.ts\n            \n            injectable\n            AiConfigsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/ai-service/services/ai-service.service.ts\n            \n            injectable\n            AiServiceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/auth.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/dataset/dataset.controller.ts\n            \n            controller\n            DatasetController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/diagnosis/diagnosis.controller.ts\n            \n            controller\n            DiagnosisController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/diagnosis/diagnosis.service.ts\n            \n            injectable\n            DiagnosisService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/file.controller.ts\n            \n            interface\n            DownloadService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/guards/file.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/guards/file.guard.ts\n            \n            guard\n            FileGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/modules/file/guards/file.guard.ts\n            \n            type alias\n            DownloadRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/guards/files.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/guards/files.guard.ts\n            \n            guard\n            FilesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/modules/file/guards/files.guard.ts\n            \n            type alias\n            DownloadRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/pipe/delete.pipe.ts\n            \n            injectable\n            ParseFileIdsPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/pipe/file-size.pipe.ts\n            \n            injectable\n            FileSizeValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/pipe/file-type.pipe.ts\n            \n            injectable\n            FileTypeValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/pipe/type.pipe.ts\n            \n            injectable\n            ParseFileTypePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/file/services/file-operation.service.ts\n            \n            injectable\n            FileOperationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/knowledge/dto/create-knowledge.dto.ts\n            \n            class\n            CreatePlantDiseaseKnowledgeDto\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/knowledge/dto/update-knowledge.dto.ts\n            \n            class\n            UpdatePlantDiseaseKnowledgeDto\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/knowledge/knowledge.controller.ts\n            \n            controller\n            KnowledgeController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/knowledge/knowledge.entity.ts\n            \n            entity\n            PlantDiseaseKnowledge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/knowledge/knowledge.entity.ts\n            \n            class\n            PlantDiseaseKnowledge\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/knowledge/knowledge.service.ts\n            \n            injectable\n            KnowledgeService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/plant/dto/create-plant.dto.ts\n            \n            class\n            CreatePlantDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/plant/dto/update-plant.dto.ts\n            \n            class\n            UpdatePlantDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/plant/plant.controller.ts\n            \n            controller\n            PlantController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/plant/plant.service.ts\n            \n            injectable\n            PlantService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/dto/change-pass.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/dto/get-user.dto.ts\n            \n            interface\n            UserQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/dto/reset-pass.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        apps/auth-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/menu/menu.entity.ts\n            \n            entity\n            Menu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth-service/src/modules/menu/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        apps/diagnosis-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/diagnosis-service/src/modules/diagnosis/diagnosis.controller.ts\n            \n            controller\n            DiagnosisController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/diagnosis-service/src/modules/diagnosis/diagnosis.service.ts\n            \n            injectable\n            DiagnosisService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts\n            \n            entity\n            DiagnosisHistory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/diagnosis-service/src/modules/diagnosis/models/diagnosis-history.entity.ts\n            \n            class\n            DiagnosisHistory\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/download-service/src/app.controller.ts\n            \n            controller\n            DownloadController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/download-service/src/app.service.ts\n            \n            injectable\n            DownloadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/download-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/file-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/file-service/src/modules/dataset/dataset.controller.ts\n            \n            controller\n            DatasetController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/file-service/src/modules/dataset/dataset.service.ts\n            \n            injectable\n            DatasetService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/file-service/src/modules/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/file-service/src/modules/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                apps/upload-service/src/app.controller.ts\n            \n            controller\n            UploadController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/upload-service/src/app.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        apps/upload-service/src/app.service.ts\n            \n            type alias\n            UploadTask\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/upload-service/src/dto/task-create.dto.ts\n            \n            class\n            TaskCreateDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/upload-service/src/dto/upload-chunk.dto.ts\n            \n            class\n            UploadChunkDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/upload-service/src/dto/upload-preload.dto.ts\n            \n            class\n            UploadPreloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/upload-service/src/dto/upload-single.dto.ts\n            \n            class\n            UploadSingleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/upload-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/dto/change-pass.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/dto/get-user.dto.ts\n            \n            interface\n            UserQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/dto/reset-pass.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                apps/user-service/src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            AUTH_SERVICE_HTTP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            AUTH_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            AUTH_SERVICE_TCP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            DIAGNOSIS_SERVICE_HTTP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            DIAGNOSIS_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            DIAGNOSIS_SERVICE_TCP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            DOWNLOAD_SERVICE_HTTP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            DOWNLOAD_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            DOWNLOAD_SERVICE_TCP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            FILE_SERVICE_HTTP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            FILE_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            FILE_SERVICE_TCP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            UPLOAD_SERVICE_HTTP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            UPLOAD_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            UPLOAD_SERVICE_TCP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            USER_SERVICE_HTTP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            USER_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        config/microservice.config.ts\n            \n            variable\n            USER_SERVICE_TCP_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/ai-model.entity.ts\n            \n            entity\n            AIModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/ai-service-access-log.entity.ts\n            \n            entity\n            AiServiceAccessLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/ai-service-config.entity.ts\n            \n            entity\n            AiServiceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/ai-service-log.entity.ts\n            \n            entity\n            AiServiceLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/ai-service.entity.ts\n            \n            entity\n            AiService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/ai-service.entity.ts\n            \n            class\n            AiService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                libs/database/src/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/database/src/entities/dataset.entity.ts\n            \n            entity\n            Dataset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/dataset.entity.ts\n            \n            class\n            Dataset\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/database/src/entities/diagnosis-history.entity.ts\n            \n            entity\n            DiagnosisHistory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/diagnosis-history.entity.ts\n            \n            class\n            DiagnosisHistory\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/database/src/entities/file.entity.ts\n            \n            entity\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                libs/database/src/entities/plant.entity.ts\n            \n            entity\n            Plant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/profile.entity.ts\n            \n            entity\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/task.entity.ts\n            \n            entity\n            Task\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/database/src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/file-operation/src/file-operation.service.ts\n            \n            injectable\n            FileOperationService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                libs/mail/src/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/redis/src/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                        packages/common/src/decorator/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/common/src/decorator/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/common/src/dto/dataset/create-dataset.dto.ts\n            \n            class\n            CreateDatasetDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/common/src/dto/dataset/update-dataset.dto.ts\n            \n            class\n            UpdateDatasetDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/complete-chunk.dto.ts\n            \n            class\n            CompleteChunkDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/create-link.dto.ts\n            \n            class\n            CreateTempLinkDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/download-file.dto.ts\n            \n            class\n            DownloadFilesDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/update-file.dto.ts\n            \n            class\n            UpdateFilesAccessDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/common/src/dto/file/upload-chunk.dto.ts\n            \n            class\n            UploadChunkDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/common/src/dto/image-request.dto.ts\n            \n            class\n            ImageRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/filters/other-exception.filter.ts\n            \n            class\n            OtherExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/filters/rpc-exception.filter.ts\n            \n            class\n            CustomRpcExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/filters/typeorm.filter.ts\n            \n            class\n            TypeormFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/guards/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/guards/auth.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/common/src/guards/auth.guard.ts\n            \n            interface\n            UserPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/common/src/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/common/src/pipe/string-date.pipe.ts\n            \n            injectable\n            ParseStringDatePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/html.ts\n            \n            variable\n            verifyHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            variable\n            MIME_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            ApplicationTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            AppTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            AudioTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            FontTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            ImageTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            MIMETypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            OtherTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/constants/mime.ts\n            \n            type alias\n            VideoTypeValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/shared/src/helpers/response.helper.ts\n            \n            interface\n            ApiResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        packages/shared/src/helpers/response.helper.ts\n            \n            variable\n            formatResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/utils/mime.ts\n            \n            variable\n            getFileType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/utils/mime.ts\n            \n            variable\n            getModelMimeType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/shared/src/utils/parse.ts\n            \n            variable\n            parseSize\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @grpc/grpc-js : ^1.13.0\n        \n            @grpc/proto-loader : ^0.7.13\n        \n            @nestjs/cache-manager : ^3.0.0\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/microservices : ^11.0.11\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @willsoto/nestjs-prometheus : ^6.0.2\n        \n            archiver : ^7.0.1\n        \n            axios : ^1.8.2\n        \n            bcryptjs : ^3.0.2\n        \n            cache-manager : ^6.4.1\n        \n            cache-manager-redis-store : ^3.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            express : ^4.21.2\n        \n            ioredis : ^5.6.0\n        \n            multer : 1.4.5-lts.1\n        \n            mysql2 : ^3.12.0\n        \n            nodemailer : ^6.10.0\n        \n            passport-jwt : ^4.0.1\n        \n            prom-client : ^15.1.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/enumerations.html': {
      url: 'miscellaneous/enumerations.html',
      title: 'miscellaneous-enumerations - enumerations',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Application   (packages/.../mime.enum.ts)\n                        \n                        \n                            Audio   (packages/.../mime.enum.ts)\n                        \n                        \n                            Compression   (packages/.../mime.enum.ts)\n                        \n                        \n                            ConfigEnum   (packages/.../config.enum.ts)\n                        \n                        \n                            Document   (packages/.../mime.enum.ts)\n                        \n                        \n                            Font   (packages/.../mime.enum.ts)\n                        \n                        \n                            Image   (packages/.../mime.enum.ts)\n                        \n                        \n                            LogEnum   (packages/.../config.enum.ts)\n                        \n                        \n                            MIME_TYPE   (packages/.../mime.enum.ts)\n                        \n                        \n                            Role   (packages/.../role.enum.ts)\n                        \n                        \n                            Status   (packages/.../status.enum.ts)\n                        \n                        \n                            UserStatus   (packages/.../user.enum.ts)\n                        \n                        \n                            Video   (packages/.../mime.enum.ts)\n                        \n                        \n                            Web   (packages/.../mime.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/shared/src/enum/mime.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Application\n                    \n                \n                        \n                            \n                                 EXE\n                            \n                        \n                        \n                            \n                                Value : application/x-msdownload\n                            \n                        \n                        \n                            \n                                 MSI\n                            \n                        \n                        \n                            \n                                Value : application/x-msi\n                            \n                        \n                        \n                            \n                                 APK\n                            \n                        \n                        \n                            \n                                Value : application/vnd.android.package-archive\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Audio\n                    \n                \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : audio/mpeg\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : audio/wav\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : audio/ogg\n                            \n                        \n                        \n                            \n                                 AAC\n                            \n                        \n                        \n                            \n                                Value : audio/aac\n                            \n                        \n                        \n                            \n                                 FLAC\n                            \n                        \n                        \n                            \n                                Value : audio/flac\n                            \n                        \n                        \n                            \n                                 M4A\n                            \n                        \n                        \n                            \n                                Value : audio/mp4\n                            \n                        \n                        \n                            \n                                 WMA\n                            \n                        \n                        \n                            \n                                Value : audio/x-ms-wma\n                            \n                        \n                        \n                            \n                                 AMR\n                            \n                        \n                        \n                            \n                                Value : audio/amr\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Compression\n                    \n                \n                        \n                            \n                                 ZIP\n                            \n                        \n                        \n                            \n                                Value : application/zip\n                            \n                        \n                        \n                            \n                                 GZ\n                            \n                        \n                        \n                            \n                                Value : application/gzip\n                            \n                        \n                        \n                            \n                                 TAR\n                            \n                        \n                        \n                            \n                                Value : application/x-tar\n                            \n                        \n                        \n                            \n                                 RAR\n                            \n                        \n                        \n                            \n                                Value : application/x-rar-compressed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Document\n                    \n                \n                        \n                            \n                                 PDF\n                            \n                        \n                        \n                            \n                                Value : application/pdf\n                            \n                        \n                        \n                            \n                                 DOC\n                            \n                        \n                        \n                            \n                                Value : application/msword\n                            \n                        \n                        \n                            \n                                 DOCX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.wordprocessingml.document\n                            \n                        \n                        \n                            \n                                 XLS\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-excel\n                            \n                        \n                        \n                            \n                                 XLSX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n                            \n                        \n                        \n                            \n                                 PPT\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-powerpoint\n                            \n                        \n                        \n                            \n                                 PPTX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.presentationml.presentation\n                            \n                        \n                        \n                            \n                                 RTF\n                            \n                        \n                        \n                            \n                                Value : application/rtf\n                            \n                        \n                        \n                            \n                                 TXT\n                            \n                        \n                        \n                            \n                                Value : text/plain\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : text/csv\n                            \n                        \n                        \n                            \n                                 ZIP\n                            \n                        \n                        \n                            \n                                Value : application/zip\n                            \n                        \n                        \n                            \n                                 TAR\n                            \n                        \n                        \n                            \n                                Value : application/x-tar\n                            \n                        \n                        \n                            \n                                 GZ\n                            \n                        \n                        \n                            \n                                Value : application/gzip\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : application/json\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : application/xml\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Font\n                    \n                \n                        \n                            \n                                 TTF\n                            \n                        \n                        \n                            \n                                Value : font/ttf\n                            \n                        \n                        \n                            \n                                 OTF\n                            \n                        \n                        \n                            \n                                Value : font/otf\n                            \n                        \n                        \n                            \n                                 WOFF\n                            \n                        \n                        \n                            \n                                Value : font/woff\n                            \n                        \n                        \n                            \n                                 WOFF2\n                            \n                        \n                        \n                            \n                                Value : font/woff2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n                        \n                            \n                                 JPEG\n                            \n                        \n                        \n                            \n                                Value : image/jpeg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : image/png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : image/gif\n                            \n                        \n                        \n                            \n                                 BMP\n                            \n                        \n                        \n                            \n                                Value : image/bmp\n                            \n                        \n                        \n                            \n                                 TIFF\n                            \n                        \n                        \n                            \n                                Value : image/tiff\n                            \n                        \n                        \n                            \n                                 WEBP\n                            \n                        \n                        \n                            \n                                Value : image/webp\n                            \n                        \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                Value : image/svg+xml\n                            \n                        \n                        \n                            \n                                 HEIF\n                            \n                        \n                        \n                            \n                                Value : image/heif\n                            \n                        \n                        \n                            \n                                 HEIC\n                            \n                        \n                        \n                            \n                                Value : image/heic\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MIME_TYPE\n                    \n                \n                        \n                            \n                                 JPEG\n                            \n                        \n                        \n                            \n                                Value : image/jpeg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : image/png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : image/gif\n                            \n                        \n                        \n                            \n                                 BMP\n                            \n                        \n                        \n                            \n                                Value : image/bmp\n                            \n                        \n                        \n                            \n                                 TIFF\n                            \n                        \n                        \n                            \n                                Value : image/tiff\n                            \n                        \n                        \n                            \n                                 WEBP\n                            \n                        \n                        \n                            \n                                Value : image/webp\n                            \n                        \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                Value : image/svg+xml\n                            \n                        \n                        \n                            \n                                 HEIF\n                            \n                        \n                        \n                            \n                                Value : image/heif\n                            \n                        \n                        \n                            \n                                 HEIC\n                            \n                        \n                        \n                            \n                                Value : image/heic\n                            \n                        \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : video/mp4\n                            \n                        \n                        \n                            \n                                 AVI\n                            \n                        \n                        \n                            \n                                Value : video/x-msvideo\n                            \n                        \n                        \n                            \n                                 MOV\n                            \n                        \n                        \n                            \n                                Value : video/quicktime\n                            \n                        \n                        \n                            \n                                 WMV\n                            \n                        \n                        \n                            \n                                Value : video/x-ms-wmv\n                            \n                        \n                        \n                            \n                                 MKV\n                            \n                        \n                        \n                            \n                                Value : video/x-matroska\n                            \n                        \n                        \n                            \n                                 FLV\n                            \n                        \n                        \n                            \n                                Value : video/x-flv\n                            \n                        \n                        \n                            \n                                 WEBM\n                            \n                        \n                        \n                            \n                                Value : video/webm\n                            \n                        \n                        \n                            \n                                 OGG_VIDEO\n                            \n                        \n                        \n                            \n                                Value : video/ogg\n                            \n                        \n                        \n                            \n                                 MPEG\n                            \n                        \n                        \n                            \n                                Value : video/mpeg\n                            \n                        \n                        \n                            \n                                 THREE_GP\n                            \n                        \n                        \n                            \n                                Value : video/3gpp\n                            \n                        \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : audio/mpeg\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : audio/wav\n                            \n                        \n                        \n                            \n                                 OGG_AUDIO\n                            \n                        \n                        \n                            \n                                Value : audio/ogg\n                            \n                        \n                        \n                            \n                                 AAC\n                            \n                        \n                        \n                            \n                                Value : audio/aac\n                            \n                        \n                        \n                            \n                                 FLAC\n                            \n                        \n                        \n                            \n                                Value : audio/flac\n                            \n                        \n                        \n                            \n                                 M4A\n                            \n                        \n                        \n                            \n                                Value : audio/mp4\n                            \n                        \n                        \n                            \n                                 WMA\n                            \n                        \n                        \n                            \n                                Value : audio/x-ms-wma\n                            \n                        \n                        \n                            \n                                 AMR\n                            \n                        \n                        \n                            \n                                Value : audio/amr\n                            \n                        \n                        \n                            \n                                 PDF\n                            \n                        \n                        \n                            \n                                Value : application/pdf\n                            \n                        \n                        \n                            \n                                 DOC\n                            \n                        \n                        \n                            \n                                Value : application/msword\n                            \n                        \n                        \n                            \n                                 DOCX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.wordprocessingml.document\n                            \n                        \n                        \n                            \n                                 XLS\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-excel\n                            \n                        \n                        \n                            \n                                 XLSX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n                            \n                        \n                        \n                            \n                                 PPT\n                            \n                        \n                        \n                            \n                                Value : application/vnd.ms-powerpoint\n                            \n                        \n                        \n                            \n                                 PPTX\n                            \n                        \n                        \n                            \n                                Value : application/vnd.openxmlformats-officedocument.presentationml.presentation\n                            \n                        \n                        \n                            \n                                 RTF\n                            \n                        \n                        \n                            \n                                Value : application/rtf\n                            \n                        \n                        \n                            \n                                 TXT\n                            \n                        \n                        \n                            \n                                Value : text/plain\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : text/csv\n                            \n                        \n                        \n                            \n                                 ZIP\n                            \n                        \n                        \n                            \n                                Value : application/zip\n                            \n                        \n                        \n                            \n                                 TAR\n                            \n                        \n                        \n                            \n                                Value : application/x-tar\n                            \n                        \n                        \n                            \n                                 GZ\n                            \n                        \n                        \n                            \n                                Value : application/gzip\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : application/json\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : application/xml\n                            \n                        \n                        \n                            \n                                 HTML\n                            \n                        \n                        \n                            \n                                Value : text/html\n                            \n                        \n                        \n                            \n                                 CSS\n                            \n                        \n                        \n                            \n                                Value : text/css\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : application/javascript\n                            \n                        \n                        \n                            \n                                 RAR\n                            \n                        \n                        \n                            \n                                Value : application/x-rar-compressed\n                            \n                        \n                        \n                            \n                                 EXE\n                            \n                        \n                        \n                            \n                                Value : application/x-msdownload\n                            \n                        \n                        \n                            \n                                 MSI\n                            \n                        \n                        \n                            \n                                Value : application/x-msi\n                            \n                        \n                        \n                            \n                                 APK\n                            \n                        \n                        \n                            \n                                Value : application/vnd.android.package-archive\n                            \n                        \n                        \n                            \n                                 TTF\n                            \n                        \n                        \n                            \n                                Value : font/ttf\n                            \n                        \n                        \n                            \n                                 OTF\n                            \n                        \n                        \n                            \n                                Value : font/otf\n                            \n                        \n                        \n                            \n                                 WOFF\n                            \n                        \n                        \n                            \n                                Value : font/woff\n                            \n                        \n                        \n                            \n                                 WOFF2\n                            \n                        \n                        \n                            \n                                Value : font/woff2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Video\n                    \n                \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : video/mp4\n                            \n                        \n                        \n                            \n                                 AVI\n                            \n                        \n                        \n                            \n                                Value : video/x-msvideo\n                            \n                        \n                        \n                            \n                                 MOV\n                            \n                        \n                        \n                            \n                                Value : video/quicktime\n                            \n                        \n                        \n                            \n                                 WMV\n                            \n                        \n                        \n                            \n                                Value : video/x-ms-wmv\n                            \n                        \n                        \n                            \n                                 MKV\n                            \n                        \n                        \n                            \n                                Value : video/x-matroska\n                            \n                        \n                        \n                            \n                                 FLV\n                            \n                        \n                        \n                            \n                                Value : video/x-flv\n                            \n                        \n                        \n                            \n                                 WEBM\n                            \n                        \n                        \n                            \n                                Value : video/webm\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : video/ogg\n                            \n                        \n                        \n                            \n                                 MPEG\n                            \n                        \n                        \n                            \n                                Value : video/mpeg\n                            \n                        \n                        \n                            \n                                 THREE_GP\n                            \n                        \n                        \n                            \n                                Value : video/3gpp\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Web\n                    \n                \n                        \n                            \n                                 HTML\n                            \n                        \n                        \n                            \n                                Value : text/html\n                            \n                        \n                        \n                            \n                                 CSS\n                            \n                        \n                        \n                            \n                                Value : text/css\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : application/javascript\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : application/json\n                            \n                        \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                Value : image/svg+xml\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : application/xml\n                            \n                        \n            \n        \n\n    packages/shared/src/enum/config.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigEnum\n                    \n                \n                        \n                            \n                                 DB_TYPE\n                            \n                        \n                        \n                            \n                                Value : DB_TYPE\n                            \n                        \n                        \n                            \n                                 DB_HOST\n                            \n                        \n                        \n                            \n                                Value : DB_HOST\n                            \n                        \n                        \n                            \n                                 DB_PORT\n                            \n                        \n                        \n                            \n                                Value : DB_PORT\n                            \n                        \n                        \n                            \n                                 DB_DATABASE\n                            \n                        \n                        \n                            \n                                Value : DB_DATABASE\n                            \n                        \n                        \n                            \n                                 DB_USERNAME\n                            \n                        \n                        \n                            \n                                Value : DB_USERNAME\n                            \n                        \n                        \n                            \n                                 DB_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : DB_PASSWORD\n                            \n                        \n                        \n                            \n                                 DB_SYNC\n                            \n                        \n                        \n                            \n                                Value : DB_SYNC\n                            \n                        \n                        \n                            \n                                 SECRET\n                            \n                        \n                        \n                            \n                                Value : SECRET\n                            \n                        \n                        \n                            \n                                 REDIS_HOST\n                            \n                        \n                        \n                            \n                                Value : REDIS_HOST\n                            \n                        \n                        \n                            \n                                 REDIS_PORT\n                            \n                        \n                        \n                            \n                                Value : REDIS_PORT\n                            \n                        \n                        \n                            \n                                 REDIS_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : REDIS_PASSWORD\n                            \n                        \n                        \n                            \n                                 REDIS_RECONNECT\n                            \n                        \n                        \n                            \n                                Value : REDIS_RECONNECT\n                            \n                        \n                        \n                            \n                                 MAIL_HOST\n                            \n                        \n                        \n                            \n                                Value : MAIL_HOST\n                            \n                        \n                        \n                            \n                                 MAIL_PORT\n                            \n                        \n                        \n                            \n                                Value : MAIL_PORT\n                            \n                        \n                        \n                            \n                                 MAIL_SECURE\n                            \n                        \n                        \n                            \n                                Value : MAIL_SECURE\n                            \n                        \n                        \n                            \n                                 MAIL_USER\n                            \n                        \n                        \n                            \n                                Value : MAIL_USER\n                            \n                        \n                        \n                            \n                                 MAIL_PASS\n                            \n                        \n                        \n                            \n                                Value : MAIL_PASS\n                            \n                        \n                        \n                            \n                                 MAIL_FROM\n                            \n                        \n                        \n                            \n                                Value : MAIL_FROM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogEnum\n                    \n                \n                        \n                            \n                                 LOG_LEVEL\n                            \n                        \n                        \n                            \n                                Value : LOG_LEVEL\n                            \n                        \n                        \n                            \n                                 LOG_ON\n                            \n                        \n                        \n                            \n                                Value : LOG_ON\n                            \n                        \n                        \n                            \n                                 TIMESTAMP\n                            \n                        \n                        \n                            \n                                Value : TIMESTAMP\n                            \n                        \n            \n        \n\n    packages/shared/src/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Expert\n                            \n                        \n                        \n                            \n                                Value : expert\n                            \n                        \n            \n        \n\n    packages/shared/src/enum/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : in_progress\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : failed\n                            \n                        \n            \n        \n\n    packages/shared/src/enum/user.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/auth-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/diagnosis-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/file-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/download-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/upload-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body: '\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you\'re ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you\'d like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AiModelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AiServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatasetModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatasetModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiagnosisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiagnosisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileOperationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KnowledgeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlantModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiModelModule\n\n\n\ncluster_AiModelModule_providers\n\n\n\ncluster_AiServiceModule\n\n\n\ncluster_AiServiceModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DatasetModule\n\n\n\ncluster_DatasetModule_providers\n\n\n\ncluster_DiagnosisModule\n\n\n\ncluster_DiagnosisModule_imports\n\n\n\ncluster_DiagnosisModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_KnowledgeModule\n\n\n\ncluster_KnowledgeModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_PlantModule\n\n\n\ncluster_PlantModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAiModelService\n\nAiModelService\n\n\n\nAiModelModule\n\nAiModelModule\n\nAiModelModule -->\n\nAiModelService->AiModelModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiModelModule->AppModule\n\n\n\n\n\nAiConfigsService\n\nAiConfigsService\n\n\n\nAiServiceModule\n\nAiServiceModule\n\nAiServiceModule -->\n\nAiConfigsService->AiServiceModule\n\n\n\n\n\nAiServiceService\n\nAiServiceService\n\nAiServiceModule -->\n\nAiServiceService->AiServiceModule\n\n\n\nAppModule -->\n\nAiServiceModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDiagnosisModule\n\nDiagnosisModule\n\nDiagnosisModule -->\n\nDatabaseModule->DiagnosisModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nDatabaseModule->FileModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\nAppModule -->\n\nDiagnosisModule->AppModule\n\n\n\nAppModule -->\n\nDiagnosisModule->AppModule\n\n\n\n\n\nDatasetModule\n\nDatasetModule\n\nAppModule -->\n\nDatasetModule->AppModule\n\n\n\nAppModule -->\n\nDatasetModule->AppModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\nDiagnosisModule -->\n\nFileModule->DiagnosisModule\n\n\n\n\n\nFileOperationService \n\nFileOperationService \n\nFileOperationService  -->\n\nFileModule->FileOperationService \n\n\n\n\n\nDownloadService\n\nDownloadService\n\nAppModule -->\n\nDownloadService->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nUploadService\n\nUploadService\n\nAppModule -->\n\nUploadService->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nKnowledgeModule\n\nKnowledgeModule\n\nAppModule -->\n\nKnowledgeModule->AppModule\n\n\n\n\n\nPlantModule\n\nPlantModule\n\nAppModule -->\n\nPlantModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nMailModule -->\n\nMailModule->MailModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nDatasetService\n\nDatasetService\n\nDatasetModule -->\n\nDatasetService->DatasetModule\n\n\n\n\n\nDiagnosisService\n\nDiagnosisService\n\nDiagnosisModule -->\n\nDiagnosisService->DiagnosisModule\n\n\n\nDiagnosisModule -->\n\nDiagnosisService->DiagnosisModule\n\n\n\n\n\nFileOperationModule\n\nFileOperationModule\n\nDiagnosisModule -->\n\nFileOperationModule->DiagnosisModule\n\n\n\nFileModule -->\n\nFileOperationModule->FileModule\n\n\n\nFileOperationService  -->\n\nFileOperationModule->FileOperationService \n\n\n\n\n\nFileOperationService\n\nFileOperationService\n\nFileModule -->\n\nFileOperationService->FileModule\n\n\n\nFileOperationModule -->\n\nFileOperationService->FileOperationModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nKnowledgeService\n\nKnowledgeService\n\nKnowledgeModule -->\n\nKnowledgeService->KnowledgeModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\nPlantService\n\nPlantService\n\nPlantModule -->\n\nPlantService->PlantModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        29 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    55 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'properties.html': {
      url: 'properties.html',
      title: 'package-properties - properties',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationTypeValue   (packages/.../mime.ts)\n                        \n                        \n                            AppTypeValue   (packages/.../mime.ts)\n                        \n                        \n                            AudioTypeValue   (packages/.../mime.ts)\n                        \n                        \n                            DownloadRequest   (apps/.../file.guard.ts)\n                        \n                        \n                            DownloadRequest   (apps/.../files.guard.ts)\n                        \n                        \n                            FontTypeValue   (packages/.../mime.ts)\n                        \n                        \n                            ImageTypeValue   (packages/.../mime.ts)\n                        \n                        \n                            MIMETypeValue   (packages/.../mime.ts)\n                        \n                        \n                            OtherTypeValue   (packages/.../mime.ts)\n                        \n                        \n                            UploadTask   (apps/.../app.service.ts)\n                        \n                        \n                            VideoTypeValue   (packages/.../mime.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/shared/src/constants/mime.ts\n    \n    \n        \n            \n                \n                    \n                    ApplicationTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AppTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AudioTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FontTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MIMETypeValue\n                \n            \n            \n                \n                        VideoTypeValue | AudioTypeValue | ImageTypeValue | ApplicationTypeValue | FontTypeValue | OtherTypeValue | AppTypeValue\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OtherTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VideoTypeValue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api-gateway/src/modules/file/guards/file.guard.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadRequest\n                \n            \n            \n                \n                        Request\n\n                \n            \n        \n    \n    apps/api-gateway/src/modules/file/guards/files.guard.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadRequest\n                \n            \n            \n                \n                        Request\n\n                \n            \n        \n    \n    apps/upload-service/src/app.service.ts\n    \n    \n        \n            \n                \n                    \n                    UploadTask\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_SERVICE_HTTP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            AUTH_SERVICE_NAME   (config/.../microservice.config.ts)\n                        \n                        \n                            AUTH_SERVICE_TCP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            DIAGNOSIS_SERVICE_HTTP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            DIAGNOSIS_SERVICE_NAME   (config/.../microservice.config.ts)\n                        \n                        \n                            DIAGNOSIS_SERVICE_TCP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            DOWNLOAD_SERVICE_HTTP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            DOWNLOAD_SERVICE_NAME   (config/.../microservice.config.ts)\n                        \n                        \n                            DOWNLOAD_SERVICE_TCP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            FILE_SERVICE_HTTP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            FILE_SERVICE_NAME   (config/.../microservice.config.ts)\n                        \n                        \n                            FILE_SERVICE_TCP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            formatResponse   (packages/.../response.helper.ts)\n                        \n                        \n                            getFileType   (packages/.../mime.ts)\n                        \n                        \n                            getModelMimeType   (packages/.../mime.ts)\n                        \n                        \n                            MIME_TYPE   (packages/.../mime.ts)\n                        \n                        \n                            parseSize   (packages/.../parse.ts)\n                        \n                        \n                            Roles   (packages/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (packages/.../roles.decorator.ts)\n                        \n                        \n                            UPLOAD_SERVICE_HTTP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            UPLOAD_SERVICE_NAME   (config/.../microservice.config.ts)\n                        \n                        \n                            UPLOAD_SERVICE_TCP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            USER_SERVICE_HTTP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            USER_SERVICE_NAME   (config/.../microservice.config.ts)\n                        \n                        \n                            USER_SERVICE_TCP_PORT   (config/.../microservice.config.ts)\n                        \n                        \n                            verifyHtml   (packages/.../html.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/microservice.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE_HTTP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3001\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'AUTH_SERVICE\'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE_TCP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30001\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DIAGNOSIS_SERVICE_HTTP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3003\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DIAGNOSIS_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'DIAGNOSIS_SERVICE\'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DIAGNOSIS_SERVICE_TCP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30003\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_SERVICE_HTTP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3005\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'DOWNLOAD_SERVICE\'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_SERVICE_TCP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30005\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILE_SERVICE_HTTP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3006\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILE_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'FILE_SERVICE\'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILE_SERVICE_TCP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30006\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_SERVICE_HTTP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3004\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'UPLOAD_SERVICE\'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_SERVICE_TCP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30004\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_SERVICE_HTTP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3002\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'USER_SERVICE\'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_SERVICE_TCP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30002\n                    \n                \n\n\n        \n    \n\n    packages/shared/src/helpers/response.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  code: number = 200,\n  data: T | null = null,\n  message: string = \'Success\',\n): ApiResponse => {\n  return { code, data, message };\n}\n                    \n                \n\n\n        \n    \n\n    packages/shared/src/utils/mime.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFileType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (type: string): MIMETypeValue[] => {\n  switch (type) {\n    case \'image\':\n      return Object.values(MIME_TYPE.Image);\n    case \'video\':\n      return [...Object.values(MIME_TYPE.Video)];\n    case \'application\':\n      return [...Object.values(MIME_TYPE.Application)];\n    case \'audio\':\n      return [...Object.values(MIME_TYPE.Audio)];\n    case \'other\':\n      return [\n        ...Object.values(MIME_TYPE.Other),\n        ...Object.values(MIME_TYPE.Font),\n      ];\n    default:\n      return [];\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelMimeType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (extension: string): string => {\n  const modelMimeTypes: { [key: string]: string } = {\n    pth: \'application/pytorch-model\',\n    pt: \'application/pytorch-model\',\n    h5: \'application/tensorflow-model\',\n    pb: \'application/tensorflow-model\',\n    onnx: \'application/onnx-model\',\n    caffemodel: \'application/caffe-model\',\n    weights: \'application/darknet-weights\',\n    params: \'application/mxnet-model\',\n    bin: \'application/huggingface-model\',\n  };\n\n  return modelMimeTypes[extension.toLowerCase()] || \'application/octet-stream\';\n}\n                    \n                \n\n\n        \n    \n\n    packages/shared/src/constants/mime.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MIME_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    // 视频文件类型\n    Video: {\n        MP4: "video/mp4",\n        AVI: "video/avi",\n        MPEG: "video/mpeg",\n        OGG: "video/ogg",\n        WebM: "video/webm",\n        "3GPP": "video/3gpp",\n        QuickTime: "video/quicktime",\n        XMSVideo: "video/x-msvideo",\n    },\n\n    // 音频文件类型\n    Audio: {\n        MP3: "audio/mpeg",\n        WAV: "audio/wav",\n        OGG: "audio/ogg",\n        AAC: "audio/aac",\n        FLAC: "audio/flac",\n        WebM: "audio/webm",\n        Opus: "audio/opus",\n    },\n\n    // 图像文件类型\n    Image: {\n        JPEG: "image/jpeg",\n        PNG: "image/png",\n        GIF: "image/gif",\n        WebP: "image/webp",\n        BMP: "image/bmp",\n        SVG: "image/svg+xml",\n        TIFF: "image/tiff",\n    },\n\n    // 文档文件类型\n    Application: {\n        PDF: "application/pdf",\n        Word: "application/msword",\n        Excel: "application/vnd.ms-excel",\n        PowerPoint: "application/vnd.ms-powerpoint",\n        WordOpenXML:\n            "application/vnd.openxmlformats-officedocument.wordprocessingml.document",\n        ExcelOpenXML:\n            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",\n        PPTXOpenXML:\n            "application/vnd.openxmlformats-officedocument.presentationml.presentation",\n        JSON: "application/json",\n        XML: "application/xml",\n\n        // 深度学习模型文件类型\n        PyTorch: "application/pytorch-model",\n        TensorFlow: "application/tensorflow-model",\n        ONNX: "application/onnx-model",\n        Caffe: "application/caffe-model",\n        Darknet: "application/darknet-weights",\n        MXNet: "application/mxnet-model",\n        HuggingFace: "application/huggingface-model",\n    },\n\n    // 应用程序文件类型\n    App: {\n        Zip: "application/zip",\n        XZip: "application/x-zip-compressed",\n        RAR: "application/x-rar-compressed",\n        TAR: "application/x-tar",\n        "7z": "application/x-7z-compressed",\n        SH: "application/x-sh",\n        JAR: "application/java-archive",\n    },\n\n    // 字体文件类型\n    Font: {\n        WOFF: "font/woff",\n        WOFF2: "font/woff2",\n        FontWOFF: "application/font-woff",\n        FontTTF: "application/font-ttf",\n        FontOTF: "application/font-otf",\n    },\n\n    // 其他类型\n    Other: {\n        CSV: "text/csv",\n        PHP: "application/x-httpd-php",\n        OctetStream: "application/octet-stream",\n    },\n} as const\n                    \n                \n\n\n        \n    \n\n    packages/shared/src/utils/parse.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (size: string): number => {\n  const regex = /^(\\d+)(kb|mb|gb|tb)$/i;\n  const match = size.match(regex);\n\n  if (!match) {\n    throw new Error(`无效的大小格式: ${size}`);\n  }\n\n  const value = parseInt(match[1], 10);\n  const unit = match[2].toLowerCase();\n\n  switch (unit) {\n    case \'kb\':\n      return value * 1024; // KB -> 字节\n    case \'mb\':\n      return value * 1024 * 1024; // MB -> 字节\n    case \'gb\':\n      return value * 1024 * 1024 * 1024; // GB -> 字节\n    case \'tb\':\n      return value * 1024 * 1024 * 1024 * 1024; // TB -> 字节\n    default:\n      throw new Error(`不支持的单位: ${unit}`);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    packages/common/src/decorator/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'roles\'\n                    \n                \n\n\n        \n    \n\n    packages/shared/src/constants/html.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        verifyHtml\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n            \n                \n                    账号激活成功\n                    \n                        body {\n                            font-family: Arial, sans-serif;\n                            background-color: #f4f4f9;\n                            margin: 0;\n                            padding: 0;\n                            display: flex;\n                            justify-content: center;\n                            align-items: center;\n                            height: 100vh;\n                        }\n                        .container {\n                            background-color: white;\n                            padding: 20px;\n                            border-radius: 8px;\n                            text-align: center;\n                            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n                        }\n                        h1 {\n                            color: #4CAF50;\n                        }\n                        p {\n                            color: #555;\n                        }\n                        a {\n                            text-decoration: none;\n                            color: #4CAF50;\n                            font-weight: bold;\n                        }\n                    \n                \n                \n                    \n                        账号激活成功！\n                        恭喜！您的账号已经成功激活。现在您可以登录并开始使用系统。\n                    \n                \n            \n        `\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
  },
};
